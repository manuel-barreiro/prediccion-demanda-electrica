2023-10-31 10:11:33,174:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-31 10:11:33,174:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-31 10:11:33,174:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-31 10:11:33,174:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-31 10:11:33,271:INFO:PyCaret RegressionExperiment
2023-10-31 10:11:33,271:INFO:Logging name: reg-default-name
2023-10-31 10:11:33,271:INFO:ML Usecase: MLUsecase.REGRESSION
2023-10-31 10:11:33,272:INFO:version 3.1.0
2023-10-31 10:11:33,272:INFO:Initializing setup()
2023-10-31 10:11:33,272:INFO:self.USI: 838f
2023-10-31 10:11:33,272:INFO:self._variable_keys: {'memory', 'X', 'data', 'html_param', 'transform_target_param', 'log_plots_param', '_ml_usecase', 'exp_name_log', 'fold_shuffle_param', 'gpu_n_jobs_param', 'USI', 'fold_groups_param', 'X_train', 'X_test', 'y', 'pipeline', 'target_param', 'fold_generator', 'y_test', 'y_train', 'gpu_param', '_available_plots', 'exp_id', 'logging_param', 'seed', 'n_jobs_param', 'idx'}
2023-10-31 10:11:33,272:INFO:Checking environment
2023-10-31 10:11:33,272:INFO:python_version: 3.10.6
2023-10-31 10:11:33,272:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2023-10-31 10:11:33,272:INFO:machine: AMD64
2023-10-31 10:11:33,272:INFO:platform: Windows-10-10.0.22621-SP0
2023-10-31 10:11:33,272:INFO:Memory: svmem(total=8273383424, available=985223168, percent=88.1, used=7288160256, free=985223168)
2023-10-31 10:11:33,272:INFO:Physical Core: 4
2023-10-31 10:11:33,273:INFO:Logical Core: 8
2023-10-31 10:11:33,273:INFO:Checking libraries
2023-10-31 10:11:33,273:INFO:System:
2023-10-31 10:11:33,273:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2023-10-31 10:11:33,273:INFO:executable: c:\Users\manue\AppData\Local\Programs\Python\Python310\python.exe
2023-10-31 10:11:33,273:INFO:   machine: Windows-10-10.0.22621-SP0
2023-10-31 10:11:33,273:INFO:PyCaret required dependencies:
2023-10-31 10:11:33,336:INFO:                 pip: 22.2.1
2023-10-31 10:11:33,337:INFO:          setuptools: 63.2.0
2023-10-31 10:11:33,337:INFO:             pycaret: 3.1.0
2023-10-31 10:11:33,337:INFO:             IPython: 8.4.0
2023-10-31 10:11:33,337:INFO:          ipywidgets: 8.1.1
2023-10-31 10:11:33,337:INFO:                tqdm: 4.66.1
2023-10-31 10:11:33,337:INFO:               numpy: 1.23.2
2023-10-31 10:11:33,337:INFO:              pandas: 1.4.3
2023-10-31 10:11:33,337:INFO:              jinja2: 3.1.2
2023-10-31 10:11:33,337:INFO:               scipy: 1.10.1
2023-10-31 10:11:33,337:INFO:              joblib: 1.2.0
2023-10-31 10:11:33,337:INFO:             sklearn: 1.1.2
2023-10-31 10:11:33,337:INFO:                pyod: 1.1.0
2023-10-31 10:11:33,337:INFO:            imblearn: 0.11.0
2023-10-31 10:11:33,337:INFO:   category_encoders: 2.6.2
2023-10-31 10:11:33,337:INFO:            lightgbm: 4.1.0
2023-10-31 10:11:33,337:INFO:               numba: 0.58.0
2023-10-31 10:11:33,337:INFO:            requests: 2.28.1
2023-10-31 10:11:33,337:INFO:          matplotlib: 3.6.0
2023-10-31 10:11:33,337:INFO:          scikitplot: 0.3.7
2023-10-31 10:11:33,337:INFO:         yellowbrick: 1.5
2023-10-31 10:11:33,337:INFO:              plotly: 5.17.0
2023-10-31 10:11:33,337:INFO:    plotly-resampler: Not installed
2023-10-31 10:11:33,337:INFO:             kaleido: 0.2.1
2023-10-31 10:11:33,337:INFO:           schemdraw: 0.15
2023-10-31 10:11:33,337:INFO:         statsmodels: 0.13.2
2023-10-31 10:11:33,337:INFO:              sktime: 0.21.1
2023-10-31 10:11:33,337:INFO:               tbats: 1.1.3
2023-10-31 10:11:33,337:INFO:            pmdarima: 2.0.3
2023-10-31 10:11:33,337:INFO:              psutil: 5.9.1
2023-10-31 10:11:33,337:INFO:          markupsafe: 2.1.1
2023-10-31 10:11:33,337:INFO:             pickle5: Not installed
2023-10-31 10:11:33,337:INFO:         cloudpickle: 2.2.1
2023-10-31 10:11:33,338:INFO:         deprecation: 2.1.0
2023-10-31 10:11:33,338:INFO:              xxhash: 3.4.1
2023-10-31 10:11:33,338:INFO:           wurlitzer: Not installed
2023-10-31 10:11:33,338:INFO:PyCaret optional dependencies:
2023-10-31 10:11:33,461:INFO:                shap: Not installed
2023-10-31 10:11:33,461:INFO:           interpret: Not installed
2023-10-31 10:11:33,461:INFO:                umap: Not installed
2023-10-31 10:11:33,461:INFO:     ydata_profiling: Not installed
2023-10-31 10:11:33,461:INFO:  explainerdashboard: Not installed
2023-10-31 10:11:33,461:INFO:             autoviz: Not installed
2023-10-31 10:11:33,461:INFO:           fairlearn: Not installed
2023-10-31 10:11:33,461:INFO:          deepchecks: Not installed
2023-10-31 10:11:33,461:INFO:             xgboost: 2.0.0
2023-10-31 10:11:33,461:INFO:            catboost: Not installed
2023-10-31 10:11:33,461:INFO:              kmodes: Not installed
2023-10-31 10:11:33,461:INFO:             mlxtend: Not installed
2023-10-31 10:11:33,461:INFO:       statsforecast: Not installed
2023-10-31 10:11:33,461:INFO:        tune_sklearn: Not installed
2023-10-31 10:11:33,461:INFO:                 ray: Not installed
2023-10-31 10:11:33,461:INFO:            hyperopt: Not installed
2023-10-31 10:11:33,461:INFO:              optuna: Not installed
2023-10-31 10:11:33,462:INFO:               skopt: Not installed
2023-10-31 10:11:33,462:INFO:              mlflow: Not installed
2023-10-31 10:11:33,462:INFO:              gradio: Not installed
2023-10-31 10:11:33,462:INFO:             fastapi: Not installed
2023-10-31 10:11:33,462:INFO:             uvicorn: Not installed
2023-10-31 10:11:33,462:INFO:              m2cgen: Not installed
2023-10-31 10:11:33,462:INFO:           evidently: Not installed
2023-10-31 10:11:33,462:INFO:               fugue: Not installed
2023-10-31 10:11:33,462:INFO:           streamlit: Not installed
2023-10-31 10:11:33,462:INFO:             prophet: 1.1.5
2023-10-31 10:11:33,462:INFO:None
2023-10-31 10:11:33,462:INFO:Set up data.
2023-10-31 10:11:33,469:INFO:Set up folding strategy.
2023-10-31 10:12:21,621:INFO:PyCaret RegressionExperiment
2023-10-31 10:12:21,621:INFO:Logging name: reg-default-name
2023-10-31 10:12:21,621:INFO:ML Usecase: MLUsecase.REGRESSION
2023-10-31 10:12:21,621:INFO:version 3.1.0
2023-10-31 10:12:21,621:INFO:Initializing setup()
2023-10-31 10:12:21,621:INFO:self.USI: eaf0
2023-10-31 10:12:21,621:INFO:self._variable_keys: {'memory', 'X', 'data', 'html_param', 'transform_target_param', 'log_plots_param', '_ml_usecase', 'exp_name_log', 'fold_shuffle_param', 'gpu_n_jobs_param', 'USI', 'fold_groups_param', 'X_train', 'X_test', 'y', 'pipeline', 'target_param', 'fold_generator', 'y_test', 'y_train', 'gpu_param', '_available_plots', 'exp_id', 'logging_param', 'seed', 'n_jobs_param', 'idx'}
2023-10-31 10:12:21,621:INFO:Checking environment
2023-10-31 10:12:21,621:INFO:python_version: 3.10.6
2023-10-31 10:12:21,621:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2023-10-31 10:12:21,622:INFO:machine: AMD64
2023-10-31 10:12:21,622:INFO:platform: Windows-10-10.0.22621-SP0
2023-10-31 10:12:21,622:INFO:Memory: svmem(total=8273383424, available=1003790336, percent=87.9, used=7269593088, free=1003790336)
2023-10-31 10:12:21,622:INFO:Physical Core: 4
2023-10-31 10:12:21,622:INFO:Logical Core: 8
2023-10-31 10:12:21,622:INFO:Checking libraries
2023-10-31 10:12:21,622:INFO:System:
2023-10-31 10:12:21,622:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2023-10-31 10:12:21,622:INFO:executable: c:\Users\manue\AppData\Local\Programs\Python\Python310\python.exe
2023-10-31 10:12:21,622:INFO:   machine: Windows-10-10.0.22621-SP0
2023-10-31 10:12:21,622:INFO:PyCaret required dependencies:
2023-10-31 10:12:21,622:INFO:                 pip: 22.2.1
2023-10-31 10:12:21,622:INFO:          setuptools: 63.2.0
2023-10-31 10:12:21,622:INFO:             pycaret: 3.1.0
2023-10-31 10:12:21,622:INFO:             IPython: 8.4.0
2023-10-31 10:12:21,623:INFO:          ipywidgets: 8.1.1
2023-10-31 10:12:21,623:INFO:                tqdm: 4.66.1
2023-10-31 10:12:21,623:INFO:               numpy: 1.23.2
2023-10-31 10:12:21,623:INFO:              pandas: 1.4.3
2023-10-31 10:12:21,623:INFO:              jinja2: 3.1.2
2023-10-31 10:12:21,623:INFO:               scipy: 1.10.1
2023-10-31 10:12:21,623:INFO:              joblib: 1.2.0
2023-10-31 10:12:21,623:INFO:             sklearn: 1.1.2
2023-10-31 10:12:21,623:INFO:                pyod: 1.1.0
2023-10-31 10:12:21,623:INFO:            imblearn: 0.11.0
2023-10-31 10:12:21,623:INFO:   category_encoders: 2.6.2
2023-10-31 10:12:21,623:INFO:            lightgbm: 4.1.0
2023-10-31 10:12:21,623:INFO:               numba: 0.58.0
2023-10-31 10:12:21,623:INFO:            requests: 2.28.1
2023-10-31 10:12:21,623:INFO:          matplotlib: 3.6.0
2023-10-31 10:12:21,623:INFO:          scikitplot: 0.3.7
2023-10-31 10:12:21,623:INFO:         yellowbrick: 1.5
2023-10-31 10:12:21,623:INFO:              plotly: 5.17.0
2023-10-31 10:12:21,623:INFO:    plotly-resampler: Not installed
2023-10-31 10:12:21,623:INFO:             kaleido: 0.2.1
2023-10-31 10:12:21,623:INFO:           schemdraw: 0.15
2023-10-31 10:12:21,623:INFO:         statsmodels: 0.13.2
2023-10-31 10:12:21,623:INFO:              sktime: 0.21.1
2023-10-31 10:12:21,623:INFO:               tbats: 1.1.3
2023-10-31 10:12:21,623:INFO:            pmdarima: 2.0.3
2023-10-31 10:12:21,623:INFO:              psutil: 5.9.1
2023-10-31 10:12:21,623:INFO:          markupsafe: 2.1.1
2023-10-31 10:12:21,623:INFO:             pickle5: Not installed
2023-10-31 10:12:21,623:INFO:         cloudpickle: 2.2.1
2023-10-31 10:12:21,624:INFO:         deprecation: 2.1.0
2023-10-31 10:12:21,624:INFO:              xxhash: 3.4.1
2023-10-31 10:12:21,624:INFO:           wurlitzer: Not installed
2023-10-31 10:12:21,624:INFO:PyCaret optional dependencies:
2023-10-31 10:12:21,624:INFO:                shap: Not installed
2023-10-31 10:12:21,624:INFO:           interpret: Not installed
2023-10-31 10:12:21,624:INFO:                umap: Not installed
2023-10-31 10:12:21,624:INFO:     ydata_profiling: Not installed
2023-10-31 10:12:21,624:INFO:  explainerdashboard: Not installed
2023-10-31 10:12:21,624:INFO:             autoviz: Not installed
2023-10-31 10:12:21,624:INFO:           fairlearn: Not installed
2023-10-31 10:12:21,624:INFO:          deepchecks: Not installed
2023-10-31 10:12:21,624:INFO:             xgboost: 2.0.0
2023-10-31 10:12:21,624:INFO:            catboost: Not installed
2023-10-31 10:12:21,624:INFO:              kmodes: Not installed
2023-10-31 10:12:21,624:INFO:             mlxtend: Not installed
2023-10-31 10:12:21,624:INFO:       statsforecast: Not installed
2023-10-31 10:12:21,624:INFO:        tune_sklearn: Not installed
2023-10-31 10:12:21,624:INFO:                 ray: Not installed
2023-10-31 10:12:21,624:INFO:            hyperopt: Not installed
2023-10-31 10:12:21,624:INFO:              optuna: Not installed
2023-10-31 10:12:21,624:INFO:               skopt: Not installed
2023-10-31 10:12:21,624:INFO:              mlflow: Not installed
2023-10-31 10:12:21,624:INFO:              gradio: Not installed
2023-10-31 10:12:21,624:INFO:             fastapi: Not installed
2023-10-31 10:12:21,624:INFO:             uvicorn: Not installed
2023-10-31 10:12:21,624:INFO:              m2cgen: Not installed
2023-10-31 10:12:21,624:INFO:           evidently: Not installed
2023-10-31 10:12:21,624:INFO:               fugue: Not installed
2023-10-31 10:12:21,624:INFO:           streamlit: Not installed
2023-10-31 10:12:21,624:INFO:             prophet: 1.1.5
2023-10-31 10:12:21,624:INFO:None
2023-10-31 10:12:21,625:INFO:Set up data.
2023-10-31 10:12:21,628:INFO:Set up folding strategy.
2023-10-31 10:12:21,628:INFO:Set up train/test split.
2023-10-31 10:12:21,628:INFO:Set up data.
2023-10-31 10:12:21,632:INFO:Set up index.
2023-10-31 10:12:21,632:INFO:Assigning column types.
2023-10-31 10:12:21,637:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-10-31 10:12:21,638:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-10-31 10:12:21,642:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-31 10:12:21,646:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 10:12:21,704:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 10:12:21,743:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 10:12:21,744:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 10:12:21,747:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 10:12:21,747:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-10-31 10:12:21,751:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-31 10:12:21,756:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 10:12:21,808:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 10:12:21,846:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 10:12:21,847:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 10:12:21,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 10:12:21,850:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-10-31 10:12:21,854:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-31 10:12:21,858:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 10:12:21,911:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 10:12:21,950:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 10:12:21,950:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 10:12:21,953:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 10:12:21,957:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-31 10:12:21,961:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 10:12:22,012:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 10:12:22,050:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 10:12:22,051:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 10:12:22,053:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 10:12:22,053:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-10-31 10:12:22,062:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 10:12:22,128:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 10:12:22,179:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 10:12:22,180:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 10:12:22,183:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 10:12:22,193:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 10:12:22,245:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 10:12:22,285:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 10:12:22,286:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 10:12:22,288:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 10:12:22,288:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-10-31 10:12:22,347:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 10:12:22,385:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 10:12:22,385:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 10:12:22,388:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 10:12:22,448:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 10:12:22,486:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 10:12:22,486:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 10:12:22,488:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 10:12:22,489:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-10-31 10:12:22,547:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 10:12:22,588:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 10:12:22,589:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 10:12:22,652:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 10:12:22,734:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 10:12:22,736:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 10:12:22,737:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-10-31 10:12:22,840:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 10:12:22,842:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 10:12:22,936:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 10:12:22,938:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 10:12:22,939:INFO:Preparing preprocessing pipeline...
2023-10-31 10:12:22,939:INFO:Set up target transformation.
2023-10-31 10:12:22,939:INFO:Set up simple imputation.
2023-10-31 10:12:22,978:INFO:Finished creating preprocessing pipeline.
2023-10-31 10:12:22,984:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\manue\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['Year', 'Series'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-10-31 10:12:22,984:INFO:Creating final display dataframe.
2023-10-31 10:12:23,074:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             valor
2                   Target type        Regression
3           Original data shape         (6147, 4)
4        Transformed data shape         (6147, 4)
5   Transformed train set shape         (6099, 4)
6    Transformed test set shape           (48, 4)
7              Numeric features                 2
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12             Transform target              True
13      Transform target method       yeo-johnson
14               Fold Generator   TimeSeriesSplit
15                  Fold Number                 3
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  reg-default-name
20                          USI              eaf0
2023-10-31 10:12:23,186:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 10:12:23,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 10:12:23,285:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 10:12:23,287:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 10:12:23,288:INFO:setup() successfully completed in 1.67s...............
2023-10-31 10:12:40,390:INFO:Initializing compare_models()
2023-10-31 10:12:40,390:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7AA5BD1E0>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001E7AA5BD1E0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-10-31 10:12:40,390:INFO:Checking exceptions
2023-10-31 10:12:40,392:INFO:Preparing display monitor
2023-10-31 10:12:40,432:INFO:Initializing Linear Regression
2023-10-31 10:12:40,432:INFO:Total runtime is 0.0 minutes
2023-10-31 10:12:40,436:INFO:SubProcess create_model() called ==================================
2023-10-31 10:12:40,436:INFO:Initializing create_model()
2023-10-31 10:12:40,436:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7AA5BD1E0>, estimator=lr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7AA5BD3F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 10:12:40,436:INFO:Checking exceptions
2023-10-31 10:12:40,436:INFO:Importing libraries
2023-10-31 10:12:40,436:INFO:Copying training dataset
2023-10-31 10:12:40,442:INFO:Defining folds
2023-10-31 10:12:40,443:INFO:Declaring metric variables
2023-10-31 10:12:40,447:INFO:Importing untrained model
2023-10-31 10:12:40,452:INFO:Linear Regression Imported successfully
2023-10-31 10:12:40,460:INFO:Starting cross validation
2023-10-31 10:12:40,477:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-31 10:12:43,843:INFO:Calculating mean and std
2023-10-31 10:12:43,847:INFO:Creating metrics dataframe
2023-10-31 10:12:43,852:INFO:Uploading results into container
2023-10-31 10:12:43,853:INFO:Uploading model into container now
2023-10-31 10:12:43,855:INFO:_master_model_container: 1
2023-10-31 10:12:43,855:INFO:_display_container: 2
2023-10-31 10:12:43,857:INFO:LinearRegression(n_jobs=-1)
2023-10-31 10:12:43,857:INFO:create_model() successfully completed......................................
2023-10-31 10:12:44,052:INFO:SubProcess create_model() end ==================================
2023-10-31 10:12:44,052:INFO:Creating metrics dataframe
2023-10-31 10:12:44,060:INFO:Initializing Lasso Regression
2023-10-31 10:12:44,060:INFO:Total runtime is 0.060463301340738934 minutes
2023-10-31 10:12:44,063:INFO:SubProcess create_model() called ==================================
2023-10-31 10:12:44,063:INFO:Initializing create_model()
2023-10-31 10:12:44,063:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7AA5BD1E0>, estimator=lasso, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7AA5BD3F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 10:12:44,063:INFO:Checking exceptions
2023-10-31 10:12:44,063:INFO:Importing libraries
2023-10-31 10:12:44,063:INFO:Copying training dataset
2023-10-31 10:12:44,068:INFO:Defining folds
2023-10-31 10:12:44,069:INFO:Declaring metric variables
2023-10-31 10:12:44,074:INFO:Importing untrained model
2023-10-31 10:12:44,078:INFO:Lasso Regression Imported successfully
2023-10-31 10:12:44,085:INFO:Starting cross validation
2023-10-31 10:12:44,087:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-31 10:12:46,049:INFO:Calculating mean and std
2023-10-31 10:12:46,051:INFO:Creating metrics dataframe
2023-10-31 10:12:46,059:INFO:Uploading results into container
2023-10-31 10:12:46,060:INFO:Uploading model into container now
2023-10-31 10:12:46,061:INFO:_master_model_container: 2
2023-10-31 10:12:46,061:INFO:_display_container: 2
2023-10-31 10:12:46,062:INFO:Lasso(random_state=123)
2023-10-31 10:12:46,063:INFO:create_model() successfully completed......................................
2023-10-31 10:12:46,252:INFO:SubProcess create_model() end ==================================
2023-10-31 10:12:46,252:INFO:Creating metrics dataframe
2023-10-31 10:12:46,261:INFO:Initializing Ridge Regression
2023-10-31 10:12:46,261:INFO:Total runtime is 0.09715807437896729 minutes
2023-10-31 10:12:46,265:INFO:SubProcess create_model() called ==================================
2023-10-31 10:12:46,265:INFO:Initializing create_model()
2023-10-31 10:12:46,266:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7AA5BD1E0>, estimator=ridge, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7AA5BD3F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 10:12:46,266:INFO:Checking exceptions
2023-10-31 10:12:46,266:INFO:Importing libraries
2023-10-31 10:12:46,266:INFO:Copying training dataset
2023-10-31 10:12:46,270:INFO:Defining folds
2023-10-31 10:12:46,270:INFO:Declaring metric variables
2023-10-31 10:12:46,273:INFO:Importing untrained model
2023-10-31 10:12:46,278:INFO:Ridge Regression Imported successfully
2023-10-31 10:12:46,285:INFO:Starting cross validation
2023-10-31 10:12:46,285:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-31 10:12:48,307:INFO:Calculating mean and std
2023-10-31 10:12:48,312:INFO:Creating metrics dataframe
2023-10-31 10:12:48,316:INFO:Uploading results into container
2023-10-31 10:12:48,317:INFO:Uploading model into container now
2023-10-31 10:12:48,317:INFO:_master_model_container: 3
2023-10-31 10:12:48,317:INFO:_display_container: 2
2023-10-31 10:12:48,318:INFO:Ridge(random_state=123)
2023-10-31 10:12:48,318:INFO:create_model() successfully completed......................................
2023-10-31 10:12:48,554:INFO:SubProcess create_model() end ==================================
2023-10-31 10:12:48,555:INFO:Creating metrics dataframe
2023-10-31 10:12:48,568:INFO:Initializing Elastic Net
2023-10-31 10:12:48,568:INFO:Total runtime is 0.13559751907984416 minutes
2023-10-31 10:12:48,576:INFO:SubProcess create_model() called ==================================
2023-10-31 10:12:48,576:INFO:Initializing create_model()
2023-10-31 10:12:48,576:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7AA5BD1E0>, estimator=en, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7AA5BD3F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 10:12:48,577:INFO:Checking exceptions
2023-10-31 10:12:48,577:INFO:Importing libraries
2023-10-31 10:12:48,577:INFO:Copying training dataset
2023-10-31 10:12:48,583:INFO:Defining folds
2023-10-31 10:12:48,583:INFO:Declaring metric variables
2023-10-31 10:12:48,591:INFO:Importing untrained model
2023-10-31 10:12:48,597:INFO:Elastic Net Imported successfully
2023-10-31 10:12:48,609:INFO:Starting cross validation
2023-10-31 10:12:48,611:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-31 10:12:48,678:INFO:Calculating mean and std
2023-10-31 10:12:48,678:INFO:Creating metrics dataframe
2023-10-31 10:12:48,680:INFO:Uploading results into container
2023-10-31 10:12:48,681:INFO:Uploading model into container now
2023-10-31 10:12:48,681:INFO:_master_model_container: 4
2023-10-31 10:12:48,681:INFO:_display_container: 2
2023-10-31 10:12:48,681:INFO:ElasticNet(random_state=123)
2023-10-31 10:12:48,681:INFO:create_model() successfully completed......................................
2023-10-31 10:12:48,833:INFO:SubProcess create_model() end ==================================
2023-10-31 10:12:48,833:INFO:Creating metrics dataframe
2023-10-31 10:12:48,843:INFO:Initializing Least Angle Regression
2023-10-31 10:12:48,843:INFO:Total runtime is 0.1401815931002299 minutes
2023-10-31 10:12:48,846:INFO:SubProcess create_model() called ==================================
2023-10-31 10:12:48,846:INFO:Initializing create_model()
2023-10-31 10:12:48,846:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7AA5BD1E0>, estimator=lar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7AA5BD3F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 10:12:48,846:INFO:Checking exceptions
2023-10-31 10:12:48,846:INFO:Importing libraries
2023-10-31 10:12:48,846:INFO:Copying training dataset
2023-10-31 10:12:48,851:INFO:Defining folds
2023-10-31 10:12:48,851:INFO:Declaring metric variables
2023-10-31 10:12:48,855:INFO:Importing untrained model
2023-10-31 10:12:48,859:INFO:Least Angle Regression Imported successfully
2023-10-31 10:12:48,867:INFO:Starting cross validation
2023-10-31 10:12:48,868:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-31 10:12:48,925:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-31 10:12:48,925:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-31 10:12:48,941:INFO:Calculating mean and std
2023-10-31 10:12:48,941:INFO:Creating metrics dataframe
2023-10-31 10:12:48,944:INFO:Uploading results into container
2023-10-31 10:12:48,944:INFO:Uploading model into container now
2023-10-31 10:12:48,945:INFO:_master_model_container: 5
2023-10-31 10:12:48,945:INFO:_display_container: 2
2023-10-31 10:12:48,945:INFO:Lars(random_state=123)
2023-10-31 10:12:48,945:INFO:create_model() successfully completed......................................
2023-10-31 10:12:49,099:INFO:SubProcess create_model() end ==================================
2023-10-31 10:12:49,099:INFO:Creating metrics dataframe
2023-10-31 10:12:49,109:INFO:Initializing Lasso Least Angle Regression
2023-10-31 10:12:49,109:INFO:Total runtime is 0.14462130864461265 minutes
2023-10-31 10:12:49,111:INFO:SubProcess create_model() called ==================================
2023-10-31 10:12:49,111:INFO:Initializing create_model()
2023-10-31 10:12:49,111:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7AA5BD1E0>, estimator=llar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7AA5BD3F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 10:12:49,111:INFO:Checking exceptions
2023-10-31 10:12:49,113:INFO:Importing libraries
2023-10-31 10:12:49,113:INFO:Copying training dataset
2023-10-31 10:12:49,117:INFO:Defining folds
2023-10-31 10:12:49,117:INFO:Declaring metric variables
2023-10-31 10:12:49,121:INFO:Importing untrained model
2023-10-31 10:12:49,126:INFO:Lasso Least Angle Regression Imported successfully
2023-10-31 10:12:49,134:INFO:Starting cross validation
2023-10-31 10:12:49,135:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-31 10:12:49,168:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-31 10:12:49,177:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-31 10:12:49,180:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-31 10:12:49,192:INFO:Calculating mean and std
2023-10-31 10:12:49,192:INFO:Creating metrics dataframe
2023-10-31 10:12:49,195:INFO:Uploading results into container
2023-10-31 10:12:49,195:INFO:Uploading model into container now
2023-10-31 10:12:49,196:INFO:_master_model_container: 6
2023-10-31 10:12:49,196:INFO:_display_container: 2
2023-10-31 10:12:49,196:INFO:LassoLars(random_state=123)
2023-10-31 10:12:49,196:INFO:create_model() successfully completed......................................
2023-10-31 10:12:49,349:INFO:SubProcess create_model() end ==================================
2023-10-31 10:12:49,349:INFO:Creating metrics dataframe
2023-10-31 10:12:49,360:INFO:Initializing Orthogonal Matching Pursuit
2023-10-31 10:12:49,360:INFO:Total runtime is 0.14879535833994548 minutes
2023-10-31 10:12:49,362:INFO:SubProcess create_model() called ==================================
2023-10-31 10:12:49,363:INFO:Initializing create_model()
2023-10-31 10:12:49,363:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7AA5BD1E0>, estimator=omp, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7AA5BD3F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 10:12:49,363:INFO:Checking exceptions
2023-10-31 10:12:49,363:INFO:Importing libraries
2023-10-31 10:12:49,363:INFO:Copying training dataset
2023-10-31 10:12:49,367:INFO:Defining folds
2023-10-31 10:12:49,367:INFO:Declaring metric variables
2023-10-31 10:12:49,373:INFO:Importing untrained model
2023-10-31 10:12:49,377:INFO:Orthogonal Matching Pursuit Imported successfully
2023-10-31 10:12:49,383:INFO:Starting cross validation
2023-10-31 10:12:49,384:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-31 10:12:49,416:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-31 10:12:49,417:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-31 10:12:49,418:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-31 10:12:49,436:INFO:Calculating mean and std
2023-10-31 10:12:49,437:INFO:Creating metrics dataframe
2023-10-31 10:12:49,440:INFO:Uploading results into container
2023-10-31 10:12:49,440:INFO:Uploading model into container now
2023-10-31 10:12:49,440:INFO:_master_model_container: 7
2023-10-31 10:12:49,440:INFO:_display_container: 2
2023-10-31 10:12:49,441:INFO:OrthogonalMatchingPursuit()
2023-10-31 10:12:49,441:INFO:create_model() successfully completed......................................
2023-10-31 10:12:49,596:INFO:SubProcess create_model() end ==================================
2023-10-31 10:12:49,596:INFO:Creating metrics dataframe
2023-10-31 10:12:49,606:INFO:Initializing Bayesian Ridge
2023-10-31 10:12:49,606:INFO:Total runtime is 0.15290532112121583 minutes
2023-10-31 10:12:49,609:INFO:SubProcess create_model() called ==================================
2023-10-31 10:12:49,609:INFO:Initializing create_model()
2023-10-31 10:12:49,609:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7AA5BD1E0>, estimator=br, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7AA5BD3F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 10:12:49,610:INFO:Checking exceptions
2023-10-31 10:12:49,610:INFO:Importing libraries
2023-10-31 10:12:49,610:INFO:Copying training dataset
2023-10-31 10:12:49,615:INFO:Defining folds
2023-10-31 10:12:49,615:INFO:Declaring metric variables
2023-10-31 10:12:49,618:INFO:Importing untrained model
2023-10-31 10:12:49,623:INFO:Bayesian Ridge Imported successfully
2023-10-31 10:12:49,630:INFO:Starting cross validation
2023-10-31 10:12:49,631:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-31 10:12:49,683:INFO:Calculating mean and std
2023-10-31 10:12:49,683:INFO:Creating metrics dataframe
2023-10-31 10:12:49,685:INFO:Uploading results into container
2023-10-31 10:12:49,686:INFO:Uploading model into container now
2023-10-31 10:12:49,687:INFO:_master_model_container: 8
2023-10-31 10:12:49,687:INFO:_display_container: 2
2023-10-31 10:12:49,687:INFO:BayesianRidge()
2023-10-31 10:12:49,687:INFO:create_model() successfully completed......................................
2023-10-31 10:12:49,839:INFO:SubProcess create_model() end ==================================
2023-10-31 10:12:49,839:INFO:Creating metrics dataframe
2023-10-31 10:12:49,848:INFO:Initializing Passive Aggressive Regressor
2023-10-31 10:12:49,848:INFO:Total runtime is 0.1569362203280131 minutes
2023-10-31 10:12:49,850:INFO:SubProcess create_model() called ==================================
2023-10-31 10:12:49,851:INFO:Initializing create_model()
2023-10-31 10:12:49,851:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7AA5BD1E0>, estimator=par, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7AA5BD3F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 10:12:49,851:INFO:Checking exceptions
2023-10-31 10:12:49,851:INFO:Importing libraries
2023-10-31 10:12:49,851:INFO:Copying training dataset
2023-10-31 10:12:49,860:INFO:Defining folds
2023-10-31 10:12:49,860:INFO:Declaring metric variables
2023-10-31 10:12:49,863:INFO:Importing untrained model
2023-10-31 10:12:49,866:INFO:Passive Aggressive Regressor Imported successfully
2023-10-31 10:12:49,874:INFO:Starting cross validation
2023-10-31 10:12:49,875:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-31 10:12:49,924:INFO:Calculating mean and std
2023-10-31 10:12:49,924:INFO:Creating metrics dataframe
2023-10-31 10:12:49,926:INFO:Uploading results into container
2023-10-31 10:12:49,927:INFO:Uploading model into container now
2023-10-31 10:12:49,927:INFO:_master_model_container: 9
2023-10-31 10:12:49,927:INFO:_display_container: 2
2023-10-31 10:12:49,927:INFO:PassiveAggressiveRegressor(random_state=123)
2023-10-31 10:12:49,927:INFO:create_model() successfully completed......................................
2023-10-31 10:12:50,125:INFO:SubProcess create_model() end ==================================
2023-10-31 10:12:50,125:INFO:Creating metrics dataframe
2023-10-31 10:12:50,134:INFO:Initializing Huber Regressor
2023-10-31 10:12:50,134:INFO:Total runtime is 0.16170768737792968 minutes
2023-10-31 10:12:50,139:INFO:SubProcess create_model() called ==================================
2023-10-31 10:12:50,139:INFO:Initializing create_model()
2023-10-31 10:12:50,139:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7AA5BD1E0>, estimator=huber, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7AA5BD3F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 10:12:50,139:INFO:Checking exceptions
2023-10-31 10:12:50,139:INFO:Importing libraries
2023-10-31 10:12:50,139:INFO:Copying training dataset
2023-10-31 10:12:50,144:INFO:Defining folds
2023-10-31 10:12:50,145:INFO:Declaring metric variables
2023-10-31 10:12:50,147:INFO:Importing untrained model
2023-10-31 10:12:50,151:INFO:Huber Regressor Imported successfully
2023-10-31 10:12:50,157:INFO:Starting cross validation
2023-10-31 10:12:50,159:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-31 10:12:50,243:INFO:Calculating mean and std
2023-10-31 10:12:50,243:INFO:Creating metrics dataframe
2023-10-31 10:12:50,247:INFO:Uploading results into container
2023-10-31 10:12:50,247:INFO:Uploading model into container now
2023-10-31 10:12:50,247:INFO:_master_model_container: 10
2023-10-31 10:12:50,247:INFO:_display_container: 2
2023-10-31 10:12:50,247:INFO:HuberRegressor()
2023-10-31 10:12:50,247:INFO:create_model() successfully completed......................................
2023-10-31 10:12:50,401:INFO:SubProcess create_model() end ==================================
2023-10-31 10:12:50,401:INFO:Creating metrics dataframe
2023-10-31 10:12:50,412:INFO:Initializing K Neighbors Regressor
2023-10-31 10:12:50,412:INFO:Total runtime is 0.16633423169453937 minutes
2023-10-31 10:12:50,415:INFO:SubProcess create_model() called ==================================
2023-10-31 10:12:50,415:INFO:Initializing create_model()
2023-10-31 10:12:50,415:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7AA5BD1E0>, estimator=knn, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7AA5BD3F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 10:12:50,415:INFO:Checking exceptions
2023-10-31 10:12:50,415:INFO:Importing libraries
2023-10-31 10:12:50,415:INFO:Copying training dataset
2023-10-31 10:12:50,422:INFO:Defining folds
2023-10-31 10:12:50,422:INFO:Declaring metric variables
2023-10-31 10:12:50,425:INFO:Importing untrained model
2023-10-31 10:12:50,427:INFO:K Neighbors Regressor Imported successfully
2023-10-31 10:12:50,436:INFO:Starting cross validation
2023-10-31 10:12:50,437:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-31 10:12:50,501:INFO:Calculating mean and std
2023-10-31 10:12:50,501:INFO:Creating metrics dataframe
2023-10-31 10:12:50,506:INFO:Uploading results into container
2023-10-31 10:12:50,506:INFO:Uploading model into container now
2023-10-31 10:12:50,507:INFO:_master_model_container: 11
2023-10-31 10:12:50,507:INFO:_display_container: 2
2023-10-31 10:12:50,507:INFO:KNeighborsRegressor(n_jobs=-1)
2023-10-31 10:12:50,507:INFO:create_model() successfully completed......................................
2023-10-31 10:12:50,660:INFO:SubProcess create_model() end ==================================
2023-10-31 10:12:50,660:INFO:Creating metrics dataframe
2023-10-31 10:12:50,670:INFO:Initializing Decision Tree Regressor
2023-10-31 10:12:50,670:INFO:Total runtime is 0.17064040104548134 minutes
2023-10-31 10:12:50,673:INFO:SubProcess create_model() called ==================================
2023-10-31 10:12:50,674:INFO:Initializing create_model()
2023-10-31 10:12:50,674:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7AA5BD1E0>, estimator=dt, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7AA5BD3F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 10:12:50,674:INFO:Checking exceptions
2023-10-31 10:12:50,674:INFO:Importing libraries
2023-10-31 10:12:50,674:INFO:Copying training dataset
2023-10-31 10:12:50,679:INFO:Defining folds
2023-10-31 10:12:50,679:INFO:Declaring metric variables
2023-10-31 10:12:50,683:INFO:Importing untrained model
2023-10-31 10:12:50,688:INFO:Decision Tree Regressor Imported successfully
2023-10-31 10:12:50,695:INFO:Starting cross validation
2023-10-31 10:12:50,697:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-31 10:12:50,756:INFO:Calculating mean and std
2023-10-31 10:12:50,757:INFO:Creating metrics dataframe
2023-10-31 10:12:50,761:INFO:Uploading results into container
2023-10-31 10:12:50,761:INFO:Uploading model into container now
2023-10-31 10:12:50,762:INFO:_master_model_container: 12
2023-10-31 10:12:50,762:INFO:_display_container: 2
2023-10-31 10:12:50,763:INFO:DecisionTreeRegressor(random_state=123)
2023-10-31 10:12:50,763:INFO:create_model() successfully completed......................................
2023-10-31 10:12:50,912:INFO:SubProcess create_model() end ==================================
2023-10-31 10:12:50,912:INFO:Creating metrics dataframe
2023-10-31 10:12:50,923:INFO:Initializing Random Forest Regressor
2023-10-31 10:12:50,923:INFO:Total runtime is 0.1748476187388102 minutes
2023-10-31 10:12:50,927:INFO:SubProcess create_model() called ==================================
2023-10-31 10:12:50,927:INFO:Initializing create_model()
2023-10-31 10:12:50,927:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7AA5BD1E0>, estimator=rf, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7AA5BD3F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 10:12:50,928:INFO:Checking exceptions
2023-10-31 10:12:50,928:INFO:Importing libraries
2023-10-31 10:12:50,928:INFO:Copying training dataset
2023-10-31 10:12:50,933:INFO:Defining folds
2023-10-31 10:12:50,933:INFO:Declaring metric variables
2023-10-31 10:12:50,939:INFO:Importing untrained model
2023-10-31 10:12:50,944:INFO:Random Forest Regressor Imported successfully
2023-10-31 10:12:50,950:INFO:Starting cross validation
2023-10-31 10:12:50,951:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-31 10:12:51,296:INFO:Calculating mean and std
2023-10-31 10:12:51,297:INFO:Creating metrics dataframe
2023-10-31 10:12:51,300:INFO:Uploading results into container
2023-10-31 10:12:51,300:INFO:Uploading model into container now
2023-10-31 10:12:51,301:INFO:_master_model_container: 13
2023-10-31 10:12:51,301:INFO:_display_container: 2
2023-10-31 10:12:51,303:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-10-31 10:12:51,303:INFO:create_model() successfully completed......................................
2023-10-31 10:12:51,457:INFO:SubProcess create_model() end ==================================
2023-10-31 10:12:51,457:INFO:Creating metrics dataframe
2023-10-31 10:12:51,467:INFO:Initializing Extra Trees Regressor
2023-10-31 10:12:51,467:INFO:Total runtime is 0.18391031424204504 minutes
2023-10-31 10:12:51,470:INFO:SubProcess create_model() called ==================================
2023-10-31 10:12:51,471:INFO:Initializing create_model()
2023-10-31 10:12:51,471:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7AA5BD1E0>, estimator=et, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7AA5BD3F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 10:12:51,471:INFO:Checking exceptions
2023-10-31 10:12:51,471:INFO:Importing libraries
2023-10-31 10:12:51,471:INFO:Copying training dataset
2023-10-31 10:12:51,476:INFO:Defining folds
2023-10-31 10:12:51,476:INFO:Declaring metric variables
2023-10-31 10:12:51,480:INFO:Importing untrained model
2023-10-31 10:12:51,483:INFO:Extra Trees Regressor Imported successfully
2023-10-31 10:12:51,491:INFO:Starting cross validation
2023-10-31 10:12:51,491:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-31 10:12:51,793:INFO:Calculating mean and std
2023-10-31 10:12:51,795:INFO:Creating metrics dataframe
2023-10-31 10:12:51,798:INFO:Uploading results into container
2023-10-31 10:12:51,799:INFO:Uploading model into container now
2023-10-31 10:12:51,799:INFO:_master_model_container: 14
2023-10-31 10:12:51,799:INFO:_display_container: 2
2023-10-31 10:12:51,799:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-10-31 10:12:51,800:INFO:create_model() successfully completed......................................
2023-10-31 10:12:51,958:INFO:SubProcess create_model() end ==================================
2023-10-31 10:12:51,958:INFO:Creating metrics dataframe
2023-10-31 10:12:51,970:INFO:Initializing AdaBoost Regressor
2023-10-31 10:12:51,970:INFO:Total runtime is 0.192302393913269 minutes
2023-10-31 10:12:51,973:INFO:SubProcess create_model() called ==================================
2023-10-31 10:12:51,974:INFO:Initializing create_model()
2023-10-31 10:12:51,974:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7AA5BD1E0>, estimator=ada, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7AA5BD3F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 10:12:51,974:INFO:Checking exceptions
2023-10-31 10:12:51,974:INFO:Importing libraries
2023-10-31 10:12:51,974:INFO:Copying training dataset
2023-10-31 10:12:51,979:INFO:Defining folds
2023-10-31 10:12:51,979:INFO:Declaring metric variables
2023-10-31 10:12:51,982:INFO:Importing untrained model
2023-10-31 10:12:51,987:INFO:AdaBoost Regressor Imported successfully
2023-10-31 10:12:51,994:INFO:Starting cross validation
2023-10-31 10:12:51,996:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-31 10:12:52,177:INFO:Calculating mean and std
2023-10-31 10:12:52,178:INFO:Creating metrics dataframe
2023-10-31 10:12:52,180:INFO:Uploading results into container
2023-10-31 10:12:52,181:INFO:Uploading model into container now
2023-10-31 10:12:52,182:INFO:_master_model_container: 15
2023-10-31 10:12:52,182:INFO:_display_container: 2
2023-10-31 10:12:52,182:INFO:AdaBoostRegressor(random_state=123)
2023-10-31 10:12:52,182:INFO:create_model() successfully completed......................................
2023-10-31 10:12:52,339:INFO:SubProcess create_model() end ==================================
2023-10-31 10:12:52,340:INFO:Creating metrics dataframe
2023-10-31 10:12:52,349:INFO:Initializing Gradient Boosting Regressor
2023-10-31 10:12:52,349:INFO:Total runtime is 0.1986215273539225 minutes
2023-10-31 10:12:52,354:INFO:SubProcess create_model() called ==================================
2023-10-31 10:12:52,355:INFO:Initializing create_model()
2023-10-31 10:12:52,356:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7AA5BD1E0>, estimator=gbr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7AA5BD3F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 10:12:52,356:INFO:Checking exceptions
2023-10-31 10:12:52,356:INFO:Importing libraries
2023-10-31 10:12:52,356:INFO:Copying training dataset
2023-10-31 10:12:52,361:INFO:Defining folds
2023-10-31 10:12:52,361:INFO:Declaring metric variables
2023-10-31 10:12:52,364:INFO:Importing untrained model
2023-10-31 10:12:52,368:INFO:Gradient Boosting Regressor Imported successfully
2023-10-31 10:12:52,377:INFO:Starting cross validation
2023-10-31 10:12:52,378:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-31 10:12:52,623:INFO:Calculating mean and std
2023-10-31 10:12:52,624:INFO:Creating metrics dataframe
2023-10-31 10:12:52,627:INFO:Uploading results into container
2023-10-31 10:12:52,628:INFO:Uploading model into container now
2023-10-31 10:12:52,628:INFO:_master_model_container: 16
2023-10-31 10:12:52,628:INFO:_display_container: 2
2023-10-31 10:12:52,629:INFO:GradientBoostingRegressor(random_state=123)
2023-10-31 10:12:52,629:INFO:create_model() successfully completed......................................
2023-10-31 10:12:52,781:INFO:SubProcess create_model() end ==================================
2023-10-31 10:12:52,781:INFO:Creating metrics dataframe
2023-10-31 10:12:52,796:INFO:Initializing Extreme Gradient Boosting
2023-10-31 10:12:52,796:INFO:Total runtime is 0.20605981349945066 minutes
2023-10-31 10:12:52,800:INFO:SubProcess create_model() called ==================================
2023-10-31 10:12:52,801:INFO:Initializing create_model()
2023-10-31 10:12:52,801:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7AA5BD1E0>, estimator=xgboost, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7AA5BD3F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 10:12:52,801:INFO:Checking exceptions
2023-10-31 10:12:52,801:INFO:Importing libraries
2023-10-31 10:12:52,801:INFO:Copying training dataset
2023-10-31 10:12:52,807:INFO:Defining folds
2023-10-31 10:12:52,807:INFO:Declaring metric variables
2023-10-31 10:12:52,811:INFO:Importing untrained model
2023-10-31 10:12:52,817:INFO:Extreme Gradient Boosting Imported successfully
2023-10-31 10:12:52,826:INFO:Starting cross validation
2023-10-31 10:12:52,828:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-31 10:12:52,961:INFO:Calculating mean and std
2023-10-31 10:12:52,964:INFO:Creating metrics dataframe
2023-10-31 10:12:52,966:INFO:Uploading results into container
2023-10-31 10:12:52,967:INFO:Uploading model into container now
2023-10-31 10:12:52,967:INFO:_master_model_container: 17
2023-10-31 10:12:52,968:INFO:_display_container: 2
2023-10-31 10:12:52,970:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=123, ...)
2023-10-31 10:12:52,970:INFO:create_model() successfully completed......................................
2023-10-31 10:12:53,129:INFO:SubProcess create_model() end ==================================
2023-10-31 10:12:53,129:INFO:Creating metrics dataframe
2023-10-31 10:12:53,141:INFO:Initializing Light Gradient Boosting Machine
2023-10-31 10:12:53,141:INFO:Total runtime is 0.2118226130803426 minutes
2023-10-31 10:12:53,146:INFO:SubProcess create_model() called ==================================
2023-10-31 10:12:53,146:INFO:Initializing create_model()
2023-10-31 10:12:53,146:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7AA5BD1E0>, estimator=lightgbm, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7AA5BD3F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 10:12:53,146:INFO:Checking exceptions
2023-10-31 10:12:53,146:INFO:Importing libraries
2023-10-31 10:12:53,146:INFO:Copying training dataset
2023-10-31 10:12:53,151:INFO:Defining folds
2023-10-31 10:12:53,152:INFO:Declaring metric variables
2023-10-31 10:12:53,158:INFO:Importing untrained model
2023-10-31 10:12:53,163:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-31 10:12:53,171:INFO:Starting cross validation
2023-10-31 10:12:53,173:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-31 10:12:53,485:INFO:Calculating mean and std
2023-10-31 10:12:53,488:INFO:Creating metrics dataframe
2023-10-31 10:12:53,493:INFO:Uploading results into container
2023-10-31 10:12:53,494:INFO:Uploading model into container now
2023-10-31 10:12:53,494:INFO:_master_model_container: 18
2023-10-31 10:12:53,495:INFO:_display_container: 2
2023-10-31 10:12:53,495:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2023-10-31 10:12:53,495:INFO:create_model() successfully completed......................................
2023-10-31 10:12:53,679:INFO:SubProcess create_model() end ==================================
2023-10-31 10:12:53,679:INFO:Creating metrics dataframe
2023-10-31 10:12:53,689:INFO:Initializing Dummy Regressor
2023-10-31 10:12:53,690:INFO:Total runtime is 0.22096663713455197 minutes
2023-10-31 10:12:53,694:INFO:SubProcess create_model() called ==================================
2023-10-31 10:12:53,695:INFO:Initializing create_model()
2023-10-31 10:12:53,695:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7AA5BD1E0>, estimator=dummy, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7AA5BD3F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 10:12:53,695:INFO:Checking exceptions
2023-10-31 10:12:53,695:INFO:Importing libraries
2023-10-31 10:12:53,695:INFO:Copying training dataset
2023-10-31 10:12:53,702:INFO:Defining folds
2023-10-31 10:12:53,702:INFO:Declaring metric variables
2023-10-31 10:12:53,705:INFO:Importing untrained model
2023-10-31 10:12:53,710:INFO:Dummy Regressor Imported successfully
2023-10-31 10:12:53,717:INFO:Starting cross validation
2023-10-31 10:12:53,719:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-31 10:12:53,782:INFO:Calculating mean and std
2023-10-31 10:12:53,783:INFO:Creating metrics dataframe
2023-10-31 10:12:53,787:INFO:Uploading results into container
2023-10-31 10:12:53,787:INFO:Uploading model into container now
2023-10-31 10:12:53,788:INFO:_master_model_container: 19
2023-10-31 10:12:53,788:INFO:_display_container: 2
2023-10-31 10:12:53,788:INFO:DummyRegressor()
2023-10-31 10:12:53,788:INFO:create_model() successfully completed......................................
2023-10-31 10:12:53,935:INFO:SubProcess create_model() end ==================================
2023-10-31 10:12:53,935:INFO:Creating metrics dataframe
2023-10-31 10:12:53,956:INFO:Initializing create_model()
2023-10-31 10:12:53,956:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7AA5BD1E0>, estimator=LinearRegression(n_jobs=-1), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-31 10:12:53,956:INFO:Checking exceptions
2023-10-31 10:12:53,958:INFO:Importing libraries
2023-10-31 10:12:53,959:INFO:Copying training dataset
2023-10-31 10:12:53,962:INFO:Defining folds
2023-10-31 10:12:53,962:INFO:Declaring metric variables
2023-10-31 10:12:53,962:INFO:Importing untrained model
2023-10-31 10:12:53,962:INFO:Declaring custom model
2023-10-31 10:12:53,962:INFO:Linear Regression Imported successfully
2023-10-31 10:12:53,963:INFO:Cross validation set to False
2023-10-31 10:12:53,963:INFO:Fitting Model
2023-10-31 10:12:53,985:INFO:LinearRegression(n_jobs=-1)
2023-10-31 10:12:53,985:INFO:create_model() successfully completed......................................
2023-10-31 10:12:54,192:INFO:_master_model_container: 19
2023-10-31 10:12:54,192:INFO:_display_container: 2
2023-10-31 10:12:54,192:INFO:LinearRegression(n_jobs=-1)
2023-10-31 10:12:54,192:INFO:compare_models() successfully completed......................................
