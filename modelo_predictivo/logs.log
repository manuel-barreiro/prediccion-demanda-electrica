2023-10-13 22:57:06,133:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 22:57:06,585:INFO:PyCaret TSForecastingExperiment
2023-10-13 22:57:06,585:INFO:Logging name: ts-default-name
2023-10-13 22:57:06,585:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-10-13 22:57:06,585:INFO:version 3.1.0
2023-10-13 22:57:06,585:INFO:Initializing setup()
2023-10-13 22:57:06,585:INFO:self.USI: f20e
2023-10-13 22:57:06,585:INFO:self._variable_keys: {'approach_type', 'y_test', 'gpu_param', 'primary_sp_to_use', 'significant_sps_no_harmonics', 'log_plots_param', 'index_type', 'significant_sps', 'seed', 'fold_generator', 'X', '_available_plots', 'fh', 'USI', 'exogenous_present', 'n_jobs_param', 'exp_id', 'fold_param', 'seasonality_present', 'html_param', 'logging_param', 'y', 'all_sps_to_use', 'y_train', 'y_train_transformed', 'X_train_transformed', 'gpu_n_jobs_param', 'exp_name_log', 'X_test_transformed', 'enforce_pi', 'X_transformed', 'y_test_transformed', 'enforce_exogenous', '_ml_usecase', 'data', 'model_engines', 'X_test', 'idx', 'candidate_sps', 'strictly_positive', 'pipeline', 'y_transformed', 'memory', 'X_train'}
2023-10-13 22:57:06,585:INFO:Checking environment
2023-10-13 22:57:06,585:INFO:python_version: 3.10.6
2023-10-13 22:57:06,586:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2023-10-13 22:57:06,586:INFO:machine: AMD64
2023-10-13 22:57:06,586:INFO:platform: Windows-10-10.0.22621-SP0
2023-10-13 22:57:06,586:INFO:Memory: svmem(total=8273383424, available=1347518464, percent=83.7, used=6925864960, free=1347518464)
2023-10-13 22:57:06,586:INFO:Physical Core: 4
2023-10-13 22:57:06,586:INFO:Logical Core: 8
2023-10-13 22:57:06,586:INFO:Checking libraries
2023-10-13 22:57:06,586:INFO:System:
2023-10-13 22:57:06,586:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2023-10-13 22:57:06,586:INFO:executable: c:\Users\manue\AppData\Local\Programs\Python\Python310\python.exe
2023-10-13 22:57:06,586:INFO:   machine: Windows-10-10.0.22621-SP0
2023-10-13 22:57:06,586:INFO:PyCaret required dependencies:
2023-10-13 22:57:06,616:INFO:                 pip: 22.2.1
2023-10-13 22:57:06,616:INFO:          setuptools: 63.2.0
2023-10-13 22:57:06,616:INFO:             pycaret: 3.1.0
2023-10-13 22:57:06,616:INFO:             IPython: 8.4.0
2023-10-13 22:57:06,616:INFO:          ipywidgets: 8.1.1
2023-10-13 22:57:06,616:INFO:                tqdm: 4.66.1
2023-10-13 22:57:06,616:INFO:               numpy: 1.23.2
2023-10-13 22:57:06,616:INFO:              pandas: 1.4.3
2023-10-13 22:57:06,616:INFO:              jinja2: 3.1.2
2023-10-13 22:57:06,616:INFO:               scipy: 1.10.1
2023-10-13 22:57:06,616:INFO:              joblib: 1.2.0
2023-10-13 22:57:06,616:INFO:             sklearn: 1.1.2
2023-10-13 22:57:06,616:INFO:                pyod: 1.1.0
2023-10-13 22:57:06,616:INFO:            imblearn: 0.11.0
2023-10-13 22:57:06,616:INFO:   category_encoders: 2.6.2
2023-10-13 22:57:06,616:INFO:            lightgbm: 4.1.0
2023-10-13 22:57:06,616:INFO:               numba: 0.58.0
2023-10-13 22:57:06,616:INFO:            requests: 2.28.1
2023-10-13 22:57:06,616:INFO:          matplotlib: 3.6.0
2023-10-13 22:57:06,616:INFO:          scikitplot: 0.3.7
2023-10-13 22:57:06,616:INFO:         yellowbrick: 1.5
2023-10-13 22:57:06,616:INFO:              plotly: 5.17.0
2023-10-13 22:57:06,616:INFO:    plotly-resampler: Not installed
2023-10-13 22:57:06,617:INFO:             kaleido: 0.2.1
2023-10-13 22:57:06,617:INFO:           schemdraw: 0.15
2023-10-13 22:57:06,617:INFO:         statsmodels: 0.13.2
2023-10-13 22:57:06,617:INFO:              sktime: 0.21.1
2023-10-13 22:57:06,617:INFO:               tbats: 1.1.3
2023-10-13 22:57:06,617:INFO:            pmdarima: 2.0.3
2023-10-13 22:57:06,617:INFO:              psutil: 5.9.1
2023-10-13 22:57:06,617:INFO:          markupsafe: 2.1.1
2023-10-13 22:57:06,617:INFO:             pickle5: Not installed
2023-10-13 22:57:06,617:INFO:         cloudpickle: 2.2.1
2023-10-13 22:57:06,617:INFO:         deprecation: 2.1.0
2023-10-13 22:57:06,617:INFO:              xxhash: 3.4.1
2023-10-13 22:57:06,617:INFO:           wurlitzer: Not installed
2023-10-13 22:57:06,617:INFO:PyCaret optional dependencies:
2023-10-13 22:57:06,680:INFO:                shap: Not installed
2023-10-13 22:57:06,680:INFO:           interpret: Not installed
2023-10-13 22:57:06,680:INFO:                umap: Not installed
2023-10-13 22:57:06,680:INFO:     ydata_profiling: Not installed
2023-10-13 22:57:06,680:INFO:  explainerdashboard: Not installed
2023-10-13 22:57:06,680:INFO:             autoviz: Not installed
2023-10-13 22:57:06,680:INFO:           fairlearn: Not installed
2023-10-13 22:57:06,680:INFO:          deepchecks: Not installed
2023-10-13 22:57:06,680:INFO:             xgboost: 2.0.0
2023-10-13 22:57:06,680:INFO:            catboost: Not installed
2023-10-13 22:57:06,680:INFO:              kmodes: Not installed
2023-10-13 22:57:06,680:INFO:             mlxtend: Not installed
2023-10-13 22:57:06,680:INFO:       statsforecast: Not installed
2023-10-13 22:57:06,680:INFO:        tune_sklearn: Not installed
2023-10-13 22:57:06,680:INFO:                 ray: Not installed
2023-10-13 22:57:06,680:INFO:            hyperopt: Not installed
2023-10-13 22:57:06,680:INFO:              optuna: Not installed
2023-10-13 22:57:06,680:INFO:               skopt: Not installed
2023-10-13 22:57:06,680:INFO:              mlflow: Not installed
2023-10-13 22:57:06,680:INFO:              gradio: Not installed
2023-10-13 22:57:06,680:INFO:             fastapi: Not installed
2023-10-13 22:57:06,680:INFO:             uvicorn: Not installed
2023-10-13 22:57:06,680:INFO:              m2cgen: Not installed
2023-10-13 22:57:06,680:INFO:           evidently: Not installed
2023-10-13 22:57:06,680:INFO:               fugue: Not installed
2023-10-13 22:57:06,680:INFO:           streamlit: Not installed
2023-10-13 22:57:06,680:INFO:             prophet: Not installed
2023-10-13 22:57:06,680:INFO:None
2023-10-13 22:57:56,109:INFO:PyCaret TSForecastingExperiment
2023-10-13 22:57:56,109:INFO:Logging name: ts-default-name
2023-10-13 22:57:56,110:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-10-13 22:57:56,110:INFO:version 3.1.0
2023-10-13 22:57:56,110:INFO:Initializing setup()
2023-10-13 22:57:56,110:INFO:self.USI: a391
2023-10-13 22:57:56,110:INFO:self._variable_keys: {'approach_type', 'y_test', 'gpu_param', 'primary_sp_to_use', 'significant_sps_no_harmonics', 'log_plots_param', 'index_type', 'significant_sps', 'seed', 'fold_generator', 'X', '_available_plots', 'fh', 'USI', 'exogenous_present', 'n_jobs_param', 'exp_id', 'fold_param', 'seasonality_present', 'html_param', 'logging_param', 'y', 'all_sps_to_use', 'y_train', 'y_train_transformed', 'X_train_transformed', 'gpu_n_jobs_param', 'exp_name_log', 'X_test_transformed', 'enforce_pi', 'X_transformed', 'y_test_transformed', 'enforce_exogenous', '_ml_usecase', 'data', 'model_engines', 'X_test', 'idx', 'candidate_sps', 'strictly_positive', 'pipeline', 'y_transformed', 'memory', 'X_train'}
2023-10-13 22:57:56,110:INFO:Checking environment
2023-10-13 22:57:56,110:INFO:python_version: 3.10.6
2023-10-13 22:57:56,110:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2023-10-13 22:57:56,110:INFO:machine: AMD64
2023-10-13 22:57:56,110:INFO:platform: Windows-10-10.0.22621-SP0
2023-10-13 22:57:56,110:INFO:Memory: svmem(total=8273383424, available=1266319360, percent=84.7, used=7007064064, free=1266319360)
2023-10-13 22:57:56,110:INFO:Physical Core: 4
2023-10-13 22:57:56,111:INFO:Logical Core: 8
2023-10-13 22:57:56,111:INFO:Checking libraries
2023-10-13 22:57:56,111:INFO:System:
2023-10-13 22:57:56,111:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2023-10-13 22:57:56,111:INFO:executable: c:\Users\manue\AppData\Local\Programs\Python\Python310\python.exe
2023-10-13 22:57:56,111:INFO:   machine: Windows-10-10.0.22621-SP0
2023-10-13 22:57:56,111:INFO:PyCaret required dependencies:
2023-10-13 22:57:56,111:INFO:                 pip: 22.2.1
2023-10-13 22:57:56,111:INFO:          setuptools: 63.2.0
2023-10-13 22:57:56,111:INFO:             pycaret: 3.1.0
2023-10-13 22:57:56,111:INFO:             IPython: 8.4.0
2023-10-13 22:57:56,111:INFO:          ipywidgets: 8.1.1
2023-10-13 22:57:56,112:INFO:                tqdm: 4.66.1
2023-10-13 22:57:56,112:INFO:               numpy: 1.23.2
2023-10-13 22:57:56,112:INFO:              pandas: 1.4.3
2023-10-13 22:57:56,112:INFO:              jinja2: 3.1.2
2023-10-13 22:57:56,112:INFO:               scipy: 1.10.1
2023-10-13 22:57:56,112:INFO:              joblib: 1.2.0
2023-10-13 22:57:56,112:INFO:             sklearn: 1.1.2
2023-10-13 22:57:56,112:INFO:                pyod: 1.1.0
2023-10-13 22:57:56,112:INFO:            imblearn: 0.11.0
2023-10-13 22:57:56,112:INFO:   category_encoders: 2.6.2
2023-10-13 22:57:56,112:INFO:            lightgbm: 4.1.0
2023-10-13 22:57:56,112:INFO:               numba: 0.58.0
2023-10-13 22:57:56,112:INFO:            requests: 2.28.1
2023-10-13 22:57:56,112:INFO:          matplotlib: 3.6.0
2023-10-13 22:57:56,112:INFO:          scikitplot: 0.3.7
2023-10-13 22:57:56,112:INFO:         yellowbrick: 1.5
2023-10-13 22:57:56,112:INFO:              plotly: 5.17.0
2023-10-13 22:57:56,112:INFO:    plotly-resampler: Not installed
2023-10-13 22:57:56,112:INFO:             kaleido: 0.2.1
2023-10-13 22:57:56,113:INFO:           schemdraw: 0.15
2023-10-13 22:57:56,113:INFO:         statsmodels: 0.13.2
2023-10-13 22:57:56,113:INFO:              sktime: 0.21.1
2023-10-13 22:57:56,113:INFO:               tbats: 1.1.3
2023-10-13 22:57:56,113:INFO:            pmdarima: 2.0.3
2023-10-13 22:57:56,113:INFO:              psutil: 5.9.1
2023-10-13 22:57:56,113:INFO:          markupsafe: 2.1.1
2023-10-13 22:57:56,113:INFO:             pickle5: Not installed
2023-10-13 22:57:56,113:INFO:         cloudpickle: 2.2.1
2023-10-13 22:57:56,113:INFO:         deprecation: 2.1.0
2023-10-13 22:57:56,113:INFO:              xxhash: 3.4.1
2023-10-13 22:57:56,113:INFO:           wurlitzer: Not installed
2023-10-13 22:57:56,113:INFO:PyCaret optional dependencies:
2023-10-13 22:57:56,114:INFO:                shap: Not installed
2023-10-13 22:57:56,114:INFO:           interpret: Not installed
2023-10-13 22:57:56,114:INFO:                umap: Not installed
2023-10-13 22:57:56,114:INFO:     ydata_profiling: Not installed
2023-10-13 22:57:56,114:INFO:  explainerdashboard: Not installed
2023-10-13 22:57:56,114:INFO:             autoviz: Not installed
2023-10-13 22:57:56,114:INFO:           fairlearn: Not installed
2023-10-13 22:57:56,114:INFO:          deepchecks: Not installed
2023-10-13 22:57:56,114:INFO:             xgboost: 2.0.0
2023-10-13 22:57:56,114:INFO:            catboost: Not installed
2023-10-13 22:57:56,114:INFO:              kmodes: Not installed
2023-10-13 22:57:56,114:INFO:             mlxtend: Not installed
2023-10-13 22:57:56,114:INFO:       statsforecast: Not installed
2023-10-13 22:57:56,114:INFO:        tune_sklearn: Not installed
2023-10-13 22:57:56,114:INFO:                 ray: Not installed
2023-10-13 22:57:56,115:INFO:            hyperopt: Not installed
2023-10-13 22:57:56,115:INFO:              optuna: Not installed
2023-10-13 22:57:56,115:INFO:               skopt: Not installed
2023-10-13 22:57:56,115:INFO:              mlflow: Not installed
2023-10-13 22:57:56,115:INFO:              gradio: Not installed
2023-10-13 22:57:56,115:INFO:             fastapi: Not installed
2023-10-13 22:57:56,115:INFO:             uvicorn: Not installed
2023-10-13 22:57:56,115:INFO:              m2cgen: Not installed
2023-10-13 22:57:56,115:INFO:           evidently: Not installed
2023-10-13 22:57:56,115:INFO:               fugue: Not installed
2023-10-13 22:57:56,115:INFO:           streamlit: Not installed
2023-10-13 22:57:56,115:INFO:             prophet: Not installed
2023-10-13 22:57:56,115:INFO:None
2023-10-13 22:58:32,845:INFO:PyCaret TSForecastingExperiment
2023-10-13 22:58:32,845:INFO:Logging name: ts-default-name
2023-10-13 22:58:32,845:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-10-13 22:58:32,845:INFO:version 3.1.0
2023-10-13 22:58:32,845:INFO:Initializing setup()
2023-10-13 22:58:32,845:INFO:self.USI: 2053
2023-10-13 22:58:32,845:INFO:self._variable_keys: {'approach_type', 'y_test', 'gpu_param', 'primary_sp_to_use', 'significant_sps_no_harmonics', 'log_plots_param', 'index_type', 'significant_sps', 'seed', 'fold_generator', 'X', '_available_plots', 'fh', 'USI', 'exogenous_present', 'n_jobs_param', 'exp_id', 'fold_param', 'seasonality_present', 'html_param', 'logging_param', 'y', 'all_sps_to_use', 'y_train', 'y_train_transformed', 'X_train_transformed', 'gpu_n_jobs_param', 'exp_name_log', 'X_test_transformed', 'enforce_pi', 'X_transformed', 'y_test_transformed', 'enforce_exogenous', '_ml_usecase', 'data', 'model_engines', 'X_test', 'idx', 'candidate_sps', 'strictly_positive', 'pipeline', 'y_transformed', 'memory', 'X_train'}
2023-10-13 22:58:32,845:INFO:Checking environment
2023-10-13 22:58:32,846:INFO:python_version: 3.10.6
2023-10-13 22:58:32,846:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2023-10-13 22:58:32,846:INFO:machine: AMD64
2023-10-13 22:58:32,846:INFO:platform: Windows-10-10.0.22621-SP0
2023-10-13 22:58:32,846:INFO:Memory: svmem(total=8273383424, available=1199624192, percent=85.5, used=7073759232, free=1199624192)
2023-10-13 22:58:32,846:INFO:Physical Core: 4
2023-10-13 22:58:32,846:INFO:Logical Core: 8
2023-10-13 22:58:32,846:INFO:Checking libraries
2023-10-13 22:58:32,846:INFO:System:
2023-10-13 22:58:32,846:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2023-10-13 22:58:32,846:INFO:executable: c:\Users\manue\AppData\Local\Programs\Python\Python310\python.exe
2023-10-13 22:58:32,846:INFO:   machine: Windows-10-10.0.22621-SP0
2023-10-13 22:58:32,846:INFO:PyCaret required dependencies:
2023-10-13 22:58:32,846:INFO:                 pip: 22.2.1
2023-10-13 22:58:32,846:INFO:          setuptools: 63.2.0
2023-10-13 22:58:32,846:INFO:             pycaret: 3.1.0
2023-10-13 22:58:32,846:INFO:             IPython: 8.4.0
2023-10-13 22:58:32,846:INFO:          ipywidgets: 8.1.1
2023-10-13 22:58:32,847:INFO:                tqdm: 4.66.1
2023-10-13 22:58:32,847:INFO:               numpy: 1.23.2
2023-10-13 22:58:32,847:INFO:              pandas: 1.4.3
2023-10-13 22:58:32,847:INFO:              jinja2: 3.1.2
2023-10-13 22:58:32,847:INFO:               scipy: 1.10.1
2023-10-13 22:58:32,847:INFO:              joblib: 1.2.0
2023-10-13 22:58:32,847:INFO:             sklearn: 1.1.2
2023-10-13 22:58:32,847:INFO:                pyod: 1.1.0
2023-10-13 22:58:32,847:INFO:            imblearn: 0.11.0
2023-10-13 22:58:32,847:INFO:   category_encoders: 2.6.2
2023-10-13 22:58:32,847:INFO:            lightgbm: 4.1.0
2023-10-13 22:58:32,847:INFO:               numba: 0.58.0
2023-10-13 22:58:32,847:INFO:            requests: 2.28.1
2023-10-13 22:58:32,847:INFO:          matplotlib: 3.6.0
2023-10-13 22:58:32,847:INFO:          scikitplot: 0.3.7
2023-10-13 22:58:32,847:INFO:         yellowbrick: 1.5
2023-10-13 22:58:32,847:INFO:              plotly: 5.17.0
2023-10-13 22:58:32,847:INFO:    plotly-resampler: Not installed
2023-10-13 22:58:32,847:INFO:             kaleido: 0.2.1
2023-10-13 22:58:32,847:INFO:           schemdraw: 0.15
2023-10-13 22:58:32,847:INFO:         statsmodels: 0.13.2
2023-10-13 22:58:32,847:INFO:              sktime: 0.21.1
2023-10-13 22:58:32,847:INFO:               tbats: 1.1.3
2023-10-13 22:58:32,847:INFO:            pmdarima: 2.0.3
2023-10-13 22:58:32,847:INFO:              psutil: 5.9.1
2023-10-13 22:58:32,847:INFO:          markupsafe: 2.1.1
2023-10-13 22:58:32,847:INFO:             pickle5: Not installed
2023-10-13 22:58:32,847:INFO:         cloudpickle: 2.2.1
2023-10-13 22:58:32,848:INFO:         deprecation: 2.1.0
2023-10-13 22:58:32,848:INFO:              xxhash: 3.4.1
2023-10-13 22:58:32,848:INFO:           wurlitzer: Not installed
2023-10-13 22:58:32,848:INFO:PyCaret optional dependencies:
2023-10-13 22:58:32,848:INFO:                shap: Not installed
2023-10-13 22:58:32,848:INFO:           interpret: Not installed
2023-10-13 22:58:32,848:INFO:                umap: Not installed
2023-10-13 22:58:32,848:INFO:     ydata_profiling: Not installed
2023-10-13 22:58:32,848:INFO:  explainerdashboard: Not installed
2023-10-13 22:58:32,848:INFO:             autoviz: Not installed
2023-10-13 22:58:32,848:INFO:           fairlearn: Not installed
2023-10-13 22:58:32,848:INFO:          deepchecks: Not installed
2023-10-13 22:58:32,848:INFO:             xgboost: 2.0.0
2023-10-13 22:58:32,848:INFO:            catboost: Not installed
2023-10-13 22:58:32,848:INFO:              kmodes: Not installed
2023-10-13 22:58:32,848:INFO:             mlxtend: Not installed
2023-10-13 22:58:32,848:INFO:       statsforecast: Not installed
2023-10-13 22:58:32,848:INFO:        tune_sklearn: Not installed
2023-10-13 22:58:32,848:INFO:                 ray: Not installed
2023-10-13 22:58:32,848:INFO:            hyperopt: Not installed
2023-10-13 22:58:32,848:INFO:              optuna: Not installed
2023-10-13 22:58:32,848:INFO:               skopt: Not installed
2023-10-13 22:58:32,848:INFO:              mlflow: Not installed
2023-10-13 22:58:32,849:INFO:              gradio: Not installed
2023-10-13 22:58:32,849:INFO:             fastapi: Not installed
2023-10-13 22:58:32,849:INFO:             uvicorn: Not installed
2023-10-13 22:58:32,849:INFO:              m2cgen: Not installed
2023-10-13 22:58:32,849:INFO:           evidently: Not installed
2023-10-13 22:58:32,849:INFO:               fugue: Not installed
2023-10-13 22:58:32,849:INFO:           streamlit: Not installed
2023-10-13 22:58:32,849:INFO:             prophet: Not installed
2023-10-13 22:58:32,849:INFO:None
2023-10-13 22:58:57,559:INFO:PyCaret TSForecastingExperiment
2023-10-13 22:58:57,559:INFO:Logging name: ts-default-name
2023-10-13 22:58:57,559:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-10-13 22:58:57,559:INFO:version 3.1.0
2023-10-13 22:58:57,559:INFO:Initializing setup()
2023-10-13 22:58:57,559:INFO:self.USI: 1ad7
2023-10-13 22:58:57,559:INFO:self._variable_keys: {'approach_type', 'y_test', 'gpu_param', 'primary_sp_to_use', 'significant_sps_no_harmonics', 'log_plots_param', 'index_type', 'significant_sps', 'seed', 'fold_generator', 'X', '_available_plots', 'fh', 'USI', 'exogenous_present', 'n_jobs_param', 'exp_id', 'fold_param', 'seasonality_present', 'html_param', 'logging_param', 'y', 'all_sps_to_use', 'y_train', 'y_train_transformed', 'X_train_transformed', 'gpu_n_jobs_param', 'exp_name_log', 'X_test_transformed', 'enforce_pi', 'X_transformed', 'y_test_transformed', 'enforce_exogenous', '_ml_usecase', 'data', 'model_engines', 'X_test', 'idx', 'candidate_sps', 'strictly_positive', 'pipeline', 'y_transformed', 'memory', 'X_train'}
2023-10-13 22:58:57,559:INFO:Checking environment
2023-10-13 22:58:57,559:INFO:python_version: 3.10.6
2023-10-13 22:58:57,559:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2023-10-13 22:58:57,559:INFO:machine: AMD64
2023-10-13 22:58:57,560:INFO:platform: Windows-10-10.0.22621-SP0
2023-10-13 22:58:57,560:INFO:Memory: svmem(total=8273383424, available=1263640576, percent=84.7, used=7009742848, free=1263640576)
2023-10-13 22:58:57,560:INFO:Physical Core: 4
2023-10-13 22:58:57,560:INFO:Logical Core: 8
2023-10-13 22:58:57,560:INFO:Checking libraries
2023-10-13 22:58:57,560:INFO:System:
2023-10-13 22:58:57,560:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2023-10-13 22:58:57,560:INFO:executable: c:\Users\manue\AppData\Local\Programs\Python\Python310\python.exe
2023-10-13 22:58:57,560:INFO:   machine: Windows-10-10.0.22621-SP0
2023-10-13 22:58:57,560:INFO:PyCaret required dependencies:
2023-10-13 22:58:57,560:INFO:                 pip: 22.2.1
2023-10-13 22:58:57,560:INFO:          setuptools: 63.2.0
2023-10-13 22:58:57,560:INFO:             pycaret: 3.1.0
2023-10-13 22:58:57,560:INFO:             IPython: 8.4.0
2023-10-13 22:58:57,560:INFO:          ipywidgets: 8.1.1
2023-10-13 22:58:57,560:INFO:                tqdm: 4.66.1
2023-10-13 22:58:57,560:INFO:               numpy: 1.23.2
2023-10-13 22:58:57,560:INFO:              pandas: 1.4.3
2023-10-13 22:58:57,560:INFO:              jinja2: 3.1.2
2023-10-13 22:58:57,560:INFO:               scipy: 1.10.1
2023-10-13 22:58:57,560:INFO:              joblib: 1.2.0
2023-10-13 22:58:57,560:INFO:             sklearn: 1.1.2
2023-10-13 22:58:57,560:INFO:                pyod: 1.1.0
2023-10-13 22:58:57,561:INFO:            imblearn: 0.11.0
2023-10-13 22:58:57,561:INFO:   category_encoders: 2.6.2
2023-10-13 22:58:57,561:INFO:            lightgbm: 4.1.0
2023-10-13 22:58:57,561:INFO:               numba: 0.58.0
2023-10-13 22:58:57,561:INFO:            requests: 2.28.1
2023-10-13 22:58:57,561:INFO:          matplotlib: 3.6.0
2023-10-13 22:58:57,561:INFO:          scikitplot: 0.3.7
2023-10-13 22:58:57,561:INFO:         yellowbrick: 1.5
2023-10-13 22:58:57,561:INFO:              plotly: 5.17.0
2023-10-13 22:58:57,561:INFO:    plotly-resampler: Not installed
2023-10-13 22:58:57,561:INFO:             kaleido: 0.2.1
2023-10-13 22:58:57,561:INFO:           schemdraw: 0.15
2023-10-13 22:58:57,561:INFO:         statsmodels: 0.13.2
2023-10-13 22:58:57,561:INFO:              sktime: 0.21.1
2023-10-13 22:58:57,561:INFO:               tbats: 1.1.3
2023-10-13 22:58:57,561:INFO:            pmdarima: 2.0.3
2023-10-13 22:58:57,561:INFO:              psutil: 5.9.1
2023-10-13 22:58:57,561:INFO:          markupsafe: 2.1.1
2023-10-13 22:58:57,561:INFO:             pickle5: Not installed
2023-10-13 22:58:57,561:INFO:         cloudpickle: 2.2.1
2023-10-13 22:58:57,561:INFO:         deprecation: 2.1.0
2023-10-13 22:58:57,562:INFO:              xxhash: 3.4.1
2023-10-13 22:58:57,562:INFO:           wurlitzer: Not installed
2023-10-13 22:58:57,562:INFO:PyCaret optional dependencies:
2023-10-13 22:58:57,562:INFO:                shap: Not installed
2023-10-13 22:58:57,562:INFO:           interpret: Not installed
2023-10-13 22:58:57,562:INFO:                umap: Not installed
2023-10-13 22:58:57,562:INFO:     ydata_profiling: Not installed
2023-10-13 22:58:57,562:INFO:  explainerdashboard: Not installed
2023-10-13 22:58:57,562:INFO:             autoviz: Not installed
2023-10-13 22:58:57,562:INFO:           fairlearn: Not installed
2023-10-13 22:58:57,562:INFO:          deepchecks: Not installed
2023-10-13 22:58:57,562:INFO:             xgboost: 2.0.0
2023-10-13 22:58:57,562:INFO:            catboost: Not installed
2023-10-13 22:58:57,562:INFO:              kmodes: Not installed
2023-10-13 22:58:57,562:INFO:             mlxtend: Not installed
2023-10-13 22:58:57,563:INFO:       statsforecast: Not installed
2023-10-13 22:58:57,563:INFO:        tune_sklearn: Not installed
2023-10-13 22:58:57,563:INFO:                 ray: Not installed
2023-10-13 22:58:57,563:INFO:            hyperopt: Not installed
2023-10-13 22:58:57,563:INFO:              optuna: Not installed
2023-10-13 22:58:57,563:INFO:               skopt: Not installed
2023-10-13 22:58:57,563:INFO:              mlflow: Not installed
2023-10-13 22:58:57,563:INFO:              gradio: Not installed
2023-10-13 22:58:57,563:INFO:             fastapi: Not installed
2023-10-13 22:58:57,563:INFO:             uvicorn: Not installed
2023-10-13 22:58:57,563:INFO:              m2cgen: Not installed
2023-10-13 22:58:57,563:INFO:           evidently: Not installed
2023-10-13 22:58:57,563:INFO:               fugue: Not installed
2023-10-13 22:58:57,563:INFO:           streamlit: Not installed
2023-10-13 22:58:57,563:INFO:             prophet: Not installed
2023-10-13 22:58:57,563:INFO:None
2023-10-13 22:59:06,733:INFO:PyCaret TSForecastingExperiment
2023-10-13 22:59:06,733:INFO:Logging name: ts-default-name
2023-10-13 22:59:06,733:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-10-13 22:59:06,733:INFO:version 3.1.0
2023-10-13 22:59:06,733:INFO:Initializing setup()
2023-10-13 22:59:06,733:INFO:self.USI: a712
2023-10-13 22:59:06,733:INFO:self._variable_keys: {'approach_type', 'y_test', 'gpu_param', 'primary_sp_to_use', 'significant_sps_no_harmonics', 'log_plots_param', 'index_type', 'significant_sps', 'seed', 'fold_generator', 'X', '_available_plots', 'fh', 'USI', 'exogenous_present', 'n_jobs_param', 'exp_id', 'fold_param', 'seasonality_present', 'html_param', 'logging_param', 'y', 'all_sps_to_use', 'y_train', 'y_train_transformed', 'X_train_transformed', 'gpu_n_jobs_param', 'exp_name_log', 'X_test_transformed', 'enforce_pi', 'X_transformed', 'y_test_transformed', 'enforce_exogenous', '_ml_usecase', 'data', 'model_engines', 'X_test', 'idx', 'candidate_sps', 'strictly_positive', 'pipeline', 'y_transformed', 'memory', 'X_train'}
2023-10-13 22:59:06,733:INFO:Checking environment
2023-10-13 22:59:06,733:INFO:python_version: 3.10.6
2023-10-13 22:59:06,733:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2023-10-13 22:59:06,733:INFO:machine: AMD64
2023-10-13 22:59:06,733:INFO:platform: Windows-10-10.0.22621-SP0
2023-10-13 22:59:06,734:INFO:Memory: svmem(total=8273383424, available=1202618368, percent=85.5, used=7070765056, free=1202618368)
2023-10-13 22:59:06,734:INFO:Physical Core: 4
2023-10-13 22:59:06,734:INFO:Logical Core: 8
2023-10-13 22:59:06,734:INFO:Checking libraries
2023-10-13 22:59:06,734:INFO:System:
2023-10-13 22:59:06,734:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2023-10-13 22:59:06,734:INFO:executable: c:\Users\manue\AppData\Local\Programs\Python\Python310\python.exe
2023-10-13 22:59:06,734:INFO:   machine: Windows-10-10.0.22621-SP0
2023-10-13 22:59:06,734:INFO:PyCaret required dependencies:
2023-10-13 22:59:06,734:INFO:                 pip: 22.2.1
2023-10-13 22:59:06,734:INFO:          setuptools: 63.2.0
2023-10-13 22:59:06,734:INFO:             pycaret: 3.1.0
2023-10-13 22:59:06,734:INFO:             IPython: 8.4.0
2023-10-13 22:59:06,734:INFO:          ipywidgets: 8.1.1
2023-10-13 22:59:06,734:INFO:                tqdm: 4.66.1
2023-10-13 22:59:06,734:INFO:               numpy: 1.23.2
2023-10-13 22:59:06,734:INFO:              pandas: 1.4.3
2023-10-13 22:59:06,734:INFO:              jinja2: 3.1.2
2023-10-13 22:59:06,734:INFO:               scipy: 1.10.1
2023-10-13 22:59:06,734:INFO:              joblib: 1.2.0
2023-10-13 22:59:06,735:INFO:             sklearn: 1.1.2
2023-10-13 22:59:06,735:INFO:                pyod: 1.1.0
2023-10-13 22:59:06,735:INFO:            imblearn: 0.11.0
2023-10-13 22:59:06,735:INFO:   category_encoders: 2.6.2
2023-10-13 22:59:06,735:INFO:            lightgbm: 4.1.0
2023-10-13 22:59:06,735:INFO:               numba: 0.58.0
2023-10-13 22:59:06,735:INFO:            requests: 2.28.1
2023-10-13 22:59:06,735:INFO:          matplotlib: 3.6.0
2023-10-13 22:59:06,735:INFO:          scikitplot: 0.3.7
2023-10-13 22:59:06,735:INFO:         yellowbrick: 1.5
2023-10-13 22:59:06,735:INFO:              plotly: 5.17.0
2023-10-13 22:59:06,735:INFO:    plotly-resampler: Not installed
2023-10-13 22:59:06,735:INFO:             kaleido: 0.2.1
2023-10-13 22:59:06,735:INFO:           schemdraw: 0.15
2023-10-13 22:59:06,735:INFO:         statsmodels: 0.13.2
2023-10-13 22:59:06,735:INFO:              sktime: 0.21.1
2023-10-13 22:59:06,735:INFO:               tbats: 1.1.3
2023-10-13 22:59:06,735:INFO:            pmdarima: 2.0.3
2023-10-13 22:59:06,735:INFO:              psutil: 5.9.1
2023-10-13 22:59:06,735:INFO:          markupsafe: 2.1.1
2023-10-13 22:59:06,735:INFO:             pickle5: Not installed
2023-10-13 22:59:06,735:INFO:         cloudpickle: 2.2.1
2023-10-13 22:59:06,735:INFO:         deprecation: 2.1.0
2023-10-13 22:59:06,735:INFO:              xxhash: 3.4.1
2023-10-13 22:59:06,735:INFO:           wurlitzer: Not installed
2023-10-13 22:59:06,736:INFO:PyCaret optional dependencies:
2023-10-13 22:59:06,736:INFO:                shap: Not installed
2023-10-13 22:59:06,736:INFO:           interpret: Not installed
2023-10-13 22:59:06,736:INFO:                umap: Not installed
2023-10-13 22:59:06,736:INFO:     ydata_profiling: Not installed
2023-10-13 22:59:06,736:INFO:  explainerdashboard: Not installed
2023-10-13 22:59:06,736:INFO:             autoviz: Not installed
2023-10-13 22:59:06,736:INFO:           fairlearn: Not installed
2023-10-13 22:59:06,736:INFO:          deepchecks: Not installed
2023-10-13 22:59:06,736:INFO:             xgboost: 2.0.0
2023-10-13 22:59:06,736:INFO:            catboost: Not installed
2023-10-13 22:59:06,736:INFO:              kmodes: Not installed
2023-10-13 22:59:06,736:INFO:             mlxtend: Not installed
2023-10-13 22:59:06,736:INFO:       statsforecast: Not installed
2023-10-13 22:59:06,736:INFO:        tune_sklearn: Not installed
2023-10-13 22:59:06,736:INFO:                 ray: Not installed
2023-10-13 22:59:06,736:INFO:            hyperopt: Not installed
2023-10-13 22:59:06,736:INFO:              optuna: Not installed
2023-10-13 22:59:06,736:INFO:               skopt: Not installed
2023-10-13 22:59:06,736:INFO:              mlflow: Not installed
2023-10-13 22:59:06,736:INFO:              gradio: Not installed
2023-10-13 22:59:06,736:INFO:             fastapi: Not installed
2023-10-13 22:59:06,736:INFO:             uvicorn: Not installed
2023-10-13 22:59:06,736:INFO:              m2cgen: Not installed
2023-10-13 22:59:06,736:INFO:           evidently: Not installed
2023-10-13 22:59:06,736:INFO:               fugue: Not installed
2023-10-13 22:59:06,736:INFO:           streamlit: Not installed
2023-10-13 22:59:06,736:INFO:             prophet: Not installed
2023-10-13 22:59:06,736:INFO:None
2023-10-13 22:59:06,737:INFO:Set Forecast Horizon.
2023-10-13 22:59:06,738:INFO:Set up Train-Test Splits.
2023-10-13 23:02:54,456:INFO:PyCaret TSForecastingExperiment
2023-10-13 23:02:54,456:INFO:Logging name: ts-default-name
2023-10-13 23:02:54,456:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-10-13 23:02:54,456:INFO:version 3.1.0
2023-10-13 23:02:54,456:INFO:Initializing setup()
2023-10-13 23:02:54,456:INFO:self.USI: 504c
2023-10-13 23:02:54,456:INFO:self._variable_keys: {'approach_type', 'y_test', 'gpu_param', 'primary_sp_to_use', 'significant_sps_no_harmonics', 'log_plots_param', 'index_type', 'significant_sps', 'seed', 'fold_generator', 'X', '_available_plots', 'fh', 'USI', 'exogenous_present', 'n_jobs_param', 'exp_id', 'fold_param', 'seasonality_present', 'html_param', 'logging_param', 'y', 'all_sps_to_use', 'y_train', 'y_train_transformed', 'X_train_transformed', 'gpu_n_jobs_param', 'exp_name_log', 'X_test_transformed', 'enforce_pi', 'X_transformed', 'y_test_transformed', 'enforce_exogenous', '_ml_usecase', 'data', 'model_engines', 'X_test', 'idx', 'candidate_sps', 'strictly_positive', 'pipeline', 'y_transformed', 'memory', 'X_train'}
2023-10-13 23:02:54,456:INFO:Checking environment
2023-10-13 23:02:54,456:INFO:python_version: 3.10.6
2023-10-13 23:02:54,456:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2023-10-13 23:02:54,456:INFO:machine: AMD64
2023-10-13 23:02:54,457:INFO:platform: Windows-10-10.0.22621-SP0
2023-10-13 23:02:54,457:INFO:Memory: svmem(total=8273383424, available=1540943872, percent=81.4, used=6732439552, free=1540943872)
2023-10-13 23:02:54,457:INFO:Physical Core: 4
2023-10-13 23:02:54,457:INFO:Logical Core: 8
2023-10-13 23:02:54,457:INFO:Checking libraries
2023-10-13 23:02:54,457:INFO:System:
2023-10-13 23:02:54,457:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2023-10-13 23:02:54,457:INFO:executable: c:\Users\manue\AppData\Local\Programs\Python\Python310\python.exe
2023-10-13 23:02:54,457:INFO:   machine: Windows-10-10.0.22621-SP0
2023-10-13 23:02:54,457:INFO:PyCaret required dependencies:
2023-10-13 23:02:54,457:INFO:                 pip: 22.2.1
2023-10-13 23:02:54,457:INFO:          setuptools: 63.2.0
2023-10-13 23:02:54,457:INFO:             pycaret: 3.1.0
2023-10-13 23:02:54,457:INFO:             IPython: 8.4.0
2023-10-13 23:02:54,457:INFO:          ipywidgets: 8.1.1
2023-10-13 23:02:54,457:INFO:                tqdm: 4.66.1
2023-10-13 23:02:54,458:INFO:               numpy: 1.23.2
2023-10-13 23:02:54,458:INFO:              pandas: 1.4.3
2023-10-13 23:02:54,458:INFO:              jinja2: 3.1.2
2023-10-13 23:02:54,458:INFO:               scipy: 1.10.1
2023-10-13 23:02:54,458:INFO:              joblib: 1.2.0
2023-10-13 23:02:54,458:INFO:             sklearn: 1.1.2
2023-10-13 23:02:54,458:INFO:                pyod: 1.1.0
2023-10-13 23:02:54,458:INFO:            imblearn: 0.11.0
2023-10-13 23:02:54,458:INFO:   category_encoders: 2.6.2
2023-10-13 23:02:54,458:INFO:            lightgbm: 4.1.0
2023-10-13 23:02:54,458:INFO:               numba: 0.58.0
2023-10-13 23:02:54,458:INFO:            requests: 2.28.1
2023-10-13 23:02:54,458:INFO:          matplotlib: 3.6.0
2023-10-13 23:02:54,458:INFO:          scikitplot: 0.3.7
2023-10-13 23:02:54,458:INFO:         yellowbrick: 1.5
2023-10-13 23:02:54,458:INFO:              plotly: 5.17.0
2023-10-13 23:02:54,458:INFO:    plotly-resampler: Not installed
2023-10-13 23:02:54,458:INFO:             kaleido: 0.2.1
2023-10-13 23:02:54,458:INFO:           schemdraw: 0.15
2023-10-13 23:02:54,458:INFO:         statsmodels: 0.13.2
2023-10-13 23:02:54,458:INFO:              sktime: 0.21.1
2023-10-13 23:02:54,458:INFO:               tbats: 1.1.3
2023-10-13 23:02:54,458:INFO:            pmdarima: 2.0.3
2023-10-13 23:02:54,458:INFO:              psutil: 5.9.1
2023-10-13 23:02:54,458:INFO:          markupsafe: 2.1.1
2023-10-13 23:02:54,458:INFO:             pickle5: Not installed
2023-10-13 23:02:54,458:INFO:         cloudpickle: 2.2.1
2023-10-13 23:02:54,458:INFO:         deprecation: 2.1.0
2023-10-13 23:02:54,459:INFO:              xxhash: 3.4.1
2023-10-13 23:02:54,459:INFO:           wurlitzer: Not installed
2023-10-13 23:02:54,459:INFO:PyCaret optional dependencies:
2023-10-13 23:02:54,459:INFO:                shap: Not installed
2023-10-13 23:02:54,459:INFO:           interpret: Not installed
2023-10-13 23:02:54,459:INFO:                umap: Not installed
2023-10-13 23:02:54,459:INFO:     ydata_profiling: Not installed
2023-10-13 23:02:54,459:INFO:  explainerdashboard: Not installed
2023-10-13 23:02:54,459:INFO:             autoviz: Not installed
2023-10-13 23:02:54,459:INFO:           fairlearn: Not installed
2023-10-13 23:02:54,459:INFO:          deepchecks: Not installed
2023-10-13 23:02:54,459:INFO:             xgboost: 2.0.0
2023-10-13 23:02:54,459:INFO:            catboost: Not installed
2023-10-13 23:02:54,459:INFO:              kmodes: Not installed
2023-10-13 23:02:54,459:INFO:             mlxtend: Not installed
2023-10-13 23:02:54,459:INFO:       statsforecast: Not installed
2023-10-13 23:02:54,459:INFO:        tune_sklearn: Not installed
2023-10-13 23:02:54,459:INFO:                 ray: Not installed
2023-10-13 23:02:54,459:INFO:            hyperopt: Not installed
2023-10-13 23:02:54,459:INFO:              optuna: Not installed
2023-10-13 23:02:54,459:INFO:               skopt: Not installed
2023-10-13 23:02:54,459:INFO:              mlflow: Not installed
2023-10-13 23:02:54,459:INFO:              gradio: Not installed
2023-10-13 23:02:54,460:INFO:             fastapi: Not installed
2023-10-13 23:02:54,460:INFO:             uvicorn: Not installed
2023-10-13 23:02:54,460:INFO:              m2cgen: Not installed
2023-10-13 23:02:54,460:INFO:           evidently: Not installed
2023-10-13 23:02:54,460:INFO:               fugue: Not installed
2023-10-13 23:02:54,460:INFO:           streamlit: Not installed
2023-10-13 23:02:54,460:INFO:             prophet: Not installed
2023-10-13 23:02:54,460:INFO:None
2023-10-13 23:02:54,461:INFO:Set Forecast Horizon.
2023-10-13 23:02:54,461:INFO:Set up Train-Test Splits.
2023-10-13 23:03:54,620:INFO:PyCaret TSForecastingExperiment
2023-10-13 23:03:54,621:INFO:Logging name: ts-default-name
2023-10-13 23:03:54,621:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-10-13 23:03:54,621:INFO:version 3.1.0
2023-10-13 23:03:54,621:INFO:Initializing setup()
2023-10-13 23:03:54,621:INFO:self.USI: f4a4
2023-10-13 23:03:54,621:INFO:self._variable_keys: {'approach_type', 'y_test', 'gpu_param', 'primary_sp_to_use', 'significant_sps_no_harmonics', 'log_plots_param', 'index_type', 'significant_sps', 'seed', 'fold_generator', 'X', '_available_plots', 'fh', 'USI', 'exogenous_present', 'n_jobs_param', 'exp_id', 'fold_param', 'seasonality_present', 'html_param', 'logging_param', 'y', 'all_sps_to_use', 'y_train', 'y_train_transformed', 'X_train_transformed', 'gpu_n_jobs_param', 'exp_name_log', 'X_test_transformed', 'enforce_pi', 'X_transformed', 'y_test_transformed', 'enforce_exogenous', '_ml_usecase', 'data', 'model_engines', 'X_test', 'idx', 'candidate_sps', 'strictly_positive', 'pipeline', 'y_transformed', 'memory', 'X_train'}
2023-10-13 23:03:54,622:INFO:Checking environment
2023-10-13 23:03:54,622:INFO:python_version: 3.10.6
2023-10-13 23:03:54,622:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2023-10-13 23:03:54,622:INFO:machine: AMD64
2023-10-13 23:03:54,622:INFO:platform: Windows-10-10.0.22621-SP0
2023-10-13 23:03:54,622:INFO:Memory: svmem(total=8273383424, available=1438539776, percent=82.6, used=6834843648, free=1438539776)
2023-10-13 23:03:54,622:INFO:Physical Core: 4
2023-10-13 23:03:54,622:INFO:Logical Core: 8
2023-10-13 23:03:54,622:INFO:Checking libraries
2023-10-13 23:03:54,622:INFO:System:
2023-10-13 23:03:54,622:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2023-10-13 23:03:54,623:INFO:executable: c:\Users\manue\AppData\Local\Programs\Python\Python310\python.exe
2023-10-13 23:03:54,623:INFO:   machine: Windows-10-10.0.22621-SP0
2023-10-13 23:03:54,623:INFO:PyCaret required dependencies:
2023-10-13 23:03:54,623:INFO:                 pip: 22.2.1
2023-10-13 23:03:54,623:INFO:          setuptools: 63.2.0
2023-10-13 23:03:54,623:INFO:             pycaret: 3.1.0
2023-10-13 23:03:54,623:INFO:             IPython: 8.4.0
2023-10-13 23:03:54,623:INFO:          ipywidgets: 8.1.1
2023-10-13 23:03:54,623:INFO:                tqdm: 4.66.1
2023-10-13 23:03:54,623:INFO:               numpy: 1.23.2
2023-10-13 23:03:54,623:INFO:              pandas: 1.4.3
2023-10-13 23:03:54,623:INFO:              jinja2: 3.1.2
2023-10-13 23:03:54,623:INFO:               scipy: 1.10.1
2023-10-13 23:03:54,623:INFO:              joblib: 1.2.0
2023-10-13 23:03:54,623:INFO:             sklearn: 1.1.2
2023-10-13 23:03:54,623:INFO:                pyod: 1.1.0
2023-10-13 23:03:54,623:INFO:            imblearn: 0.11.0
2023-10-13 23:03:54,623:INFO:   category_encoders: 2.6.2
2023-10-13 23:03:54,623:INFO:            lightgbm: 4.1.0
2023-10-13 23:03:54,623:INFO:               numba: 0.58.0
2023-10-13 23:03:54,623:INFO:            requests: 2.28.1
2023-10-13 23:03:54,623:INFO:          matplotlib: 3.6.0
2023-10-13 23:03:54,624:INFO:          scikitplot: 0.3.7
2023-10-13 23:03:54,624:INFO:         yellowbrick: 1.5
2023-10-13 23:03:54,624:INFO:              plotly: 5.17.0
2023-10-13 23:03:54,624:INFO:    plotly-resampler: Not installed
2023-10-13 23:03:54,624:INFO:             kaleido: 0.2.1
2023-10-13 23:03:54,624:INFO:           schemdraw: 0.15
2023-10-13 23:03:54,624:INFO:         statsmodels: 0.13.2
2023-10-13 23:03:54,624:INFO:              sktime: 0.21.1
2023-10-13 23:03:54,624:INFO:               tbats: 1.1.3
2023-10-13 23:03:54,624:INFO:            pmdarima: 2.0.3
2023-10-13 23:03:54,624:INFO:              psutil: 5.9.1
2023-10-13 23:03:54,624:INFO:          markupsafe: 2.1.1
2023-10-13 23:03:54,624:INFO:             pickle5: Not installed
2023-10-13 23:03:54,624:INFO:         cloudpickle: 2.2.1
2023-10-13 23:03:54,624:INFO:         deprecation: 2.1.0
2023-10-13 23:03:54,624:INFO:              xxhash: 3.4.1
2023-10-13 23:03:54,624:INFO:           wurlitzer: Not installed
2023-10-13 23:03:54,624:INFO:PyCaret optional dependencies:
2023-10-13 23:03:54,624:INFO:                shap: Not installed
2023-10-13 23:03:54,624:INFO:           interpret: Not installed
2023-10-13 23:03:54,624:INFO:                umap: Not installed
2023-10-13 23:03:54,624:INFO:     ydata_profiling: Not installed
2023-10-13 23:03:54,624:INFO:  explainerdashboard: Not installed
2023-10-13 23:03:54,625:INFO:             autoviz: Not installed
2023-10-13 23:03:54,625:INFO:           fairlearn: Not installed
2023-10-13 23:03:54,625:INFO:          deepchecks: Not installed
2023-10-13 23:03:54,625:INFO:             xgboost: 2.0.0
2023-10-13 23:03:54,625:INFO:            catboost: Not installed
2023-10-13 23:03:54,625:INFO:              kmodes: Not installed
2023-10-13 23:03:54,625:INFO:             mlxtend: Not installed
2023-10-13 23:03:54,625:INFO:       statsforecast: Not installed
2023-10-13 23:03:54,625:INFO:        tune_sklearn: Not installed
2023-10-13 23:03:54,625:INFO:                 ray: Not installed
2023-10-13 23:03:54,625:INFO:            hyperopt: Not installed
2023-10-13 23:03:54,625:INFO:              optuna: Not installed
2023-10-13 23:03:54,625:INFO:               skopt: Not installed
2023-10-13 23:03:54,625:INFO:              mlflow: Not installed
2023-10-13 23:03:54,625:INFO:              gradio: Not installed
2023-10-13 23:03:54,625:INFO:             fastapi: Not installed
2023-10-13 23:03:54,625:INFO:             uvicorn: Not installed
2023-10-13 23:03:54,625:INFO:              m2cgen: Not installed
2023-10-13 23:03:54,625:INFO:           evidently: Not installed
2023-10-13 23:03:54,625:INFO:               fugue: Not installed
2023-10-13 23:03:54,625:INFO:           streamlit: Not installed
2023-10-13 23:03:54,625:INFO:             prophet: Not installed
2023-10-13 23:03:54,625:INFO:None
2023-10-13 23:03:54,853:INFO:Set Forecast Horizon.
2023-10-13 23:03:54,853:INFO:Set up Train-Test Splits.
2023-10-13 23:04:34,844:INFO:PyCaret TSForecastingExperiment
2023-10-13 23:04:34,844:INFO:Logging name: ts-default-name
2023-10-13 23:04:34,844:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-10-13 23:04:34,844:INFO:version 3.1.0
2023-10-13 23:04:34,844:INFO:Initializing setup()
2023-10-13 23:04:34,844:INFO:self.USI: 494d
2023-10-13 23:04:34,844:INFO:self._variable_keys: {'approach_type', 'y_test', 'gpu_param', 'primary_sp_to_use', 'significant_sps_no_harmonics', 'log_plots_param', 'index_type', 'significant_sps', 'seed', 'fold_generator', 'X', '_available_plots', 'fh', 'USI', 'exogenous_present', 'n_jobs_param', 'exp_id', 'fold_param', 'seasonality_present', 'html_param', 'logging_param', 'y', 'all_sps_to_use', 'y_train', 'y_train_transformed', 'X_train_transformed', 'gpu_n_jobs_param', 'exp_name_log', 'X_test_transformed', 'enforce_pi', 'X_transformed', 'y_test_transformed', 'enforce_exogenous', '_ml_usecase', 'data', 'model_engines', 'X_test', 'idx', 'candidate_sps', 'strictly_positive', 'pipeline', 'y_transformed', 'memory', 'X_train'}
2023-10-13 23:04:34,844:INFO:Checking environment
2023-10-13 23:04:34,845:INFO:python_version: 3.10.6
2023-10-13 23:04:34,845:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2023-10-13 23:04:34,845:INFO:machine: AMD64
2023-10-13 23:04:34,845:INFO:platform: Windows-10-10.0.22621-SP0
2023-10-13 23:04:34,845:INFO:Memory: svmem(total=8273383424, available=1519894528, percent=81.6, used=6753488896, free=1519894528)
2023-10-13 23:04:34,845:INFO:Physical Core: 4
2023-10-13 23:04:34,845:INFO:Logical Core: 8
2023-10-13 23:04:34,845:INFO:Checking libraries
2023-10-13 23:04:34,845:INFO:System:
2023-10-13 23:04:34,845:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2023-10-13 23:04:34,845:INFO:executable: c:\Users\manue\AppData\Local\Programs\Python\Python310\python.exe
2023-10-13 23:04:34,845:INFO:   machine: Windows-10-10.0.22621-SP0
2023-10-13 23:04:34,845:INFO:PyCaret required dependencies:
2023-10-13 23:04:34,845:INFO:                 pip: 22.2.1
2023-10-13 23:04:34,845:INFO:          setuptools: 63.2.0
2023-10-13 23:04:34,845:INFO:             pycaret: 3.1.0
2023-10-13 23:04:34,845:INFO:             IPython: 8.4.0
2023-10-13 23:04:34,845:INFO:          ipywidgets: 8.1.1
2023-10-13 23:04:34,845:INFO:                tqdm: 4.66.1
2023-10-13 23:04:34,845:INFO:               numpy: 1.23.2
2023-10-13 23:04:34,846:INFO:              pandas: 1.4.3
2023-10-13 23:04:34,846:INFO:              jinja2: 3.1.2
2023-10-13 23:04:34,846:INFO:               scipy: 1.10.1
2023-10-13 23:04:34,846:INFO:              joblib: 1.2.0
2023-10-13 23:04:34,846:INFO:             sklearn: 1.1.2
2023-10-13 23:04:34,846:INFO:                pyod: 1.1.0
2023-10-13 23:04:34,846:INFO:            imblearn: 0.11.0
2023-10-13 23:04:34,846:INFO:   category_encoders: 2.6.2
2023-10-13 23:04:34,846:INFO:            lightgbm: 4.1.0
2023-10-13 23:04:34,846:INFO:               numba: 0.58.0
2023-10-13 23:04:34,846:INFO:            requests: 2.28.1
2023-10-13 23:04:34,846:INFO:          matplotlib: 3.6.0
2023-10-13 23:04:34,846:INFO:          scikitplot: 0.3.7
2023-10-13 23:04:34,846:INFO:         yellowbrick: 1.5
2023-10-13 23:04:34,846:INFO:              plotly: 5.17.0
2023-10-13 23:04:34,846:INFO:    plotly-resampler: Not installed
2023-10-13 23:04:34,846:INFO:             kaleido: 0.2.1
2023-10-13 23:04:34,846:INFO:           schemdraw: 0.15
2023-10-13 23:04:34,846:INFO:         statsmodels: 0.13.2
2023-10-13 23:04:34,846:INFO:              sktime: 0.21.1
2023-10-13 23:04:34,846:INFO:               tbats: 1.1.3
2023-10-13 23:04:34,846:INFO:            pmdarima: 2.0.3
2023-10-13 23:04:34,846:INFO:              psutil: 5.9.1
2023-10-13 23:04:34,846:INFO:          markupsafe: 2.1.1
2023-10-13 23:04:34,846:INFO:             pickle5: Not installed
2023-10-13 23:04:34,846:INFO:         cloudpickle: 2.2.1
2023-10-13 23:04:34,846:INFO:         deprecation: 2.1.0
2023-10-13 23:04:34,846:INFO:              xxhash: 3.4.1
2023-10-13 23:04:34,846:INFO:           wurlitzer: Not installed
2023-10-13 23:04:34,846:INFO:PyCaret optional dependencies:
2023-10-13 23:04:34,847:INFO:                shap: Not installed
2023-10-13 23:04:34,847:INFO:           interpret: Not installed
2023-10-13 23:04:34,847:INFO:                umap: Not installed
2023-10-13 23:04:34,847:INFO:     ydata_profiling: Not installed
2023-10-13 23:04:34,847:INFO:  explainerdashboard: Not installed
2023-10-13 23:04:34,847:INFO:             autoviz: Not installed
2023-10-13 23:04:34,847:INFO:           fairlearn: Not installed
2023-10-13 23:04:34,847:INFO:          deepchecks: Not installed
2023-10-13 23:04:34,847:INFO:             xgboost: 2.0.0
2023-10-13 23:04:34,847:INFO:            catboost: Not installed
2023-10-13 23:04:34,847:INFO:              kmodes: Not installed
2023-10-13 23:04:34,847:INFO:             mlxtend: Not installed
2023-10-13 23:04:34,847:INFO:       statsforecast: Not installed
2023-10-13 23:04:34,847:INFO:        tune_sklearn: Not installed
2023-10-13 23:04:34,847:INFO:                 ray: Not installed
2023-10-13 23:04:34,847:INFO:            hyperopt: Not installed
2023-10-13 23:04:34,847:INFO:              optuna: Not installed
2023-10-13 23:04:34,847:INFO:               skopt: Not installed
2023-10-13 23:04:34,847:INFO:              mlflow: Not installed
2023-10-13 23:04:34,847:INFO:              gradio: Not installed
2023-10-13 23:04:34,847:INFO:             fastapi: Not installed
2023-10-13 23:04:34,847:INFO:             uvicorn: Not installed
2023-10-13 23:04:34,847:INFO:              m2cgen: Not installed
2023-10-13 23:04:34,847:INFO:           evidently: Not installed
2023-10-13 23:04:34,847:INFO:               fugue: Not installed
2023-10-13 23:04:34,847:INFO:           streamlit: Not installed
2023-10-13 23:04:34,847:INFO:             prophet: Not installed
2023-10-13 23:04:34,847:INFO:None
2023-10-13 23:05:00,343:INFO:PyCaret TSForecastingExperiment
2023-10-13 23:05:00,343:INFO:Logging name: ts-default-name
2023-10-13 23:05:00,343:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-10-13 23:05:00,343:INFO:version 3.1.0
2023-10-13 23:05:00,343:INFO:Initializing setup()
2023-10-13 23:05:00,343:INFO:self.USI: 0201
2023-10-13 23:05:00,343:INFO:self._variable_keys: {'approach_type', 'y_test', 'gpu_param', 'primary_sp_to_use', 'significant_sps_no_harmonics', 'log_plots_param', 'index_type', 'significant_sps', 'seed', 'fold_generator', 'X', '_available_plots', 'fh', 'USI', 'exogenous_present', 'n_jobs_param', 'exp_id', 'fold_param', 'seasonality_present', 'html_param', 'logging_param', 'y', 'all_sps_to_use', 'y_train', 'y_train_transformed', 'X_train_transformed', 'gpu_n_jobs_param', 'exp_name_log', 'X_test_transformed', 'enforce_pi', 'X_transformed', 'y_test_transformed', 'enforce_exogenous', '_ml_usecase', 'data', 'model_engines', 'X_test', 'idx', 'candidate_sps', 'strictly_positive', 'pipeline', 'y_transformed', 'memory', 'X_train'}
2023-10-13 23:05:00,343:INFO:Checking environment
2023-10-13 23:05:00,343:INFO:python_version: 3.10.6
2023-10-13 23:05:00,343:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2023-10-13 23:05:00,344:INFO:machine: AMD64
2023-10-13 23:05:00,344:INFO:platform: Windows-10-10.0.22621-SP0
2023-10-13 23:05:00,344:INFO:Memory: svmem(total=8273383424, available=1479987200, percent=82.1, used=6793396224, free=1479987200)
2023-10-13 23:05:00,344:INFO:Physical Core: 4
2023-10-13 23:05:00,344:INFO:Logical Core: 8
2023-10-13 23:05:00,344:INFO:Checking libraries
2023-10-13 23:05:00,344:INFO:System:
2023-10-13 23:05:00,344:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2023-10-13 23:05:00,344:INFO:executable: c:\Users\manue\AppData\Local\Programs\Python\Python310\python.exe
2023-10-13 23:05:00,344:INFO:   machine: Windows-10-10.0.22621-SP0
2023-10-13 23:05:00,344:INFO:PyCaret required dependencies:
2023-10-13 23:05:00,344:INFO:                 pip: 22.2.1
2023-10-13 23:05:00,344:INFO:          setuptools: 63.2.0
2023-10-13 23:05:00,344:INFO:             pycaret: 3.1.0
2023-10-13 23:05:00,344:INFO:             IPython: 8.4.0
2023-10-13 23:05:00,344:INFO:          ipywidgets: 8.1.1
2023-10-13 23:05:00,344:INFO:                tqdm: 4.66.1
2023-10-13 23:05:00,344:INFO:               numpy: 1.23.2
2023-10-13 23:05:00,344:INFO:              pandas: 1.4.3
2023-10-13 23:05:00,344:INFO:              jinja2: 3.1.2
2023-10-13 23:05:00,344:INFO:               scipy: 1.10.1
2023-10-13 23:05:00,344:INFO:              joblib: 1.2.0
2023-10-13 23:05:00,344:INFO:             sklearn: 1.1.2
2023-10-13 23:05:00,344:INFO:                pyod: 1.1.0
2023-10-13 23:05:00,344:INFO:            imblearn: 0.11.0
2023-10-13 23:05:00,344:INFO:   category_encoders: 2.6.2
2023-10-13 23:05:00,344:INFO:            lightgbm: 4.1.0
2023-10-13 23:05:00,344:INFO:               numba: 0.58.0
2023-10-13 23:05:00,344:INFO:            requests: 2.28.1
2023-10-13 23:05:00,345:INFO:          matplotlib: 3.6.0
2023-10-13 23:05:00,345:INFO:          scikitplot: 0.3.7
2023-10-13 23:05:00,345:INFO:         yellowbrick: 1.5
2023-10-13 23:05:00,345:INFO:              plotly: 5.17.0
2023-10-13 23:05:00,345:INFO:    plotly-resampler: Not installed
2023-10-13 23:05:00,345:INFO:             kaleido: 0.2.1
2023-10-13 23:05:00,345:INFO:           schemdraw: 0.15
2023-10-13 23:05:00,345:INFO:         statsmodels: 0.13.2
2023-10-13 23:05:00,345:INFO:              sktime: 0.21.1
2023-10-13 23:05:00,345:INFO:               tbats: 1.1.3
2023-10-13 23:05:00,345:INFO:            pmdarima: 2.0.3
2023-10-13 23:05:00,345:INFO:              psutil: 5.9.1
2023-10-13 23:05:00,345:INFO:          markupsafe: 2.1.1
2023-10-13 23:05:00,345:INFO:             pickle5: Not installed
2023-10-13 23:05:00,345:INFO:         cloudpickle: 2.2.1
2023-10-13 23:05:00,345:INFO:         deprecation: 2.1.0
2023-10-13 23:05:00,345:INFO:              xxhash: 3.4.1
2023-10-13 23:05:00,345:INFO:           wurlitzer: Not installed
2023-10-13 23:05:00,345:INFO:PyCaret optional dependencies:
2023-10-13 23:05:00,345:INFO:                shap: Not installed
2023-10-13 23:05:00,345:INFO:           interpret: Not installed
2023-10-13 23:05:00,345:INFO:                umap: Not installed
2023-10-13 23:05:00,345:INFO:     ydata_profiling: Not installed
2023-10-13 23:05:00,345:INFO:  explainerdashboard: Not installed
2023-10-13 23:05:00,345:INFO:             autoviz: Not installed
2023-10-13 23:05:00,345:INFO:           fairlearn: Not installed
2023-10-13 23:05:00,346:INFO:          deepchecks: Not installed
2023-10-13 23:05:00,346:INFO:             xgboost: 2.0.0
2023-10-13 23:05:00,346:INFO:            catboost: Not installed
2023-10-13 23:05:00,346:INFO:              kmodes: Not installed
2023-10-13 23:05:00,346:INFO:             mlxtend: Not installed
2023-10-13 23:05:00,346:INFO:       statsforecast: Not installed
2023-10-13 23:05:00,346:INFO:        tune_sklearn: Not installed
2023-10-13 23:05:00,346:INFO:                 ray: Not installed
2023-10-13 23:05:00,346:INFO:            hyperopt: Not installed
2023-10-13 23:05:00,346:INFO:              optuna: Not installed
2023-10-13 23:05:00,346:INFO:               skopt: Not installed
2023-10-13 23:05:00,346:INFO:              mlflow: Not installed
2023-10-13 23:05:00,346:INFO:              gradio: Not installed
2023-10-13 23:05:00,346:INFO:             fastapi: Not installed
2023-10-13 23:05:00,346:INFO:             uvicorn: Not installed
2023-10-13 23:05:00,346:INFO:              m2cgen: Not installed
2023-10-13 23:05:00,346:INFO:           evidently: Not installed
2023-10-13 23:05:00,346:INFO:               fugue: Not installed
2023-10-13 23:05:00,346:INFO:           streamlit: Not installed
2023-10-13 23:05:00,346:INFO:             prophet: Not installed
2023-10-13 23:05:00,346:INFO:None
2023-10-13 23:05:00,581:INFO:Set Forecast Horizon.
2023-10-13 23:05:00,581:INFO:Set up Train-Test Splits.
2023-10-13 23:09:21,776:INFO:PyCaret TSForecastingExperiment
2023-10-13 23:09:21,776:INFO:Logging name: ts-default-name
2023-10-13 23:09:21,776:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-10-13 23:09:21,776:INFO:version 3.1.0
2023-10-13 23:09:21,776:INFO:Initializing setup()
2023-10-13 23:09:21,776:INFO:self.USI: b494
2023-10-13 23:09:21,776:INFO:self._variable_keys: {'approach_type', 'y_test', 'gpu_param', 'primary_sp_to_use', 'significant_sps_no_harmonics', 'log_plots_param', 'index_type', 'significant_sps', 'seed', 'fold_generator', 'X', '_available_plots', 'fh', 'USI', 'exogenous_present', 'n_jobs_param', 'exp_id', 'fold_param', 'seasonality_present', 'html_param', 'logging_param', 'y', 'all_sps_to_use', 'y_train', 'y_train_transformed', 'X_train_transformed', 'gpu_n_jobs_param', 'exp_name_log', 'X_test_transformed', 'enforce_pi', 'X_transformed', 'y_test_transformed', 'enforce_exogenous', '_ml_usecase', 'data', 'model_engines', 'X_test', 'idx', 'candidate_sps', 'strictly_positive', 'pipeline', 'y_transformed', 'memory', 'X_train'}
2023-10-13 23:09:21,776:INFO:Checking environment
2023-10-13 23:09:21,776:INFO:python_version: 3.10.6
2023-10-13 23:09:21,776:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2023-10-13 23:09:21,776:INFO:machine: AMD64
2023-10-13 23:09:21,776:INFO:platform: Windows-10-10.0.22621-SP0
2023-10-13 23:09:21,776:INFO:Memory: svmem(total=8273383424, available=1622487040, percent=80.4, used=6650896384, free=1622487040)
2023-10-13 23:09:21,776:INFO:Physical Core: 4
2023-10-13 23:09:21,776:INFO:Logical Core: 8
2023-10-13 23:09:21,776:INFO:Checking libraries
2023-10-13 23:09:21,776:INFO:System:
2023-10-13 23:09:21,776:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2023-10-13 23:09:21,776:INFO:executable: c:\Users\manue\AppData\Local\Programs\Python\Python310\python.exe
2023-10-13 23:09:21,776:INFO:   machine: Windows-10-10.0.22621-SP0
2023-10-13 23:09:21,776:INFO:PyCaret required dependencies:
2023-10-13 23:09:21,776:INFO:                 pip: 22.2.1
2023-10-13 23:09:21,776:INFO:          setuptools: 63.2.0
2023-10-13 23:09:21,776:INFO:             pycaret: 3.1.0
2023-10-13 23:09:21,776:INFO:             IPython: 8.4.0
2023-10-13 23:09:21,776:INFO:          ipywidgets: 8.1.1
2023-10-13 23:09:21,776:INFO:                tqdm: 4.66.1
2023-10-13 23:09:21,776:INFO:               numpy: 1.23.2
2023-10-13 23:09:21,776:INFO:              pandas: 1.4.3
2023-10-13 23:09:21,776:INFO:              jinja2: 3.1.2
2023-10-13 23:09:21,776:INFO:               scipy: 1.10.1
2023-10-13 23:09:21,792:INFO:              joblib: 1.2.0
2023-10-13 23:09:21,792:INFO:             sklearn: 1.1.2
2023-10-13 23:09:21,792:INFO:                pyod: 1.1.0
2023-10-13 23:09:21,792:INFO:            imblearn: 0.11.0
2023-10-13 23:09:21,792:INFO:   category_encoders: 2.6.2
2023-10-13 23:09:21,792:INFO:            lightgbm: 4.1.0
2023-10-13 23:09:21,792:INFO:               numba: 0.58.0
2023-10-13 23:09:21,792:INFO:            requests: 2.28.1
2023-10-13 23:09:21,792:INFO:          matplotlib: 3.6.0
2023-10-13 23:09:21,792:INFO:          scikitplot: 0.3.7
2023-10-13 23:09:21,792:INFO:         yellowbrick: 1.5
2023-10-13 23:09:21,792:INFO:              plotly: 5.17.0
2023-10-13 23:09:21,792:INFO:    plotly-resampler: Not installed
2023-10-13 23:09:21,792:INFO:             kaleido: 0.2.1
2023-10-13 23:09:21,792:INFO:           schemdraw: 0.15
2023-10-13 23:09:21,792:INFO:         statsmodels: 0.13.2
2023-10-13 23:09:21,792:INFO:              sktime: 0.21.1
2023-10-13 23:09:21,792:INFO:               tbats: 1.1.3
2023-10-13 23:09:21,792:INFO:            pmdarima: 2.0.3
2023-10-13 23:09:21,792:INFO:              psutil: 5.9.1
2023-10-13 23:09:21,792:INFO:          markupsafe: 2.1.1
2023-10-13 23:09:21,792:INFO:             pickle5: Not installed
2023-10-13 23:09:21,792:INFO:         cloudpickle: 2.2.1
2023-10-13 23:09:21,792:INFO:         deprecation: 2.1.0
2023-10-13 23:09:21,792:INFO:              xxhash: 3.4.1
2023-10-13 23:09:21,792:INFO:           wurlitzer: Not installed
2023-10-13 23:09:21,792:INFO:PyCaret optional dependencies:
2023-10-13 23:09:21,792:INFO:                shap: Not installed
2023-10-13 23:09:21,792:INFO:           interpret: Not installed
2023-10-13 23:09:21,792:INFO:                umap: Not installed
2023-10-13 23:09:21,792:INFO:     ydata_profiling: Not installed
2023-10-13 23:09:21,792:INFO:  explainerdashboard: Not installed
2023-10-13 23:09:21,792:INFO:             autoviz: Not installed
2023-10-13 23:09:21,792:INFO:           fairlearn: Not installed
2023-10-13 23:09:21,792:INFO:          deepchecks: Not installed
2023-10-13 23:09:21,792:INFO:             xgboost: 2.0.0
2023-10-13 23:09:21,792:INFO:            catboost: Not installed
2023-10-13 23:09:21,792:INFO:              kmodes: Not installed
2023-10-13 23:09:21,792:INFO:             mlxtend: Not installed
2023-10-13 23:09:21,792:INFO:       statsforecast: Not installed
2023-10-13 23:09:21,792:INFO:        tune_sklearn: Not installed
2023-10-13 23:09:21,792:INFO:                 ray: Not installed
2023-10-13 23:09:21,792:INFO:            hyperopt: Not installed
2023-10-13 23:09:21,792:INFO:              optuna: Not installed
2023-10-13 23:09:21,792:INFO:               skopt: Not installed
2023-10-13 23:09:21,792:INFO:              mlflow: Not installed
2023-10-13 23:09:21,792:INFO:              gradio: Not installed
2023-10-13 23:09:21,792:INFO:             fastapi: Not installed
2023-10-13 23:09:21,792:INFO:             uvicorn: Not installed
2023-10-13 23:09:21,792:INFO:              m2cgen: Not installed
2023-10-13 23:09:21,792:INFO:           evidently: Not installed
2023-10-13 23:09:21,792:INFO:               fugue: Not installed
2023-10-13 23:09:21,792:INFO:           streamlit: Not installed
2023-10-13 23:09:21,792:INFO:             prophet: Not installed
2023-10-13 23:09:21,792:INFO:None
2023-10-13 23:09:21,792:INFO:Set Forecast Horizon.
2023-10-13 23:09:21,792:INFO:Set up Train-Test Splits.
2023-10-13 23:09:21,823:INFO:Finished creating preprocessing pipeline.
2023-10-13 23:09:21,823:INFO:Pipeline: ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                DummyForecaster())]))])
2023-10-13 23:09:21,823:INFO:Set up Seasonal Period.
2023-10-13 23:09:21,839:INFO:Setting the seasonal component type - 'add' or 'mul'.
2023-10-13 23:09:21,839:INFO:Checking if data is strictly positive.
2023-10-13 23:09:21,886:INFO:Creating final display dataframe.
2023-10-13 23:09:21,886:INFO:Setup Display Container:                                          Description  \
0                                         session_id   
1                                             Target   
2                                           Approach   
3                                Exogenous Variables   
4                                Original data shape   
5                             Transformed data shape   
6                        Transformed train set shape   
7                         Transformed test set shape   
8                           Rows with missing values   
9                                     Fold Generator   
10                                       Fold Number   
11                       Enforce Prediction Interval   
12                   Splits used for hyperparameters   
13                   User Defined Seasonal Period(s)   
14                           Ignore Seasonality Test   
15                        Seasonality Detection Algo   
16                            Max Period to Consider   
17                         Seasonal Period(s) Tested   
18                    Significant Seasonal Period(s)   
19  Significant Seasonal Period(s) without Harmonics   
20                                  Remove Harmonics   
21                            Harmonics Order Method   
22                          Num Seasonalities to Use   
23                          All Seasonalities to Use   
24                               Primary Seasonality   
25                               Seasonality Present   
26                                  Seasonality Type   
27                          Target Strictly Positive   
28                                Target White Noise   
29                                     Recommended d   
30                            Recommended Seasonal D   
31                                        Preprocess   
32                                          CPU Jobs   
33                                           Use GPU   
34                                    Log Experiment   
35                                   Experiment Name   
36                                               USI   

                           Value  
0                            123  
1   Number of airline passengers  
2                     Univariate  
3                    Not Present  
4                       (144, 1)  
5                       (144, 1)  
6                       (141, 1)  
7                         (3, 1)  
8                           0.0%  
9        ExpandingWindowSplitter  
10                             3  
11                         False  
12                           all  
13                          None  
14                         False  
15                          auto  
16                            60  
17          [12, 24, 36, 11, 48]  
18          [12, 24, 36, 11, 48]  
19                  [48, 36, 11]  
20                         False  
21                  harmonic_max  
22                             1  
23                          [12]  
24                            12  
25                          True  
26                           mul  
27                          True  
28                            No  
29                             1  
30                             1  
31                         False  
32                            -1  
33                         False  
34                         False  
35               ts-default-name  
36                          b494  
2023-10-13 23:09:21,901:INFO:Engine successfully changes for model 'auto_arima' to 'pmdarima'.
2023-10-13 23:09:22,006:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,006:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,006:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,006:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,006:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,006:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,006:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,006:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,006:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,012:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,012:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,012:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,012:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,012:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,012:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,012:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,012:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,012:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,012:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,012:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,012:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,012:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,012:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,012:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,012:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,012:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,012:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,012:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,012:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,012:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,012:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,012:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,012:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,012:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,012:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,012:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,028:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,028:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,028:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,028:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,028:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,028:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,028:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,028:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,028:INFO:Engine successfully changes for model 'lr_cds_dt' to 'sklearn'.
2023-10-13 23:09:22,028:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,028:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,028:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,028:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,028:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,028:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,028:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,028:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,028:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,028:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,043:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,043:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,043:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,043:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,043:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,043:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,043:INFO:Engine successfully changes for model 'en_cds_dt' to 'sklearn'.
2023-10-13 23:09:22,059:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,059:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,059:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,059:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,059:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,059:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,059:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,059:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,059:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,059:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,059:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,059:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,059:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,059:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,059:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,059:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,059:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,059:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,059:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,059:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,075:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,075:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,075:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,075:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,075:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,075:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,075:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,075:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,075:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,075:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,075:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,075:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,075:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,075:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,075:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,075:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,075:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,075:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,075:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,075:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,075:INFO:Engine successfully changes for model 'ridge_cds_dt' to 'sklearn'.
2023-10-13 23:09:22,075:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,075:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,090:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,090:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,090:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,090:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,090:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,090:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,090:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,090:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,090:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,090:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,090:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,090:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,090:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,090:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,090:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,106:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,106:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,106:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,106:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,106:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,106:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,106:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,106:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,106:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,106:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,106:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,106:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,106:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,106:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,106:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,106:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,106:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,106:INFO:Engine successfully changes for model 'lasso_cds_dt' to 'sklearn'.
2023-10-13 23:09:22,106:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,122:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,122:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,122:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,122:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,122:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,122:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,122:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,122:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,122:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,122:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,122:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,122:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,122:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,122:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,122:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,122:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,122:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,122:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,122:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,122:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,122:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,138:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,138:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,138:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,138:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,138:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,138:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,138:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,138:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,138:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,138:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,138:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,138:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,138:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,138:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,138:INFO:Engine successfully changes for model 'lar_cds_dt' to 'sklearn'.
2023-10-13 23:09:22,138:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,138:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,138:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,138:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,138:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,138:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,153:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,153:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,153:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,153:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,153:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,153:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,153:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,153:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,153:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,153:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,153:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,153:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,153:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,153:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,153:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,153:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,153:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,153:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,153:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,153:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,153:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,153:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,153:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,169:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,169:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,169:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,169:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,169:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,169:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,169:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,169:INFO:Engine successfully changes for model 'llar_cds_dt' to 'sklearn'.
2023-10-13 23:09:22,169:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,169:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,169:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,169:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,169:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,169:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,169:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,169:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,169:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,169:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,169:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,169:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,169:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,169:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,169:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,169:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,169:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,184:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,184:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,184:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,184:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,184:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,184:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,184:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,184:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,184:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,184:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,184:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,184:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,184:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,184:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,184:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,184:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,184:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,184:INFO:Engine successfully changes for model 'br_cds_dt' to 'sklearn'.
2023-10-13 23:09:22,200:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,200:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,200:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,200:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,200:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,200:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,200:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,207:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,207:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,207:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,207:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,207:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,207:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,207:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,207:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,207:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,216:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,216:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,216:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,216:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,216:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,216:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,216:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,216:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,216:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,216:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,216:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,216:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,216:INFO:Engine successfully changes for model 'huber_cds_dt' to 'sklearn'.
2023-10-13 23:09:22,216:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,216:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,216:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,216:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,216:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,216:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,232:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,232:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,232:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,232:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,232:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,232:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,232:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,232:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,232:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,232:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,232:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,232:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,232:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,232:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,232:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,232:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,232:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,232:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,232:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,232:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,232:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,232:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,232:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,232:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,232:INFO:Engine successfully changes for model 'par_cds_dt' to 'sklearn'.
2023-10-13 23:09:22,248:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,248:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,248:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,248:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,248:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,248:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,248:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,248:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,248:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,248:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,248:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,248:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,248:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,263:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,263:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,263:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,263:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,263:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,263:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,263:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,263:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,263:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,263:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,263:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,263:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,263:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,263:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,263:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,263:INFO:Engine successfully changes for model 'omp_cds_dt' to 'sklearn'.
2023-10-13 23:09:22,279:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,279:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,279:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,279:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,279:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,279:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,279:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,279:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,279:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,279:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,279:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,279:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,279:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,279:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,279:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,279:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,279:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,279:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,295:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,295:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,295:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,295:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,295:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,295:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,295:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,295:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,295:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,295:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,295:INFO:Engine successfully changes for model 'knn_cds_dt' to 'sklearn'.
2023-10-13 23:09:22,295:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,295:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,295:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,295:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,295:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,307:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,307:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,307:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,307:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,307:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,307:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,307:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,307:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,311:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,311:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,311:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,311:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,311:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,311:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,311:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,311:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,311:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,311:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,311:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,311:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,311:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,311:INFO:Engine successfully changes for model 'dt_cds_dt' to 'sklearn'.
2023-10-13 23:09:22,311:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,326:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,326:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,326:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,326:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,326:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,326:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,326:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,326:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,326:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,326:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,326:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,326:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,342:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,342:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,342:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,342:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,342:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,342:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,342:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,342:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,342:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,342:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,342:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,342:INFO:Engine successfully changes for model 'rf_cds_dt' to 'sklearn'.
2023-10-13 23:09:22,342:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,342:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,342:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,342:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,342:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,342:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,342:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,342:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,342:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,342:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,342:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,358:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,358:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,358:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,358:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,358:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,358:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,358:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,358:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,358:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,358:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,358:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,358:INFO:Engine successfully changes for model 'et_cds_dt' to 'sklearn'.
2023-10-13 23:09:22,373:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,373:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,373:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,373:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,373:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,373:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,373:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,373:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,373:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,373:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,373:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,389:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,389:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,389:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,389:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,389:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,389:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,389:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,389:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,389:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,389:INFO:Engine successfully changes for model 'gbr_cds_dt' to 'sklearn'.
2023-10-13 23:09:22,389:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,389:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,389:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,389:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,389:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,389:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,389:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,389:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,389:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,408:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,408:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,408:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,408:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,408:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,408:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,408:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,408:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,408:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,408:INFO:Engine successfully changes for model 'ada_cds_dt' to 'sklearn'.
2023-10-13 23:09:22,421:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,421:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,421:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,421:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,421:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,421:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,421:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,421:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,421:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,436:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,436:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,436:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,436:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,436:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,436:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,436:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,436:INFO:Engine successfully changes for model 'xgboost_cds_dt' to 'sklearn'.
2023-10-13 23:09:22,436:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,452:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,452:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,452:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,452:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,452:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,452:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,452:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,452:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,452:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,452:INFO:Engine successfully changes for model 'lightgbm_cds_dt' to 'sklearn'.
2023-10-13 23:09:22,468:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,468:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,468:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,468:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,468:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,468:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,483:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,483:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,483:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,483:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:22,483:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,483:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,483:INFO:Engine successfully changes for model 'catboost_cds_dt' to 'sklearn'.
2023-10-13 23:09:22,483:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,499:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,499:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,499:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,499:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,499:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,508:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,508:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,515:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,515:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,515:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,515:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,515:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,515:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:22,531:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,531:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:22,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:22,531:INFO:setup() successfully completed in 0.75s...............
2023-10-13 23:09:46,354:INFO:PyCaret TSForecastingExperiment
2023-10-13 23:09:46,354:INFO:Logging name: ts-default-name
2023-10-13 23:09:46,355:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-10-13 23:09:46,355:INFO:version 3.1.0
2023-10-13 23:09:46,355:INFO:Initializing setup()
2023-10-13 23:09:46,355:INFO:self.USI: 0221
2023-10-13 23:09:46,355:INFO:self._variable_keys: {'approach_type', 'y_test', 'gpu_param', 'primary_sp_to_use', 'significant_sps_no_harmonics', 'log_plots_param', 'index_type', 'significant_sps', 'seed', 'fold_generator', 'X', '_available_plots', 'fh', 'USI', 'exogenous_present', 'n_jobs_param', 'exp_id', 'fold_param', 'seasonality_present', 'html_param', 'logging_param', 'y', 'all_sps_to_use', 'y_train', 'y_train_transformed', 'X_train_transformed', 'gpu_n_jobs_param', 'exp_name_log', 'X_test_transformed', 'enforce_pi', 'X_transformed', 'y_test_transformed', 'enforce_exogenous', '_ml_usecase', 'data', 'model_engines', 'X_test', 'idx', 'candidate_sps', 'strictly_positive', 'pipeline', 'y_transformed', 'memory', 'X_train'}
2023-10-13 23:09:46,355:INFO:Checking environment
2023-10-13 23:09:46,355:INFO:python_version: 3.10.6
2023-10-13 23:09:46,355:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2023-10-13 23:09:46,355:INFO:machine: AMD64
2023-10-13 23:09:46,355:INFO:platform: Windows-10-10.0.22621-SP0
2023-10-13 23:09:46,355:INFO:Memory: svmem(total=8273383424, available=1636347904, percent=80.2, used=6637035520, free=1636347904)
2023-10-13 23:09:46,356:INFO:Physical Core: 4
2023-10-13 23:09:46,356:INFO:Logical Core: 8
2023-10-13 23:09:46,356:INFO:Checking libraries
2023-10-13 23:09:46,356:INFO:System:
2023-10-13 23:09:46,356:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2023-10-13 23:09:46,356:INFO:executable: c:\Users\manue\AppData\Local\Programs\Python\Python310\python.exe
2023-10-13 23:09:46,356:INFO:   machine: Windows-10-10.0.22621-SP0
2023-10-13 23:09:46,356:INFO:PyCaret required dependencies:
2023-10-13 23:09:46,356:INFO:                 pip: 22.2.1
2023-10-13 23:09:46,356:INFO:          setuptools: 63.2.0
2023-10-13 23:09:46,356:INFO:             pycaret: 3.1.0
2023-10-13 23:09:46,356:INFO:             IPython: 8.4.0
2023-10-13 23:09:46,356:INFO:          ipywidgets: 8.1.1
2023-10-13 23:09:46,356:INFO:                tqdm: 4.66.1
2023-10-13 23:09:46,356:INFO:               numpy: 1.23.2
2023-10-13 23:09:46,356:INFO:              pandas: 1.4.3
2023-10-13 23:09:46,356:INFO:              jinja2: 3.1.2
2023-10-13 23:09:46,356:INFO:               scipy: 1.10.1
2023-10-13 23:09:46,356:INFO:              joblib: 1.2.0
2023-10-13 23:09:46,356:INFO:             sklearn: 1.1.2
2023-10-13 23:09:46,357:INFO:                pyod: 1.1.0
2023-10-13 23:09:46,357:INFO:            imblearn: 0.11.0
2023-10-13 23:09:46,357:INFO:   category_encoders: 2.6.2
2023-10-13 23:09:46,357:INFO:            lightgbm: 4.1.0
2023-10-13 23:09:46,357:INFO:               numba: 0.58.0
2023-10-13 23:09:46,357:INFO:            requests: 2.28.1
2023-10-13 23:09:46,357:INFO:          matplotlib: 3.6.0
2023-10-13 23:09:46,357:INFO:          scikitplot: 0.3.7
2023-10-13 23:09:46,357:INFO:         yellowbrick: 1.5
2023-10-13 23:09:46,357:INFO:              plotly: 5.17.0
2023-10-13 23:09:46,357:INFO:    plotly-resampler: Not installed
2023-10-13 23:09:46,357:INFO:             kaleido: 0.2.1
2023-10-13 23:09:46,357:INFO:           schemdraw: 0.15
2023-10-13 23:09:46,357:INFO:         statsmodels: 0.13.2
2023-10-13 23:09:46,357:INFO:              sktime: 0.21.1
2023-10-13 23:09:46,357:INFO:               tbats: 1.1.3
2023-10-13 23:09:46,357:INFO:            pmdarima: 2.0.3
2023-10-13 23:09:46,357:INFO:              psutil: 5.9.1
2023-10-13 23:09:46,357:INFO:          markupsafe: 2.1.1
2023-10-13 23:09:46,357:INFO:             pickle5: Not installed
2023-10-13 23:09:46,357:INFO:         cloudpickle: 2.2.1
2023-10-13 23:09:46,357:INFO:         deprecation: 2.1.0
2023-10-13 23:09:46,357:INFO:              xxhash: 3.4.1
2023-10-13 23:09:46,357:INFO:           wurlitzer: Not installed
2023-10-13 23:09:46,357:INFO:PyCaret optional dependencies:
2023-10-13 23:09:46,357:INFO:                shap: Not installed
2023-10-13 23:09:46,357:INFO:           interpret: Not installed
2023-10-13 23:09:46,358:INFO:                umap: Not installed
2023-10-13 23:09:46,358:INFO:     ydata_profiling: Not installed
2023-10-13 23:09:46,358:INFO:  explainerdashboard: Not installed
2023-10-13 23:09:46,358:INFO:             autoviz: Not installed
2023-10-13 23:09:46,358:INFO:           fairlearn: Not installed
2023-10-13 23:09:46,358:INFO:          deepchecks: Not installed
2023-10-13 23:09:46,358:INFO:             xgboost: 2.0.0
2023-10-13 23:09:46,358:INFO:            catboost: Not installed
2023-10-13 23:09:46,358:INFO:              kmodes: Not installed
2023-10-13 23:09:46,358:INFO:             mlxtend: Not installed
2023-10-13 23:09:46,358:INFO:       statsforecast: Not installed
2023-10-13 23:09:46,358:INFO:        tune_sklearn: Not installed
2023-10-13 23:09:46,358:INFO:                 ray: Not installed
2023-10-13 23:09:46,358:INFO:            hyperopt: Not installed
2023-10-13 23:09:46,358:INFO:              optuna: Not installed
2023-10-13 23:09:46,358:INFO:               skopt: Not installed
2023-10-13 23:09:46,358:INFO:              mlflow: Not installed
2023-10-13 23:09:46,358:INFO:              gradio: Not installed
2023-10-13 23:09:46,358:INFO:             fastapi: Not installed
2023-10-13 23:09:46,358:INFO:             uvicorn: Not installed
2023-10-13 23:09:46,358:INFO:              m2cgen: Not installed
2023-10-13 23:09:46,358:INFO:           evidently: Not installed
2023-10-13 23:09:46,359:INFO:               fugue: Not installed
2023-10-13 23:09:46,359:INFO:           streamlit: Not installed
2023-10-13 23:09:46,359:INFO:             prophet: Not installed
2023-10-13 23:09:46,359:INFO:None
2023-10-13 23:09:46,361:INFO:Set Forecast Horizon.
2023-10-13 23:09:46,361:INFO:Set up Train-Test Splits.
2023-10-13 23:09:46,385:INFO:Finished creating preprocessing pipeline.
2023-10-13 23:09:46,386:INFO:Pipeline: ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                DummyForecaster())]))])
2023-10-13 23:09:46,386:INFO:Set up Seasonal Period.
2023-10-13 23:09:46,394:INFO:Setting the seasonal component type - 'add' or 'mul'.
2023-10-13 23:09:46,394:INFO:Checking if data is strictly positive.
2023-10-13 23:09:46,418:INFO:Creating final display dataframe.
2023-10-13 23:09:46,428:INFO:Setup Display Container:                                          Description  \
0                                         session_id   
1                                             Target   
2                                           Approach   
3                                Exogenous Variables   
4                                Original data shape   
5                             Transformed data shape   
6                        Transformed train set shape   
7                         Transformed test set shape   
8                           Rows with missing values   
9                                     Fold Generator   
10                                       Fold Number   
11                       Enforce Prediction Interval   
12                   Splits used for hyperparameters   
13                   User Defined Seasonal Period(s)   
14                           Ignore Seasonality Test   
15                        Seasonality Detection Algo   
16                            Max Period to Consider   
17                         Seasonal Period(s) Tested   
18                    Significant Seasonal Period(s)   
19  Significant Seasonal Period(s) without Harmonics   
20                                  Remove Harmonics   
21                            Harmonics Order Method   
22                          Num Seasonalities to Use   
23                          All Seasonalities to Use   
24                               Primary Seasonality   
25                               Seasonality Present   
26                                  Seasonality Type   
27                          Target Strictly Positive   
28                                Target White Noise   
29                                     Recommended d   
30                            Recommended Seasonal D   
31                                        Preprocess   
32                                          CPU Jobs   
33                                           Use GPU   
34                                    Log Experiment   
35                                   Experiment Name   
36                                               USI   

                           Value  
0                            123  
1   Number of airline passengers  
2                     Univariate  
3                    Not Present  
4                       (144, 1)  
5                       (144, 1)  
6                       (141, 1)  
7                         (3, 1)  
8                           0.0%  
9        ExpandingWindowSplitter  
10                             3  
11                         False  
12                           all  
13                          None  
14                         False  
15                          auto  
16                            60  
17          [12, 24, 36, 11, 48]  
18          [12, 24, 36, 11, 48]  
19                  [48, 36, 11]  
20                         False  
21                  harmonic_max  
22                             1  
23                          [12]  
24                            12  
25                          True  
26                           mul  
27                          True  
28                            No  
29                             1  
30                             1  
31                         False  
32                            -1  
33                         False  
34                         False  
35               ts-default-name  
36                          0221  
2023-10-13 23:09:46,434:INFO:Engine successfully changes for model 'auto_arima' to 'pmdarima'.
2023-10-13 23:09:46,440:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,441:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,441:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,441:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,441:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,442:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,442:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,442:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,444:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,445:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,446:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,446:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,446:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,446:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,447:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,447:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,447:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,447:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,447:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,448:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,448:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,448:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,452:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,452:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,452:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,452:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,452:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,453:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,453:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,454:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,455:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,457:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,457:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,457:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,458:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,458:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,458:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,459:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,459:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,459:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,459:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,459:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,459:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,459:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,459:INFO:Engine successfully changes for model 'lr_cds_dt' to 'sklearn'.
2023-10-13 23:09:46,466:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,466:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,467:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,467:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,468:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,468:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,468:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,470:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,472:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,473:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,473:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,474:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,474:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,475:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,475:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,475:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,475:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,475:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,476:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,476:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,476:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,482:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,482:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,483:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,483:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,483:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,484:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,484:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,486:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,489:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,490:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,490:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,491:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,491:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,492:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,492:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,492:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,492:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,492:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,493:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,493:INFO:Engine successfully changes for model 'en_cds_dt' to 'sklearn'.
2023-10-13 23:09:46,499:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,499:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,499:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,500:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,501:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,501:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,503:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,506:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,506:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,506:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,506:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,507:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,507:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,507:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,507:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,507:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,507:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,508:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,512:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,513:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,513:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,513:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,513:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,513:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,514:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,516:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,516:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,516:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,516:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,516:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,517:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,517:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,517:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,517:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,517:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,518:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,518:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,518:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,518:INFO:Engine successfully changes for model 'ridge_cds_dt' to 'sklearn'.
2023-10-13 23:09:46,524:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,524:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,525:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,525:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,525:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,527:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,528:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,528:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,528:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,528:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,529:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,529:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,529:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,529:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,529:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,529:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,530:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,534:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,535:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,535:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,536:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,536:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,539:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,540:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,540:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,541:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,541:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,542:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,542:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,542:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,542:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,542:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,543:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,543:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,543:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,543:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,543:INFO:Engine successfully changes for model 'lasso_cds_dt' to 'sklearn'.
2023-10-13 23:09:46,549:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,551:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,551:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,551:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,554:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,556:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,556:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,557:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,557:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,557:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,558:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,558:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,558:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,558:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,558:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,559:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,559:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,559:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,564:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,565:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,566:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,566:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,568:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,569:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,570:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,571:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,571:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,571:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,572:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,572:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,572:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,572:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,572:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,573:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,573:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,573:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,573:INFO:Engine successfully changes for model 'lar_cds_dt' to 'sklearn'.
2023-10-13 23:09:46,579:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,580:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,580:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,580:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,582:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,583:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,584:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,584:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,584:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,585:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,585:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,586:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,586:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,586:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,586:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,587:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,587:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,587:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,593:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,594:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,594:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,595:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,597:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,599:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,599:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,600:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,600:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,601:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,601:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,601:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,601:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,601:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,602:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,602:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,602:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,602:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,602:INFO:Engine successfully changes for model 'llar_cds_dt' to 'sklearn'.
2023-10-13 23:09:46,609:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,610:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,610:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,613:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,614:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,615:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,615:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,615:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,616:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,616:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,616:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,616:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,616:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,617:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,617:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,617:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,617:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,623:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,625:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,625:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,626:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,627:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,628:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,628:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,628:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,629:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,629:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,629:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,629:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,630:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,630:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,630:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,630:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,630:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,631:INFO:Engine successfully changes for model 'br_cds_dt' to 'sklearn'.
2023-10-13 23:09:46,636:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,638:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,640:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,641:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,642:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,642:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,642:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,642:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,643:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,643:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,643:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,643:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,644:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,644:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,644:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,644:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,649:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,651:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,653:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,655:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,655:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,655:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,656:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,656:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,656:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,657:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,657:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,657:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,657:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,657:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,657:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,657:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,658:INFO:Engine successfully changes for model 'huber_cds_dt' to 'sklearn'.
2023-10-13 23:09:46,663:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,666:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,667:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,668:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,668:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,668:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,669:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,669:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,669:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,669:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,671:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,671:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,671:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,678:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,680:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,682:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,682:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,683:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,683:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,683:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,684:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,684:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,684:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,684:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,684:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,685:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,685:INFO:Engine successfully changes for model 'par_cds_dt' to 'sklearn'.
2023-10-13 23:09:46,690:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,694:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,694:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,695:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,695:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,695:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,697:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,697:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,697:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,697:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,697:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,698:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,698:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,698:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,698:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,703:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,708:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,709:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,709:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,709:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,710:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,710:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,710:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,710:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,710:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,710:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,710:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,711:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,711:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,711:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,711:INFO:Engine successfully changes for model 'omp_cds_dt' to 'sklearn'.
2023-10-13 23:09:46,717:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,721:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,722:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,722:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,722:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,722:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,722:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,723:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,723:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,723:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,723:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,723:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,723:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,723:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,728:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,731:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,731:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,731:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,731:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,732:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,732:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,732:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,732:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,732:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,732:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,733:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,733:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,733:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,733:INFO:Engine successfully changes for model 'knn_cds_dt' to 'sklearn'.
2023-10-13 23:09:46,738:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,742:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,742:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,742:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,742:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,742:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,742:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,742:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,742:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,743:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,743:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,743:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,743:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,748:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,751:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,751:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,752:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,752:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,753:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,753:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,753:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,753:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,754:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,754:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,754:INFO:Engine successfully changes for model 'dt_cds_dt' to 'sklearn'.
2023-10-13 23:09:46,760:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,765:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,765:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,765:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,765:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,766:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,766:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,766:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,766:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,767:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,773:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,778:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,778:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,778:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,779:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,779:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,779:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,779:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,780:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,780:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,780:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,780:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,780:INFO:Engine successfully changes for model 'rf_cds_dt' to 'sklearn'.
2023-10-13 23:09:46,786:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,792:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,792:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,793:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,793:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,793:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,793:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,794:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,794:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,799:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,805:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,805:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,806:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,806:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,806:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,806:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,806:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,807:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,807:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,807:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,807:INFO:Engine successfully changes for model 'et_cds_dt' to 'sklearn'.
2023-10-13 23:09:46,812:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,818:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,819:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,819:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,819:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,819:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,819:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,820:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,826:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,831:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,831:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,832:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,832:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,832:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,832:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,832:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,832:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,833:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,833:INFO:Engine successfully changes for model 'gbr_cds_dt' to 'sklearn'.
2023-10-13 23:09:46,838:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,843:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,844:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,844:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,844:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,844:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,845:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,845:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,845:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,851:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,857:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,858:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,858:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,858:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,858:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,858:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,858:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,859:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,859:INFO:Engine successfully changes for model 'ada_cds_dt' to 'sklearn'.
2023-10-13 23:09:46,864:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,870:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,870:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,870:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,871:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,871:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,871:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,871:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,877:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,882:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,882:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,882:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,883:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,883:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,883:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,883:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,883:INFO:Engine successfully changes for model 'xgboost_cds_dt' to 'sklearn'.
2023-10-13 23:09:46,890:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,895:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,895:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,896:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,896:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,896:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,896:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,901:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,908:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,908:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,908:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,908:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,908:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,908:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,909:INFO:Engine successfully changes for model 'lightgbm_cds_dt' to 'sklearn'.
2023-10-13 23:09:46,914:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,920:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,921:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,921:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,921:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,921:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,927:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,932:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,932:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,933:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-10-13 23:09:46,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,933:INFO:Engine successfully changes for model 'catboost_cds_dt' to 'sklearn'.
2023-10-13 23:09:46,939:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,945:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,945:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,945:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,946:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,950:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,957:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,957:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,958:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,958:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,963:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,970:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,970:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,978:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:09:46,984:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,984:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-13 23:09:46,985:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,985:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 23:09:46,985:INFO:setup() successfully completed in 0.63s...............
2023-10-13 23:09:58,288:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\statsmodels\tsa\stattools.py:2022: InterpolationWarning: The test statistic is outside of the range of p-values available in the
look-up table. The actual p-value is greater than the p-value returned.

  warnings.warn(

2023-10-13 23:10:13,856:INFO:Initializing compare_models()
2023-10-13 23:10:13,856:INFO:compare_models(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, include=None, fold=None, round=4, cross_validation=True, sort=MASE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MASE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.time_series.forecasting.oop.TSForecastingExperiment'>}, exclude=None)
2023-10-13 23:10:13,856:INFO:Checking exceptions
2023-10-13 23:10:13,856:INFO:Preparing display monitor
2023-10-13 23:10:13,903:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:713: UserWarning: Unsupported estimator `ensemble_forecaster` for method `compare_models()`, removing from model_library
  warnings.warn(

2023-10-13 23:10:13,903:INFO:Initializing Naive Forecaster
2023-10-13 23:10:13,903:INFO:Total runtime is 0.0 minutes
2023-10-13 23:10:13,919:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:13,919:INFO:Initializing create_model()
2023-10-13 23:10:13,919:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=naive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:13,919:INFO:Checking exceptions
2023-10-13 23:10:13,919:INFO:Importing libraries
2023-10-13 23:10:13,919:INFO:Copying training dataset
2023-10-13 23:10:13,919:INFO:Defining folds
2023-10-13 23:10:13,919:INFO:Declaring metric variables
2023-10-13 23:10:13,919:INFO:Importing untrained model
2023-10-13 23:10:13,934:INFO:Naive Forecaster Imported successfully
2023-10-13 23:10:13,934:INFO:Starting cross validation
2023-10-13 23:10:13,934:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:17,077:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:10:17,083:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:10:17,083:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:10:17,101:INFO:Calculating mean and std
2023-10-13 23:10:17,102:INFO:Creating metrics dataframe
2023-10-13 23:10:17,109:INFO:Uploading results into container
2023-10-13 23:10:17,109:INFO:Uploading model into container now
2023-10-13 23:10:17,110:INFO:_master_model_container: 1
2023-10-13 23:10:17,110:INFO:_display_container: 2
2023-10-13 23:10:17,111:INFO:NaiveForecaster()
2023-10-13 23:10:17,111:INFO:create_model() successfully completed......................................
2023-10-13 23:10:17,288:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:17,288:INFO:Creating metrics dataframe
2023-10-13 23:10:17,296:INFO:Initializing Grand Means Forecaster
2023-10-13 23:10:17,296:INFO:Total runtime is 0.05654930273691813 minutes
2023-10-13 23:10:17,299:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:17,299:INFO:Initializing create_model()
2023-10-13 23:10:17,299:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=grand_means, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:17,299:INFO:Checking exceptions
2023-10-13 23:10:17,299:INFO:Importing libraries
2023-10-13 23:10:17,299:INFO:Copying training dataset
2023-10-13 23:10:17,303:INFO:Defining folds
2023-10-13 23:10:17,303:INFO:Declaring metric variables
2023-10-13 23:10:17,306:INFO:Importing untrained model
2023-10-13 23:10:17,310:INFO:Grand Means Forecaster Imported successfully
2023-10-13 23:10:17,319:INFO:Starting cross validation
2023-10-13 23:10:17,320:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:19,159:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:10:19,166:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:10:19,166:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:10:19,181:INFO:Calculating mean and std
2023-10-13 23:10:19,184:INFO:Creating metrics dataframe
2023-10-13 23:10:19,195:INFO:Uploading results into container
2023-10-13 23:10:19,196:INFO:Uploading model into container now
2023-10-13 23:10:19,196:INFO:_master_model_container: 2
2023-10-13 23:10:19,197:INFO:_display_container: 2
2023-10-13 23:10:19,197:INFO:NaiveForecaster(strategy='mean')
2023-10-13 23:10:19,197:INFO:create_model() successfully completed......................................
2023-10-13 23:10:19,351:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:19,351:INFO:Creating metrics dataframe
2023-10-13 23:10:19,358:INFO:Initializing Seasonal Naive Forecaster
2023-10-13 23:10:19,358:INFO:Total runtime is 0.09090788364410402 minutes
2023-10-13 23:10:19,362:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:19,362:INFO:Initializing create_model()
2023-10-13 23:10:19,362:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=snaive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:19,362:INFO:Checking exceptions
2023-10-13 23:10:19,362:INFO:Importing libraries
2023-10-13 23:10:19,362:INFO:Copying training dataset
2023-10-13 23:10:19,366:INFO:Defining folds
2023-10-13 23:10:19,366:INFO:Declaring metric variables
2023-10-13 23:10:19,369:INFO:Importing untrained model
2023-10-13 23:10:19,374:INFO:Seasonal Naive Forecaster Imported successfully
2023-10-13 23:10:19,383:INFO:Starting cross validation
2023-10-13 23:10:19,384:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:19,443:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:10:21,207:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:10:21,210:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:10:21,239:INFO:Calculating mean and std
2023-10-13 23:10:21,241:INFO:Creating metrics dataframe
2023-10-13 23:10:21,250:INFO:Uploading results into container
2023-10-13 23:10:21,250:INFO:Uploading model into container now
2023-10-13 23:10:21,251:INFO:_master_model_container: 3
2023-10-13 23:10:21,251:INFO:_display_container: 2
2023-10-13 23:10:21,251:INFO:NaiveForecaster(sp=12)
2023-10-13 23:10:21,251:INFO:create_model() successfully completed......................................
2023-10-13 23:10:21,392:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:21,393:INFO:Creating metrics dataframe
2023-10-13 23:10:21,400:INFO:Initializing Polynomial Trend Forecaster
2023-10-13 23:10:21,401:INFO:Total runtime is 0.12496387958526613 minutes
2023-10-13 23:10:21,404:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:21,404:INFO:Initializing create_model()
2023-10-13 23:10:21,404:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=polytrend, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:21,404:INFO:Checking exceptions
2023-10-13 23:10:21,404:INFO:Importing libraries
2023-10-13 23:10:21,405:INFO:Copying training dataset
2023-10-13 23:10:21,410:INFO:Defining folds
2023-10-13 23:10:21,410:INFO:Declaring metric variables
2023-10-13 23:10:21,413:INFO:Importing untrained model
2023-10-13 23:10:21,418:INFO:Polynomial Trend Forecaster Imported successfully
2023-10-13 23:10:21,426:INFO:Starting cross validation
2023-10-13 23:10:21,428:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:21,470:INFO:Calculating mean and std
2023-10-13 23:10:21,470:INFO:Creating metrics dataframe
2023-10-13 23:10:21,474:INFO:Uploading results into container
2023-10-13 23:10:21,474:INFO:Uploading model into container now
2023-10-13 23:10:21,474:INFO:_master_model_container: 4
2023-10-13 23:10:21,474:INFO:_display_container: 2
2023-10-13 23:10:21,474:INFO:PolynomialTrendForecaster()
2023-10-13 23:10:21,474:INFO:create_model() successfully completed......................................
2023-10-13 23:10:21,620:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:21,621:INFO:Creating metrics dataframe
2023-10-13 23:10:21,631:INFO:Initializing ARIMA
2023-10-13 23:10:21,631:INFO:Total runtime is 0.12879368066787722 minutes
2023-10-13 23:10:21,633:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:21,633:INFO:Initializing create_model()
2023-10-13 23:10:21,634:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:21,634:INFO:Checking exceptions
2023-10-13 23:10:21,634:INFO:Importing libraries
2023-10-13 23:10:21,634:INFO:Copying training dataset
2023-10-13 23:10:21,638:INFO:Defining folds
2023-10-13 23:10:21,638:INFO:Declaring metric variables
2023-10-13 23:10:21,641:INFO:Importing untrained model
2023-10-13 23:10:21,647:INFO:ARIMA Imported successfully
2023-10-13 23:10:21,654:INFO:Starting cross validation
2023-10-13 23:10:21,656:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:21,772:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:10:21,779:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:10:21,779:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:10:21,820:INFO:Calculating mean and std
2023-10-13 23:10:21,821:INFO:Creating metrics dataframe
2023-10-13 23:10:21,826:INFO:Uploading results into container
2023-10-13 23:10:21,826:INFO:Uploading model into container now
2023-10-13 23:10:21,826:INFO:_master_model_container: 5
2023-10-13 23:10:21,826:INFO:_display_container: 2
2023-10-13 23:10:21,827:INFO:ARIMA(seasonal_order=(0, 1, 0, 12))
2023-10-13 23:10:21,827:INFO:create_model() successfully completed......................................
2023-10-13 23:10:21,961:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:21,961:INFO:Creating metrics dataframe
2023-10-13 23:10:21,970:INFO:Initializing Auto ARIMA
2023-10-13 23:10:21,970:INFO:Total runtime is 0.13445250193277997 minutes
2023-10-13 23:10:21,973:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:21,973:INFO:Initializing create_model()
2023-10-13 23:10:21,973:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=auto_arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:21,974:INFO:Checking exceptions
2023-10-13 23:10:21,974:INFO:Importing libraries
2023-10-13 23:10:21,974:INFO:Copying training dataset
2023-10-13 23:10:21,979:INFO:Defining folds
2023-10-13 23:10:21,979:INFO:Declaring metric variables
2023-10-13 23:10:21,982:INFO:Importing untrained model
2023-10-13 23:10:21,988:INFO:Auto ARIMA Imported successfully
2023-10-13 23:10:21,997:INFO:Starting cross validation
2023-10-13 23:10:21,999:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:27,216:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:10:36,387:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:10:37,551:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:10:37,617:INFO:Calculating mean and std
2023-10-13 23:10:37,623:INFO:Creating metrics dataframe
2023-10-13 23:10:37,633:INFO:Uploading results into container
2023-10-13 23:10:37,633:INFO:Uploading model into container now
2023-10-13 23:10:37,634:INFO:_master_model_container: 6
2023-10-13 23:10:37,634:INFO:_display_container: 2
2023-10-13 23:10:37,636:INFO:AutoARIMA(random_state=123, sp=12, suppress_warnings=True)
2023-10-13 23:10:37,637:INFO:create_model() successfully completed......................................
2023-10-13 23:10:37,817:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:37,818:INFO:Creating metrics dataframe
2023-10-13 23:10:37,826:INFO:Initializing Exponential Smoothing
2023-10-13 23:10:37,826:INFO:Total runtime is 0.39872013727823896 minutes
2023-10-13 23:10:37,829:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:37,829:INFO:Initializing create_model()
2023-10-13 23:10:37,829:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=exp_smooth, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:37,829:INFO:Checking exceptions
2023-10-13 23:10:37,829:INFO:Importing libraries
2023-10-13 23:10:37,829:INFO:Copying training dataset
2023-10-13 23:10:37,833:INFO:Defining folds
2023-10-13 23:10:37,833:INFO:Declaring metric variables
2023-10-13 23:10:37,837:INFO:Importing untrained model
2023-10-13 23:10:37,843:INFO:Exponential Smoothing Imported successfully
2023-10-13 23:10:37,852:INFO:Starting cross validation
2023-10-13 23:10:37,852:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:38,041:INFO:Calculating mean and std
2023-10-13 23:10:38,042:INFO:Creating metrics dataframe
2023-10-13 23:10:38,046:INFO:Uploading results into container
2023-10-13 23:10:38,046:INFO:Uploading model into container now
2023-10-13 23:10:38,046:INFO:_master_model_container: 7
2023-10-13 23:10:38,046:INFO:_display_container: 2
2023-10-13 23:10:38,046:INFO:ExponentialSmoothing(seasonal='mul', sp=12, trend='add')
2023-10-13 23:10:38,046:INFO:create_model() successfully completed......................................
2023-10-13 23:10:38,168:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:38,168:INFO:Creating metrics dataframe
2023-10-13 23:10:38,179:INFO:Initializing ETS
2023-10-13 23:10:38,179:INFO:Total runtime is 0.4045996983846029 minutes
2023-10-13 23:10:38,181:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:38,181:INFO:Initializing create_model()
2023-10-13 23:10:38,181:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=ets, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:38,181:INFO:Checking exceptions
2023-10-13 23:10:38,182:INFO:Importing libraries
2023-10-13 23:10:38,182:INFO:Copying training dataset
2023-10-13 23:10:38,186:INFO:Defining folds
2023-10-13 23:10:38,186:INFO:Declaring metric variables
2023-10-13 23:10:38,190:INFO:Importing untrained model
2023-10-13 23:10:38,194:INFO:ETS Imported successfully
2023-10-13 23:10:38,203:INFO:Starting cross validation
2023-10-13 23:10:38,204:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:38,331:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:10:38,338:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:10:38,342:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:10:38,368:INFO:Calculating mean and std
2023-10-13 23:10:38,370:INFO:Creating metrics dataframe
2023-10-13 23:10:38,374:INFO:Uploading results into container
2023-10-13 23:10:38,374:INFO:Uploading model into container now
2023-10-13 23:10:38,375:INFO:_master_model_container: 8
2023-10-13 23:10:38,375:INFO:_display_container: 2
2023-10-13 23:10:38,375:INFO:AutoETS(seasonal='mul', sp=12, trend='add')
2023-10-13 23:10:38,375:INFO:create_model() successfully completed......................................
2023-10-13 23:10:38,499:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:38,499:INFO:Creating metrics dataframe
2023-10-13 23:10:38,512:INFO:Initializing Theta Forecaster
2023-10-13 23:10:38,513:INFO:Total runtime is 0.41014097134272265 minutes
2023-10-13 23:10:38,515:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:38,516:INFO:Initializing create_model()
2023-10-13 23:10:38,516:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=theta, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:38,516:INFO:Checking exceptions
2023-10-13 23:10:38,516:INFO:Importing libraries
2023-10-13 23:10:38,516:INFO:Copying training dataset
2023-10-13 23:10:38,520:INFO:Defining folds
2023-10-13 23:10:38,521:INFO:Declaring metric variables
2023-10-13 23:10:38,525:INFO:Importing untrained model
2023-10-13 23:10:38,532:INFO:Theta Forecaster Imported successfully
2023-10-13 23:10:38,542:INFO:Starting cross validation
2023-10-13 23:10:38,544:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:38,611:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:10:38,625:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:10:38,636:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:10:38,650:INFO:Calculating mean and std
2023-10-13 23:10:38,651:INFO:Creating metrics dataframe
2023-10-13 23:10:38,655:INFO:Uploading results into container
2023-10-13 23:10:38,655:INFO:Uploading model into container now
2023-10-13 23:10:38,656:INFO:_master_model_container: 9
2023-10-13 23:10:38,656:INFO:_display_container: 2
2023-10-13 23:10:38,656:INFO:ThetaForecaster(sp=12)
2023-10-13 23:10:38,656:INFO:create_model() successfully completed......................................
2023-10-13 23:10:38,793:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:38,793:INFO:Creating metrics dataframe
2023-10-13 23:10:38,802:INFO:Initializing STLF
2023-10-13 23:10:38,803:INFO:Total runtime is 0.414998471736908 minutes
2023-10-13 23:10:38,807:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:38,807:INFO:Initializing create_model()
2023-10-13 23:10:38,807:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=stlf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:38,807:INFO:Checking exceptions
2023-10-13 23:10:38,807:INFO:Importing libraries
2023-10-13 23:10:38,807:INFO:Copying training dataset
2023-10-13 23:10:38,812:INFO:Defining folds
2023-10-13 23:10:38,812:INFO:Declaring metric variables
2023-10-13 23:10:38,816:INFO:Importing untrained model
2023-10-13 23:10:38,822:INFO:STLF Imported successfully
2023-10-13 23:10:38,833:INFO:Starting cross validation
2023-10-13 23:10:38,834:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:38,932:INFO:Calculating mean and std
2023-10-13 23:10:38,933:INFO:Creating metrics dataframe
2023-10-13 23:10:38,938:INFO:Uploading results into container
2023-10-13 23:10:38,938:INFO:Uploading model into container now
2023-10-13 23:10:38,939:INFO:_master_model_container: 10
2023-10-13 23:10:38,939:INFO:_display_container: 2
2023-10-13 23:10:38,939:INFO:STLForecaster(sp=12)
2023-10-13 23:10:38,939:INFO:create_model() successfully completed......................................
2023-10-13 23:10:39,065:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:39,065:INFO:Creating metrics dataframe
2023-10-13 23:10:39,077:INFO:Initializing Croston
2023-10-13 23:10:39,077:INFO:Total runtime is 0.41956562598546354 minutes
2023-10-13 23:10:39,081:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:39,081:INFO:Initializing create_model()
2023-10-13 23:10:39,081:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=croston, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:39,081:INFO:Checking exceptions
2023-10-13 23:10:39,081:INFO:Importing libraries
2023-10-13 23:10:39,081:INFO:Copying training dataset
2023-10-13 23:10:39,085:INFO:Defining folds
2023-10-13 23:10:39,086:INFO:Declaring metric variables
2023-10-13 23:10:39,091:INFO:Importing untrained model
2023-10-13 23:10:39,094:INFO:Croston Imported successfully
2023-10-13 23:10:39,105:INFO:Starting cross validation
2023-10-13 23:10:39,106:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:39,142:INFO:Calculating mean and std
2023-10-13 23:10:39,142:INFO:Creating metrics dataframe
2023-10-13 23:10:39,146:INFO:Uploading results into container
2023-10-13 23:10:39,146:INFO:Uploading model into container now
2023-10-13 23:10:39,146:INFO:_master_model_container: 11
2023-10-13 23:10:39,146:INFO:_display_container: 2
2023-10-13 23:10:39,146:INFO:Croston()
2023-10-13 23:10:39,146:INFO:create_model() successfully completed......................................
2023-10-13 23:10:39,275:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:39,275:INFO:Creating metrics dataframe
2023-10-13 23:10:39,287:INFO:Initializing Linear w/ Cond. Deseasonalize & Detrending
2023-10-13 23:10:39,287:INFO:Total runtime is 0.4230605800946554 minutes
2023-10-13 23:10:39,290:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:39,291:INFO:Initializing create_model()
2023-10-13 23:10:39,291:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=lr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:39,291:INFO:Checking exceptions
2023-10-13 23:10:39,291:INFO:Importing libraries
2023-10-13 23:10:39,291:INFO:Copying training dataset
2023-10-13 23:10:39,295:INFO:Defining folds
2023-10-13 23:10:39,296:INFO:Declaring metric variables
2023-10-13 23:10:39,299:INFO:Importing untrained model
2023-10-13 23:10:39,305:INFO:Linear w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:10:39,313:INFO:Starting cross validation
2023-10-13 23:10:39,314:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:39,585:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:10:39,585:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:10:39,585:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:10:39,743:INFO:Calculating mean and std
2023-10-13 23:10:39,744:INFO:Creating metrics dataframe
2023-10-13 23:10:39,748:INFO:Uploading results into container
2023-10-13 23:10:39,748:INFO:Uploading model into container now
2023-10-13 23:10:39,748:INFO:_master_model_container: 12
2023-10-13 23:10:39,748:INFO:_display_container: 2
2023-10-13 23:10:39,754:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=LinearRegression(n_jobs=-1), sp=12,
                    window_length=12)
2023-10-13 23:10:39,754:INFO:create_model() successfully completed......................................
2023-10-13 23:10:39,894:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:39,894:INFO:Creating metrics dataframe
2023-10-13 23:10:39,906:INFO:Initializing Elastic Net w/ Cond. Deseasonalize & Detrending
2023-10-13 23:10:39,906:INFO:Total runtime is 0.43337651093800866 minutes
2023-10-13 23:10:39,908:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:39,909:INFO:Initializing create_model()
2023-10-13 23:10:39,909:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=en_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:39,909:INFO:Checking exceptions
2023-10-13 23:10:39,909:INFO:Importing libraries
2023-10-13 23:10:39,909:INFO:Copying training dataset
2023-10-13 23:10:39,914:INFO:Defining folds
2023-10-13 23:10:39,914:INFO:Declaring metric variables
2023-10-13 23:10:39,917:INFO:Importing untrained model
2023-10-13 23:10:39,923:INFO:Elastic Net w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:10:39,932:INFO:Starting cross validation
2023-10-13 23:10:39,933:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:40,119:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:10:40,127:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:10:40,131:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:10:40,297:INFO:Calculating mean and std
2023-10-13 23:10:40,298:INFO:Creating metrics dataframe
2023-10-13 23:10:40,302:INFO:Uploading results into container
2023-10-13 23:10:40,303:INFO:Uploading model into container now
2023-10-13 23:10:40,303:INFO:_master_model_container: 13
2023-10-13 23:10:40,303:INFO:_display_container: 2
2023-10-13 23:10:40,305:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=ElasticNet(random_state=123), sp=12,
                    window_length=12)
2023-10-13 23:10:40,305:INFO:create_model() successfully completed......................................
2023-10-13 23:10:40,431:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:40,431:INFO:Creating metrics dataframe
2023-10-13 23:10:40,445:INFO:Initializing Ridge w/ Cond. Deseasonalize & Detrending
2023-10-13 23:10:40,445:INFO:Total runtime is 0.4423715710639954 minutes
2023-10-13 23:10:40,449:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:40,449:INFO:Initializing create_model()
2023-10-13 23:10:40,449:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=ridge_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:40,449:INFO:Checking exceptions
2023-10-13 23:10:40,449:INFO:Importing libraries
2023-10-13 23:10:40,450:INFO:Copying training dataset
2023-10-13 23:10:40,455:INFO:Defining folds
2023-10-13 23:10:40,456:INFO:Declaring metric variables
2023-10-13 23:10:40,459:INFO:Importing untrained model
2023-10-13 23:10:40,464:INFO:Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:10:40,475:INFO:Starting cross validation
2023-10-13 23:10:40,476:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:40,669:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:10:40,678:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-10-13 23:10:40,818:INFO:Calculating mean and std
2023-10-13 23:10:40,820:INFO:Creating metrics dataframe
2023-10-13 23:10:40,824:INFO:Uploading results into container
2023-10-13 23:10:40,824:INFO:Uploading model into container now
2023-10-13 23:10:40,825:INFO:_master_model_container: 14
2023-10-13 23:10:40,825:INFO:_display_container: 2
2023-10-13 23:10:40,826:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=Ridge(random_state=123), sp=12, window_length=12)
2023-10-13 23:10:40,826:INFO:create_model() successfully completed......................................
2023-10-13 23:10:40,954:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:40,954:INFO:Creating metrics dataframe
2023-10-13 23:10:40,965:INFO:Initializing Lasso w/ Cond. Deseasonalize & Detrending
2023-10-13 23:10:40,965:INFO:Total runtime is 0.4510316133499146 minutes
2023-10-13 23:10:40,969:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:40,970:INFO:Initializing create_model()
2023-10-13 23:10:40,970:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=lasso_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:40,970:INFO:Checking exceptions
2023-10-13 23:10:40,970:INFO:Importing libraries
2023-10-13 23:10:40,970:INFO:Copying training dataset
2023-10-13 23:10:40,974:INFO:Defining folds
2023-10-13 23:10:40,974:INFO:Declaring metric variables
2023-10-13 23:10:40,977:INFO:Importing untrained model
2023-10-13 23:10:40,982:INFO:Lasso w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:10:40,992:INFO:Starting cross validation
2023-10-13 23:10:40,993:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:41,183:INFO:Calculating mean and std
2023-10-13 23:10:41,185:INFO:Creating metrics dataframe
2023-10-13 23:10:41,190:INFO:Uploading results into container
2023-10-13 23:10:41,190:INFO:Uploading model into container now
2023-10-13 23:10:41,190:INFO:_master_model_container: 15
2023-10-13 23:10:41,190:INFO:_display_container: 2
2023-10-13 23:10:41,192:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=Lasso(random_state=123), sp=12, window_length=12)
2023-10-13 23:10:41,192:INFO:create_model() successfully completed......................................
2023-10-13 23:10:41,322:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:41,322:INFO:Creating metrics dataframe
2023-10-13 23:10:41,335:INFO:Initializing Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-10-13 23:10:41,336:INFO:Total runtime is 0.4572200655937195 minutes
2023-10-13 23:10:41,339:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:41,339:INFO:Initializing create_model()
2023-10-13 23:10:41,339:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=llar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:41,339:INFO:Checking exceptions
2023-10-13 23:10:41,339:INFO:Importing libraries
2023-10-13 23:10:41,339:INFO:Copying training dataset
2023-10-13 23:10:41,343:INFO:Defining folds
2023-10-13 23:10:41,344:INFO:Declaring metric variables
2023-10-13 23:10:41,347:INFO:Importing untrained model
2023-10-13 23:10:41,351:INFO:Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:10:41,359:INFO:Starting cross validation
2023-10-13 23:10:41,360:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:41,479:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-13 23:10:41,479:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-13 23:10:41,479:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-13 23:10:41,573:INFO:Calculating mean and std
2023-10-13 23:10:41,575:INFO:Creating metrics dataframe
2023-10-13 23:10:41,580:INFO:Uploading results into container
2023-10-13 23:10:41,580:INFO:Uploading model into container now
2023-10-13 23:10:41,580:INFO:_master_model_container: 16
2023-10-13 23:10:41,581:INFO:_display_container: 2
2023-10-13 23:10:41,583:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=LassoLars(random_state=123), sp=12,
                    window_length=12)
2023-10-13 23:10:41,584:INFO:create_model() successfully completed......................................
2023-10-13 23:10:41,714:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:41,714:INFO:Creating metrics dataframe
2023-10-13 23:10:41,729:INFO:Initializing Bayesian Ridge w/ Cond. Deseasonalize & Detrending
2023-10-13 23:10:41,729:INFO:Total runtime is 0.4637646476427714 minutes
2023-10-13 23:10:41,733:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:41,733:INFO:Initializing create_model()
2023-10-13 23:10:41,733:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=br_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:41,733:INFO:Checking exceptions
2023-10-13 23:10:41,733:INFO:Importing libraries
2023-10-13 23:10:41,733:INFO:Copying training dataset
2023-10-13 23:10:41,738:INFO:Defining folds
2023-10-13 23:10:41,738:INFO:Declaring metric variables
2023-10-13 23:10:41,742:INFO:Importing untrained model
2023-10-13 23:10:41,746:INFO:Bayesian Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:10:41,759:INFO:Starting cross validation
2023-10-13 23:10:41,761:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:41,963:INFO:Calculating mean and std
2023-10-13 23:10:41,964:INFO:Creating metrics dataframe
2023-10-13 23:10:41,969:INFO:Uploading results into container
2023-10-13 23:10:41,969:INFO:Uploading model into container now
2023-10-13 23:10:41,970:INFO:_master_model_container: 17
2023-10-13 23:10:41,970:INFO:_display_container: 2
2023-10-13 23:10:41,972:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=BayesianRidge(), sp=12, window_length=12)
2023-10-13 23:10:41,972:INFO:create_model() successfully completed......................................
2023-10-13 23:10:42,104:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:42,104:INFO:Creating metrics dataframe
2023-10-13 23:10:42,117:INFO:Initializing Huber w/ Cond. Deseasonalize & Detrending
2023-10-13 23:10:42,117:INFO:Total runtime is 0.4702333490053813 minutes
2023-10-13 23:10:42,121:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:42,121:INFO:Initializing create_model()
2023-10-13 23:10:42,121:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=huber_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:42,121:INFO:Checking exceptions
2023-10-13 23:10:42,121:INFO:Importing libraries
2023-10-13 23:10:42,121:INFO:Copying training dataset
2023-10-13 23:10:42,126:INFO:Defining folds
2023-10-13 23:10:42,126:INFO:Declaring metric variables
2023-10-13 23:10:42,131:INFO:Importing untrained model
2023-10-13 23:10:42,137:INFO:Huber w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:10:42,145:INFO:Starting cross validation
2023-10-13 23:10:42,147:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:42,342:INFO:Calculating mean and std
2023-10-13 23:10:42,344:INFO:Creating metrics dataframe
2023-10-13 23:10:42,348:INFO:Uploading results into container
2023-10-13 23:10:42,348:INFO:Uploading model into container now
2023-10-13 23:10:42,348:INFO:_master_model_container: 18
2023-10-13 23:10:42,348:INFO:_display_container: 2
2023-10-13 23:10:42,350:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=HuberRegressor(), sp=12, window_length=12)
2023-10-13 23:10:42,350:INFO:create_model() successfully completed......................................
2023-10-13 23:10:42,476:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:42,476:INFO:Creating metrics dataframe
2023-10-13 23:10:42,476:INFO:Initializing Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending
2023-10-13 23:10:42,476:INFO:Total runtime is 0.47620982726415 minutes
2023-10-13 23:10:42,491:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:42,491:INFO:Initializing create_model()
2023-10-13 23:10:42,491:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=omp_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:42,491:INFO:Checking exceptions
2023-10-13 23:10:42,491:INFO:Importing libraries
2023-10-13 23:10:42,491:INFO:Copying training dataset
2023-10-13 23:10:42,491:INFO:Defining folds
2023-10-13 23:10:42,491:INFO:Declaring metric variables
2023-10-13 23:10:42,491:INFO:Importing untrained model
2023-10-13 23:10:42,491:INFO:Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:10:42,529:INFO:Starting cross validation
2023-10-13 23:10:42,535:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:42,613:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-13 23:10:42,622:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-13 23:10:42,622:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-13 23:10:42,707:INFO:Calculating mean and std
2023-10-13 23:10:42,707:INFO:Creating metrics dataframe
2023-10-13 23:10:42,707:INFO:Uploading results into container
2023-10-13 23:10:42,707:INFO:Uploading model into container now
2023-10-13 23:10:42,722:INFO:_master_model_container: 19
2023-10-13 23:10:42,722:INFO:_display_container: 2
2023-10-13 23:10:42,723:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=OrthogonalMatchingPursuit(), sp=12,
                    window_length=12)
2023-10-13 23:10:42,723:INFO:create_model() successfully completed......................................
2023-10-13 23:10:42,849:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:42,849:INFO:Creating metrics dataframe
2023-10-13 23:10:42,849:INFO:Initializing K Neighbors w/ Cond. Deseasonalize & Detrending
2023-10-13 23:10:42,849:INFO:Total runtime is 0.4824302395184835 minutes
2023-10-13 23:10:42,864:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:42,864:INFO:Initializing create_model()
2023-10-13 23:10:42,864:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=knn_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:42,864:INFO:Checking exceptions
2023-10-13 23:10:42,864:INFO:Importing libraries
2023-10-13 23:10:42,864:INFO:Copying training dataset
2023-10-13 23:10:42,864:INFO:Defining folds
2023-10-13 23:10:42,864:INFO:Declaring metric variables
2023-10-13 23:10:42,864:INFO:Importing untrained model
2023-10-13 23:10:42,880:INFO:K Neighbors w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:10:42,880:INFO:Starting cross validation
2023-10-13 23:10:42,880:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:43,099:INFO:Calculating mean and std
2023-10-13 23:10:43,099:INFO:Creating metrics dataframe
2023-10-13 23:10:43,099:INFO:Uploading results into container
2023-10-13 23:10:43,099:INFO:Uploading model into container now
2023-10-13 23:10:43,099:INFO:_master_model_container: 20
2023-10-13 23:10:43,099:INFO:_display_container: 2
2023-10-13 23:10:43,099:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=KNeighborsRegressor(n_jobs=-1), sp=12,
                    window_length=12)
2023-10-13 23:10:43,099:INFO:create_model() successfully completed......................................
2023-10-13 23:10:43,226:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:43,226:INFO:Creating metrics dataframe
2023-10-13 23:10:43,241:INFO:Initializing Decision Tree w/ Cond. Deseasonalize & Detrending
2023-10-13 23:10:43,241:INFO:Total runtime is 0.4889722267786662 minutes
2023-10-13 23:10:43,241:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:43,241:INFO:Initializing create_model()
2023-10-13 23:10:43,241:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=dt_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:43,241:INFO:Checking exceptions
2023-10-13 23:10:43,241:INFO:Importing libraries
2023-10-13 23:10:43,241:INFO:Copying training dataset
2023-10-13 23:10:43,257:INFO:Defining folds
2023-10-13 23:10:43,257:INFO:Declaring metric variables
2023-10-13 23:10:43,257:INFO:Importing untrained model
2023-10-13 23:10:43,257:INFO:Decision Tree w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:10:43,273:INFO:Starting cross validation
2023-10-13 23:10:43,273:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:43,462:INFO:Calculating mean and std
2023-10-13 23:10:43,462:INFO:Creating metrics dataframe
2023-10-13 23:10:43,462:INFO:Uploading results into container
2023-10-13 23:10:43,462:INFO:Uploading model into container now
2023-10-13 23:10:43,462:INFO:_master_model_container: 21
2023-10-13 23:10:43,462:INFO:_display_container: 2
2023-10-13 23:10:43,477:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=DecisionTreeRegressor(random_state=123), sp=12,
                    window_length=12)
2023-10-13 23:10:43,477:INFO:create_model() successfully completed......................................
2023-10-13 23:10:43,608:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:43,608:INFO:Creating metrics dataframe
2023-10-13 23:10:43,622:INFO:Initializing Random Forest w/ Cond. Deseasonalize & Detrending
2023-10-13 23:10:43,622:INFO:Total runtime is 0.4953151305516561 minutes
2023-10-13 23:10:43,622:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:43,622:INFO:Initializing create_model()
2023-10-13 23:10:43,622:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=rf_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:43,622:INFO:Checking exceptions
2023-10-13 23:10:43,622:INFO:Importing libraries
2023-10-13 23:10:43,622:INFO:Copying training dataset
2023-10-13 23:10:43,637:INFO:Defining folds
2023-10-13 23:10:43,637:INFO:Declaring metric variables
2023-10-13 23:10:43,640:INFO:Importing untrained model
2023-10-13 23:10:43,645:INFO:Random Forest w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:10:43,653:INFO:Starting cross validation
2023-10-13 23:10:43,654:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:44,012:INFO:Calculating mean and std
2023-10-13 23:10:44,012:INFO:Creating metrics dataframe
2023-10-13 23:10:44,012:INFO:Uploading results into container
2023-10-13 23:10:44,022:INFO:Uploading model into container now
2023-10-13 23:10:44,022:INFO:_master_model_container: 22
2023-10-13 23:10:44,022:INFO:_display_container: 2
2023-10-13 23:10:44,022:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=RandomForestRegressor(n_jobs=-1, random_state=123),
                    sp=12, window_length=12)
2023-10-13 23:10:44,022:INFO:create_model() successfully completed......................................
2023-10-13 23:10:44,147:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:44,147:INFO:Creating metrics dataframe
2023-10-13 23:10:44,147:INFO:Initializing Extra Trees w/ Cond. Deseasonalize & Detrending
2023-10-13 23:10:44,147:INFO:Total runtime is 0.5040698965390523 minutes
2023-10-13 23:10:44,165:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:44,166:INFO:Initializing create_model()
2023-10-13 23:10:44,166:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=et_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:44,166:INFO:Checking exceptions
2023-10-13 23:10:44,166:INFO:Importing libraries
2023-10-13 23:10:44,166:INFO:Copying training dataset
2023-10-13 23:10:44,173:INFO:Defining folds
2023-10-13 23:10:44,173:INFO:Declaring metric variables
2023-10-13 23:10:44,178:INFO:Importing untrained model
2023-10-13 23:10:44,183:INFO:Extra Trees w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:10:44,183:INFO:Starting cross validation
2023-10-13 23:10:44,183:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:44,548:INFO:Calculating mean and std
2023-10-13 23:10:44,548:INFO:Creating metrics dataframe
2023-10-13 23:10:44,548:INFO:Uploading results into container
2023-10-13 23:10:44,548:INFO:Uploading model into container now
2023-10-13 23:10:44,548:INFO:_master_model_container: 23
2023-10-13 23:10:44,548:INFO:_display_container: 2
2023-10-13 23:10:44,548:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(n_jobs=-1, random_state=123),
                    sp=12, window_length=12)
2023-10-13 23:10:44,548:INFO:create_model() successfully completed......................................
2023-10-13 23:10:44,674:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:44,674:INFO:Creating metrics dataframe
2023-10-13 23:10:44,689:INFO:Initializing Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-10-13 23:10:44,689:INFO:Total runtime is 0.5131058931350708 minutes
2023-10-13 23:10:44,689:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:44,689:INFO:Initializing create_model()
2023-10-13 23:10:44,689:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=gbr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:44,689:INFO:Checking exceptions
2023-10-13 23:10:44,689:INFO:Importing libraries
2023-10-13 23:10:44,689:INFO:Copying training dataset
2023-10-13 23:10:44,705:INFO:Defining folds
2023-10-13 23:10:44,705:INFO:Declaring metric variables
2023-10-13 23:10:44,705:INFO:Importing untrained model
2023-10-13 23:10:44,705:INFO:Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:10:44,724:INFO:Starting cross validation
2023-10-13 23:10:44,724:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:44,957:INFO:Calculating mean and std
2023-10-13 23:10:44,957:INFO:Creating metrics dataframe
2023-10-13 23:10:44,973:INFO:Uploading results into container
2023-10-13 23:10:44,973:INFO:Uploading model into container now
2023-10-13 23:10:44,973:INFO:_master_model_container: 24
2023-10-13 23:10:44,973:INFO:_display_container: 2
2023-10-13 23:10:44,973:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=GradientBoostingRegressor(random_state=123),
                    sp=12, window_length=12)
2023-10-13 23:10:44,973:INFO:create_model() successfully completed......................................
2023-10-13 23:10:45,098:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:45,098:INFO:Creating metrics dataframe
2023-10-13 23:10:45,114:INFO:Initializing AdaBoost w/ Cond. Deseasonalize & Detrending
2023-10-13 23:10:45,114:INFO:Total runtime is 0.5201782941818237 minutes
2023-10-13 23:10:45,114:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:45,114:INFO:Initializing create_model()
2023-10-13 23:10:45,114:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=ada_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:45,114:INFO:Checking exceptions
2023-10-13 23:10:45,114:INFO:Importing libraries
2023-10-13 23:10:45,114:INFO:Copying training dataset
2023-10-13 23:10:45,125:INFO:Defining folds
2023-10-13 23:10:45,125:INFO:Declaring metric variables
2023-10-13 23:10:45,130:INFO:Importing untrained model
2023-10-13 23:10:45,130:INFO:AdaBoost w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:10:45,145:INFO:Starting cross validation
2023-10-13 23:10:45,145:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:45,412:INFO:Calculating mean and std
2023-10-13 23:10:45,412:INFO:Creating metrics dataframe
2023-10-13 23:10:45,425:INFO:Uploading results into container
2023-10-13 23:10:45,425:INFO:Uploading model into container now
2023-10-13 23:10:45,425:INFO:_master_model_container: 25
2023-10-13 23:10:45,425:INFO:_display_container: 2
2023-10-13 23:10:45,428:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=AdaBoostRegressor(random_state=123), sp=12,
                    window_length=12)
2023-10-13 23:10:45,428:INFO:create_model() successfully completed......................................
2023-10-13 23:10:45,558:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:45,558:INFO:Creating metrics dataframe
2023-10-13 23:10:45,566:INFO:Initializing Extreme Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-10-13 23:10:45,566:INFO:Total runtime is 0.5277126391728719 minutes
2023-10-13 23:10:45,566:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:45,566:INFO:Initializing create_model()
2023-10-13 23:10:45,566:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=xgboost_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:45,566:INFO:Checking exceptions
2023-10-13 23:10:45,566:INFO:Importing libraries
2023-10-13 23:10:45,566:INFO:Copying training dataset
2023-10-13 23:10:45,566:INFO:Defining folds
2023-10-13 23:10:45,566:INFO:Declaring metric variables
2023-10-13 23:10:45,582:INFO:Importing untrained model
2023-10-13 23:10:45,582:INFO:Extreme Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:10:45,597:INFO:Starting cross validation
2023-10-13 23:10:45,597:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:45,926:INFO:Calculating mean and std
2023-10-13 23:10:45,926:INFO:Creating metrics dataframe
2023-10-13 23:10:45,932:INFO:Uploading results into container
2023-10-13 23:10:45,932:INFO:Uploading model into container now
2023-10-13 23:10:45,933:INFO:_master_model_container: 26
2023-10-13 23:10:45,933:INFO:_display_container: 2
2023-10-13 23:10:45,939:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             g...tance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=123, ...),
                    sp=12, window_length=12)
2023-10-13 23:10:45,939:INFO:create_model() successfully completed......................................
2023-10-13 23:10:46,067:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:46,067:INFO:Creating metrics dataframe
2023-10-13 23:10:46,083:INFO:Initializing Light Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-10-13 23:10:46,083:INFO:Total runtime is 0.5363229831059774 minutes
2023-10-13 23:10:46,083:INFO:SubProcess create_model() called ==================================
2023-10-13 23:10:46,083:INFO:Initializing create_model()
2023-10-13 23:10:46,083:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=lightgbm_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002155829D870>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:46,083:INFO:Checking exceptions
2023-10-13 23:10:46,083:INFO:Importing libraries
2023-10-13 23:10:46,083:INFO:Copying training dataset
2023-10-13 23:10:46,083:INFO:Defining folds
2023-10-13 23:10:46,083:INFO:Declaring metric variables
2023-10-13 23:10:46,098:INFO:Importing untrained model
2023-10-13 23:10:46,098:INFO:Light Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:10:46,098:INFO:Starting cross validation
2023-10-13 23:10:46,114:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:10:46,334:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\lightgbm\basic.py:599: UserWarning: Usage of np.ndarray subset (sliced data) is not recommended due to it will double the peak memory cost in LightGBM.
  _log_warning("Usage of np.ndarray subset (sliced data) is not recommended "

2023-10-13 23:10:46,334:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\lightgbm\basic.py:599: UserWarning: Usage of np.ndarray subset (sliced data) is not recommended due to it will double the peak memory cost in LightGBM.
  _log_warning("Usage of np.ndarray subset (sliced data) is not recommended "

2023-10-13 23:10:46,334:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\lightgbm\basic.py:599: UserWarning: Usage of np.ndarray subset (sliced data) is not recommended due to it will double the peak memory cost in LightGBM.
  _log_warning("Usage of np.ndarray subset (sliced data) is not recommended "

2023-10-13 23:10:46,365:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\lightgbm\basic.py:599: UserWarning: Usage of np.ndarray subset (sliced data) is not recommended due to it will double the peak memory cost in LightGBM.
  _log_warning("Usage of np.ndarray subset (sliced data) is not recommended "

2023-10-13 23:10:46,365:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\lightgbm\basic.py:599: UserWarning: Usage of np.ndarray subset (sliced data) is not recommended due to it will double the peak memory cost in LightGBM.
  _log_warning("Usage of np.ndarray subset (sliced data) is not recommended "

2023-10-13 23:10:46,396:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\lightgbm\basic.py:599: UserWarning: Usage of np.ndarray subset (sliced data) is not recommended due to it will double the peak memory cost in LightGBM.
  _log_warning("Usage of np.ndarray subset (sliced data) is not recommended "

2023-10-13 23:10:46,396:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\lightgbm\basic.py:599: UserWarning: Usage of np.ndarray subset (sliced data) is not recommended due to it will double the peak memory cost in LightGBM.
  _log_warning("Usage of np.ndarray subset (sliced data) is not recommended "

2023-10-13 23:10:46,412:INFO:Calculating mean and std
2023-10-13 23:10:46,412:INFO:Creating metrics dataframe
2023-10-13 23:10:46,428:INFO:Uploading results into container
2023-10-13 23:10:46,428:INFO:Uploading model into container now
2023-10-13 23:10:46,428:INFO:_master_model_container: 27
2023-10-13 23:10:46,428:INFO:_display_container: 2
2023-10-13 23:10:46,428:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=LGBMRegressor(n_jobs=-1, random_state=123), sp=12,
                    window_length=12)
2023-10-13 23:10:46,428:INFO:create_model() successfully completed......................................
2023-10-13 23:10:46,593:INFO:SubProcess create_model() end ==================================
2023-10-13 23:10:46,593:INFO:Creating metrics dataframe
2023-10-13 23:10:46,616:INFO:Initializing create_model()
2023-10-13 23:10:46,616:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000021558688670>, estimator=STLForecaster(sp=12), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:10:46,616:INFO:Checking exceptions
2023-10-13 23:10:46,616:INFO:Importing libraries
2023-10-13 23:10:46,616:INFO:Copying training dataset
2023-10-13 23:10:46,616:INFO:Defining folds
2023-10-13 23:10:46,627:INFO:Declaring metric variables
2023-10-13 23:10:46,627:INFO:Importing untrained model
2023-10-13 23:10:46,627:INFO:Declaring custom model
2023-10-13 23:10:46,627:INFO:STLF Imported successfully
2023-10-13 23:10:46,627:INFO:Cross validation set to False
2023-10-13 23:10:46,627:INFO:Fitting Model
2023-10-13 23:10:46,648:INFO:STLForecaster(sp=12)
2023-10-13 23:10:46,648:INFO:create_model() successfully completed......................................
2023-10-13 23:10:46,840:INFO:_master_model_container: 27
2023-10-13 23:10:46,840:INFO:_display_container: 2
2023-10-13 23:10:46,840:INFO:STLForecaster(sp=12)
2023-10-13 23:10:46,840:INFO:compare_models() successfully completed......................................
2023-10-13 23:12:22,279:INFO:Initializing compare_models()
2023-10-13 23:12:22,279:INFO:compare_models(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, include=None, fold=None, round=4, cross_validation=True, sort=MASE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MASE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.time_series.forecasting.oop.TSForecastingExperiment'>}, exclude=None)
2023-10-13 23:12:22,279:INFO:Checking exceptions
2023-10-13 23:12:22,279:INFO:Preparing display monitor
2023-10-13 23:12:22,326:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:713: UserWarning: Unsupported estimator `ensemble_forecaster` for method `compare_models()`, removing from model_library
  warnings.warn(

2023-10-13 23:12:22,326:INFO:Initializing Naive Forecaster
2023-10-13 23:12:22,326:INFO:Total runtime is 0.0 minutes
2023-10-13 23:12:22,326:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:22,341:INFO:Initializing create_model()
2023-10-13 23:12:22,341:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=naive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:22,341:INFO:Checking exceptions
2023-10-13 23:12:22,341:INFO:Importing libraries
2023-10-13 23:12:22,341:INFO:Copying training dataset
2023-10-13 23:12:22,341:INFO:Defining folds
2023-10-13 23:12:22,341:INFO:Declaring metric variables
2023-10-13 23:12:22,341:INFO:Importing untrained model
2023-10-13 23:12:22,341:INFO:Naive Forecaster Imported successfully
2023-10-13 23:12:22,357:INFO:Starting cross validation
2023-10-13 23:12:22,357:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:22,404:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:12:22,404:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:12:22,415:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:12:22,436:INFO:Calculating mean and std
2023-10-13 23:12:22,436:INFO:Creating metrics dataframe
2023-10-13 23:12:22,451:INFO:Uploading results into container
2023-10-13 23:12:22,451:INFO:Uploading model into container now
2023-10-13 23:12:22,451:INFO:_master_model_container: 1
2023-10-13 23:12:22,451:INFO:_display_container: 2
2023-10-13 23:12:22,451:INFO:NaiveForecaster()
2023-10-13 23:12:22,451:INFO:create_model() successfully completed......................................
2023-10-13 23:12:22,592:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:22,592:INFO:Creating metrics dataframe
2023-10-13 23:12:22,592:INFO:Initializing Grand Means Forecaster
2023-10-13 23:12:22,592:INFO:Total runtime is 0.004442195097605388 minutes
2023-10-13 23:12:22,592:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:22,592:INFO:Initializing create_model()
2023-10-13 23:12:22,592:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=grand_means, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:22,592:INFO:Checking exceptions
2023-10-13 23:12:22,592:INFO:Importing libraries
2023-10-13 23:12:22,592:INFO:Copying training dataset
2023-10-13 23:12:22,608:INFO:Defining folds
2023-10-13 23:12:22,608:INFO:Declaring metric variables
2023-10-13 23:12:22,608:INFO:Importing untrained model
2023-10-13 23:12:22,616:INFO:Grand Means Forecaster Imported successfully
2023-10-13 23:12:22,624:INFO:Starting cross validation
2023-10-13 23:12:22,624:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:22,640:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:12:22,640:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:12:22,640:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:12:22,655:INFO:Calculating mean and std
2023-10-13 23:12:22,655:INFO:Creating metrics dataframe
2023-10-13 23:12:22,655:INFO:Uploading results into container
2023-10-13 23:12:22,655:INFO:Uploading model into container now
2023-10-13 23:12:22,655:INFO:_master_model_container: 2
2023-10-13 23:12:22,655:INFO:_display_container: 2
2023-10-13 23:12:22,655:INFO:NaiveForecaster(strategy='mean')
2023-10-13 23:12:22,655:INFO:create_model() successfully completed......................................
2023-10-13 23:12:22,828:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:22,828:INFO:Creating metrics dataframe
2023-10-13 23:12:22,828:INFO:Initializing Seasonal Naive Forecaster
2023-10-13 23:12:22,828:INFO:Total runtime is 0.008372461795806885 minutes
2023-10-13 23:12:22,844:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:22,844:INFO:Initializing create_model()
2023-10-13 23:12:22,844:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=snaive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:22,844:INFO:Checking exceptions
2023-10-13 23:12:22,844:INFO:Importing libraries
2023-10-13 23:12:22,844:INFO:Copying training dataset
2023-10-13 23:12:22,844:INFO:Defining folds
2023-10-13 23:12:22,844:INFO:Declaring metric variables
2023-10-13 23:12:22,844:INFO:Importing untrained model
2023-10-13 23:12:22,844:INFO:Seasonal Naive Forecaster Imported successfully
2023-10-13 23:12:22,859:INFO:Starting cross validation
2023-10-13 23:12:22,859:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:22,916:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:12:22,923:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:12:22,923:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:12:22,954:INFO:Calculating mean and std
2023-10-13 23:12:22,954:INFO:Creating metrics dataframe
2023-10-13 23:12:22,954:INFO:Uploading results into container
2023-10-13 23:12:22,954:INFO:Uploading model into container now
2023-10-13 23:12:22,954:INFO:_master_model_container: 3
2023-10-13 23:12:22,954:INFO:_display_container: 2
2023-10-13 23:12:22,954:INFO:NaiveForecaster(sp=12)
2023-10-13 23:12:22,954:INFO:create_model() successfully completed......................................
2023-10-13 23:12:23,079:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:23,079:INFO:Creating metrics dataframe
2023-10-13 23:12:23,094:INFO:Initializing Polynomial Trend Forecaster
2023-10-13 23:12:23,094:INFO:Total runtime is 0.012809793154398601 minutes
2023-10-13 23:12:23,094:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:23,094:INFO:Initializing create_model()
2023-10-13 23:12:23,094:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=polytrend, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:23,094:INFO:Checking exceptions
2023-10-13 23:12:23,094:INFO:Importing libraries
2023-10-13 23:12:23,094:INFO:Copying training dataset
2023-10-13 23:12:23,110:INFO:Defining folds
2023-10-13 23:12:23,110:INFO:Declaring metric variables
2023-10-13 23:12:23,110:INFO:Importing untrained model
2023-10-13 23:12:23,117:INFO:Polynomial Trend Forecaster Imported successfully
2023-10-13 23:12:23,117:INFO:Starting cross validation
2023-10-13 23:12:23,126:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:23,157:INFO:Calculating mean and std
2023-10-13 23:12:23,157:INFO:Creating metrics dataframe
2023-10-13 23:12:23,157:INFO:Uploading results into container
2023-10-13 23:12:23,157:INFO:Uploading model into container now
2023-10-13 23:12:23,157:INFO:_master_model_container: 4
2023-10-13 23:12:23,157:INFO:_display_container: 2
2023-10-13 23:12:23,157:INFO:PolynomialTrendForecaster()
2023-10-13 23:12:23,157:INFO:create_model() successfully completed......................................
2023-10-13 23:12:23,298:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:23,298:INFO:Creating metrics dataframe
2023-10-13 23:12:23,317:INFO:Initializing ARIMA
2023-10-13 23:12:23,317:INFO:Total runtime is 0.01651972532272339 minutes
2023-10-13 23:12:23,317:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:23,317:INFO:Initializing create_model()
2023-10-13 23:12:23,317:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:23,317:INFO:Checking exceptions
2023-10-13 23:12:23,317:INFO:Importing libraries
2023-10-13 23:12:23,317:INFO:Copying training dataset
2023-10-13 23:12:23,317:INFO:Defining folds
2023-10-13 23:12:23,317:INFO:Declaring metric variables
2023-10-13 23:12:23,330:INFO:Importing untrained model
2023-10-13 23:12:23,330:INFO:ARIMA Imported successfully
2023-10-13 23:12:23,346:INFO:Starting cross validation
2023-10-13 23:12:23,346:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:23,440:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:12:23,440:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:12:23,440:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:12:23,487:INFO:Calculating mean and std
2023-10-13 23:12:23,487:INFO:Creating metrics dataframe
2023-10-13 23:12:23,487:INFO:Uploading results into container
2023-10-13 23:12:23,487:INFO:Uploading model into container now
2023-10-13 23:12:23,487:INFO:_master_model_container: 5
2023-10-13 23:12:23,487:INFO:_display_container: 2
2023-10-13 23:12:23,487:INFO:ARIMA(seasonal_order=(0, 1, 0, 12))
2023-10-13 23:12:23,502:INFO:create_model() successfully completed......................................
2023-10-13 23:12:23,629:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:23,629:INFO:Creating metrics dataframe
2023-10-13 23:12:23,644:INFO:Initializing Auto ARIMA
2023-10-13 23:12:23,644:INFO:Total runtime is 0.02197054624557495 minutes
2023-10-13 23:12:23,644:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:23,644:INFO:Initializing create_model()
2023-10-13 23:12:23,644:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=auto_arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:23,644:INFO:Checking exceptions
2023-10-13 23:12:23,644:INFO:Importing libraries
2023-10-13 23:12:23,644:INFO:Copying training dataset
2023-10-13 23:12:23,644:INFO:Defining folds
2023-10-13 23:12:23,644:INFO:Declaring metric variables
2023-10-13 23:12:23,660:INFO:Importing untrained model
2023-10-13 23:12:23,660:INFO:Auto ARIMA Imported successfully
2023-10-13 23:12:23,675:INFO:Starting cross validation
2023-10-13 23:12:23,675:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:28,897:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:12:37,011:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:12:37,914:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:12:37,945:INFO:Calculating mean and std
2023-10-13 23:12:37,947:INFO:Creating metrics dataframe
2023-10-13 23:12:37,952:INFO:Uploading results into container
2023-10-13 23:12:37,952:INFO:Uploading model into container now
2023-10-13 23:12:37,953:INFO:_master_model_container: 6
2023-10-13 23:12:37,953:INFO:_display_container: 2
2023-10-13 23:12:37,953:INFO:AutoARIMA(random_state=123, sp=12, suppress_warnings=True)
2023-10-13 23:12:37,954:INFO:create_model() successfully completed......................................
2023-10-13 23:12:38,095:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:38,095:INFO:Creating metrics dataframe
2023-10-13 23:12:38,103:INFO:Initializing Exponential Smoothing
2023-10-13 23:12:38,104:INFO:Total runtime is 0.26297545035680137 minutes
2023-10-13 23:12:38,107:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:38,107:INFO:Initializing create_model()
2023-10-13 23:12:38,107:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=exp_smooth, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:38,107:INFO:Checking exceptions
2023-10-13 23:12:38,107:INFO:Importing libraries
2023-10-13 23:12:38,107:INFO:Copying training dataset
2023-10-13 23:12:38,111:INFO:Defining folds
2023-10-13 23:12:38,111:INFO:Declaring metric variables
2023-10-13 23:12:38,116:INFO:Importing untrained model
2023-10-13 23:12:38,120:INFO:Exponential Smoothing Imported successfully
2023-10-13 23:12:38,129:INFO:Starting cross validation
2023-10-13 23:12:38,131:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:38,294:INFO:Calculating mean and std
2023-10-13 23:12:38,295:INFO:Creating metrics dataframe
2023-10-13 23:12:38,299:INFO:Uploading results into container
2023-10-13 23:12:38,299:INFO:Uploading model into container now
2023-10-13 23:12:38,300:INFO:_master_model_container: 7
2023-10-13 23:12:38,300:INFO:_display_container: 2
2023-10-13 23:12:38,300:INFO:ExponentialSmoothing(seasonal='mul', sp=12, trend='add')
2023-10-13 23:12:38,300:INFO:create_model() successfully completed......................................
2023-10-13 23:12:38,422:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:38,422:INFO:Creating metrics dataframe
2023-10-13 23:12:38,433:INFO:Initializing ETS
2023-10-13 23:12:38,433:INFO:Total runtime is 0.26845362186431887 minutes
2023-10-13 23:12:38,437:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:38,437:INFO:Initializing create_model()
2023-10-13 23:12:38,438:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=ets, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:38,438:INFO:Checking exceptions
2023-10-13 23:12:38,438:INFO:Importing libraries
2023-10-13 23:12:38,438:INFO:Copying training dataset
2023-10-13 23:12:38,441:INFO:Defining folds
2023-10-13 23:12:38,441:INFO:Declaring metric variables
2023-10-13 23:12:38,444:INFO:Importing untrained model
2023-10-13 23:12:38,451:INFO:ETS Imported successfully
2023-10-13 23:12:38,460:INFO:Starting cross validation
2023-10-13 23:12:38,460:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:38,600:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:12:38,601:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:12:38,608:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:12:38,635:INFO:Calculating mean and std
2023-10-13 23:12:38,636:INFO:Creating metrics dataframe
2023-10-13 23:12:38,640:INFO:Uploading results into container
2023-10-13 23:12:38,640:INFO:Uploading model into container now
2023-10-13 23:12:38,640:INFO:_master_model_container: 8
2023-10-13 23:12:38,640:INFO:_display_container: 2
2023-10-13 23:12:38,641:INFO:AutoETS(seasonal='mul', sp=12, trend='add')
2023-10-13 23:12:38,641:INFO:create_model() successfully completed......................................
2023-10-13 23:12:38,768:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:38,768:INFO:Creating metrics dataframe
2023-10-13 23:12:38,778:INFO:Initializing Theta Forecaster
2023-10-13 23:12:38,778:INFO:Total runtime is 0.2742028991381327 minutes
2023-10-13 23:12:38,782:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:38,782:INFO:Initializing create_model()
2023-10-13 23:12:38,782:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=theta, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:38,782:INFO:Checking exceptions
2023-10-13 23:12:38,783:INFO:Importing libraries
2023-10-13 23:12:38,783:INFO:Copying training dataset
2023-10-13 23:12:38,787:INFO:Defining folds
2023-10-13 23:12:38,787:INFO:Declaring metric variables
2023-10-13 23:12:38,790:INFO:Importing untrained model
2023-10-13 23:12:38,815:INFO:Theta Forecaster Imported successfully
2023-10-13 23:12:38,833:INFO:Starting cross validation
2023-10-13 23:12:38,835:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:38,877:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:12:38,882:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:12:38,882:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-10-13 23:12:38,895:INFO:Calculating mean and std
2023-10-13 23:12:38,896:INFO:Creating metrics dataframe
2023-10-13 23:12:38,901:INFO:Uploading results into container
2023-10-13 23:12:38,901:INFO:Uploading model into container now
2023-10-13 23:12:38,901:INFO:_master_model_container: 9
2023-10-13 23:12:38,901:INFO:_display_container: 2
2023-10-13 23:12:38,901:INFO:ThetaForecaster(sp=12)
2023-10-13 23:12:38,901:INFO:create_model() successfully completed......................................
2023-10-13 23:12:39,024:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:39,024:INFO:Creating metrics dataframe
2023-10-13 23:12:39,034:INFO:Initializing STLF
2023-10-13 23:12:39,034:INFO:Total runtime is 0.27847553888956705 minutes
2023-10-13 23:12:39,037:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:39,039:INFO:Initializing create_model()
2023-10-13 23:12:39,039:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=stlf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:39,039:INFO:Checking exceptions
2023-10-13 23:12:39,039:INFO:Importing libraries
2023-10-13 23:12:39,039:INFO:Copying training dataset
2023-10-13 23:12:39,042:INFO:Defining folds
2023-10-13 23:12:39,043:INFO:Declaring metric variables
2023-10-13 23:12:39,046:INFO:Importing untrained model
2023-10-13 23:12:39,052:INFO:STLF Imported successfully
2023-10-13 23:12:39,059:INFO:Starting cross validation
2023-10-13 23:12:39,060:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:39,133:INFO:Calculating mean and std
2023-10-13 23:12:39,133:INFO:Creating metrics dataframe
2023-10-13 23:12:39,137:INFO:Uploading results into container
2023-10-13 23:12:39,137:INFO:Uploading model into container now
2023-10-13 23:12:39,137:INFO:_master_model_container: 10
2023-10-13 23:12:39,137:INFO:_display_container: 2
2023-10-13 23:12:39,137:INFO:STLForecaster(sp=12)
2023-10-13 23:12:39,137:INFO:create_model() successfully completed......................................
2023-10-13 23:12:39,258:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:39,258:INFO:Creating metrics dataframe
2023-10-13 23:12:39,269:INFO:Initializing Croston
2023-10-13 23:12:39,269:INFO:Total runtime is 0.2823920448621114 minutes
2023-10-13 23:12:39,271:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:39,272:INFO:Initializing create_model()
2023-10-13 23:12:39,272:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=croston, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:39,272:INFO:Checking exceptions
2023-10-13 23:12:39,272:INFO:Importing libraries
2023-10-13 23:12:39,272:INFO:Copying training dataset
2023-10-13 23:12:39,277:INFO:Defining folds
2023-10-13 23:12:39,277:INFO:Declaring metric variables
2023-10-13 23:12:39,280:INFO:Importing untrained model
2023-10-13 23:12:39,284:INFO:Croston Imported successfully
2023-10-13 23:12:39,291:INFO:Starting cross validation
2023-10-13 23:12:39,292:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:39,322:INFO:Calculating mean and std
2023-10-13 23:12:39,322:INFO:Creating metrics dataframe
2023-10-13 23:12:39,325:INFO:Uploading results into container
2023-10-13 23:12:39,325:INFO:Uploading model into container now
2023-10-13 23:12:39,326:INFO:_master_model_container: 11
2023-10-13 23:12:39,326:INFO:_display_container: 2
2023-10-13 23:12:39,326:INFO:Croston()
2023-10-13 23:12:39,326:INFO:create_model() successfully completed......................................
2023-10-13 23:12:39,448:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:39,448:INFO:Creating metrics dataframe
2023-10-13 23:12:39,458:INFO:Initializing Linear w/ Cond. Deseasonalize & Detrending
2023-10-13 23:12:39,458:INFO:Total runtime is 0.285539702574412 minutes
2023-10-13 23:12:39,460:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:39,460:INFO:Initializing create_model()
2023-10-13 23:12:39,460:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=lr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:39,460:INFO:Checking exceptions
2023-10-13 23:12:39,460:INFO:Importing libraries
2023-10-13 23:12:39,460:INFO:Copying training dataset
2023-10-13 23:12:39,465:INFO:Defining folds
2023-10-13 23:12:39,465:INFO:Declaring metric variables
2023-10-13 23:12:39,468:INFO:Importing untrained model
2023-10-13 23:12:39,473:INFO:Linear w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:12:39,481:INFO:Starting cross validation
2023-10-13 23:12:39,482:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:39,652:INFO:Calculating mean and std
2023-10-13 23:12:39,653:INFO:Creating metrics dataframe
2023-10-13 23:12:39,656:INFO:Uploading results into container
2023-10-13 23:12:39,657:INFO:Uploading model into container now
2023-10-13 23:12:39,657:INFO:_master_model_container: 12
2023-10-13 23:12:39,657:INFO:_display_container: 2
2023-10-13 23:12:39,658:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=LinearRegression(n_jobs=-1), sp=12,
                    window_length=12)
2023-10-13 23:12:39,658:INFO:create_model() successfully completed......................................
2023-10-13 23:12:39,781:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:39,781:INFO:Creating metrics dataframe
2023-10-13 23:12:39,793:INFO:Initializing Elastic Net w/ Cond. Deseasonalize & Detrending
2023-10-13 23:12:39,793:INFO:Total runtime is 0.2911206642786662 minutes
2023-10-13 23:12:39,798:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:39,798:INFO:Initializing create_model()
2023-10-13 23:12:39,798:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=en_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:39,798:INFO:Checking exceptions
2023-10-13 23:12:39,799:INFO:Importing libraries
2023-10-13 23:12:39,799:INFO:Copying training dataset
2023-10-13 23:12:39,803:INFO:Defining folds
2023-10-13 23:12:39,803:INFO:Declaring metric variables
2023-10-13 23:12:39,806:INFO:Importing untrained model
2023-10-13 23:12:39,810:INFO:Elastic Net w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:12:39,819:INFO:Starting cross validation
2023-10-13 23:12:39,820:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:39,983:INFO:Calculating mean and std
2023-10-13 23:12:39,984:INFO:Creating metrics dataframe
2023-10-13 23:12:39,988:INFO:Uploading results into container
2023-10-13 23:12:39,988:INFO:Uploading model into container now
2023-10-13 23:12:39,988:INFO:_master_model_container: 13
2023-10-13 23:12:39,989:INFO:_display_container: 2
2023-10-13 23:12:39,990:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=ElasticNet(random_state=123), sp=12,
                    window_length=12)
2023-10-13 23:12:39,991:INFO:create_model() successfully completed......................................
2023-10-13 23:12:40,113:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:40,113:INFO:Creating metrics dataframe
2023-10-13 23:12:40,124:INFO:Initializing Ridge w/ Cond. Deseasonalize & Detrending
2023-10-13 23:12:40,124:INFO:Total runtime is 0.2966396490732829 minutes
2023-10-13 23:12:40,128:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:40,129:INFO:Initializing create_model()
2023-10-13 23:12:40,129:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=ridge_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:40,129:INFO:Checking exceptions
2023-10-13 23:12:40,129:INFO:Importing libraries
2023-10-13 23:12:40,129:INFO:Copying training dataset
2023-10-13 23:12:40,133:INFO:Defining folds
2023-10-13 23:12:40,133:INFO:Declaring metric variables
2023-10-13 23:12:40,137:INFO:Importing untrained model
2023-10-13 23:12:40,140:INFO:Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:12:40,149:INFO:Starting cross validation
2023-10-13 23:12:40,150:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:40,308:INFO:Calculating mean and std
2023-10-13 23:12:40,309:INFO:Creating metrics dataframe
2023-10-13 23:12:40,314:INFO:Uploading results into container
2023-10-13 23:12:40,314:INFO:Uploading model into container now
2023-10-13 23:12:40,314:INFO:_master_model_container: 14
2023-10-13 23:12:40,314:INFO:_display_container: 2
2023-10-13 23:12:40,316:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=Ridge(random_state=123), sp=12, window_length=12)
2023-10-13 23:12:40,316:INFO:create_model() successfully completed......................................
2023-10-13 23:12:40,437:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:40,437:INFO:Creating metrics dataframe
2023-10-13 23:12:40,447:INFO:Initializing Lasso w/ Cond. Deseasonalize & Detrending
2023-10-13 23:12:40,447:INFO:Total runtime is 0.30202686389287314 minutes
2023-10-13 23:12:40,450:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:40,451:INFO:Initializing create_model()
2023-10-13 23:12:40,451:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=lasso_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:40,451:INFO:Checking exceptions
2023-10-13 23:12:40,451:INFO:Importing libraries
2023-10-13 23:12:40,451:INFO:Copying training dataset
2023-10-13 23:12:40,455:INFO:Defining folds
2023-10-13 23:12:40,455:INFO:Declaring metric variables
2023-10-13 23:12:40,458:INFO:Importing untrained model
2023-10-13 23:12:40,462:INFO:Lasso w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:12:40,471:INFO:Starting cross validation
2023-10-13 23:12:40,472:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:40,644:INFO:Calculating mean and std
2023-10-13 23:12:40,645:INFO:Creating metrics dataframe
2023-10-13 23:12:40,650:INFO:Uploading results into container
2023-10-13 23:12:40,650:INFO:Uploading model into container now
2023-10-13 23:12:40,650:INFO:_master_model_container: 15
2023-10-13 23:12:40,650:INFO:_display_container: 2
2023-10-13 23:12:40,653:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=Lasso(random_state=123), sp=12, window_length=12)
2023-10-13 23:12:40,653:INFO:create_model() successfully completed......................................
2023-10-13 23:12:40,775:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:40,775:INFO:Creating metrics dataframe
2023-10-13 23:12:40,787:INFO:Initializing Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-10-13 23:12:40,787:INFO:Total runtime is 0.30768833160400394 minutes
2023-10-13 23:12:40,790:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:40,791:INFO:Initializing create_model()
2023-10-13 23:12:40,791:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=llar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:40,791:INFO:Checking exceptions
2023-10-13 23:12:40,791:INFO:Importing libraries
2023-10-13 23:12:40,791:INFO:Copying training dataset
2023-10-13 23:12:40,795:INFO:Defining folds
2023-10-13 23:12:40,795:INFO:Declaring metric variables
2023-10-13 23:12:40,798:INFO:Importing untrained model
2023-10-13 23:12:40,801:INFO:Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:12:40,810:INFO:Starting cross validation
2023-10-13 23:12:40,811:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:40,889:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-13 23:12:40,892:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-13 23:12:40,900:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-13 23:12:40,987:INFO:Calculating mean and std
2023-10-13 23:12:40,988:INFO:Creating metrics dataframe
2023-10-13 23:12:40,992:INFO:Uploading results into container
2023-10-13 23:12:40,992:INFO:Uploading model into container now
2023-10-13 23:12:40,992:INFO:_master_model_container: 16
2023-10-13 23:12:40,992:INFO:_display_container: 2
2023-10-13 23:12:40,994:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=LassoLars(random_state=123), sp=12,
                    window_length=12)
2023-10-13 23:12:40,994:INFO:create_model() successfully completed......................................
2023-10-13 23:12:41,145:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:41,145:INFO:Creating metrics dataframe
2023-10-13 23:12:41,155:INFO:Initializing Bayesian Ridge w/ Cond. Deseasonalize & Detrending
2023-10-13 23:12:41,155:INFO:Total runtime is 0.31381861368815106 minutes
2023-10-13 23:12:41,159:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:41,159:INFO:Initializing create_model()
2023-10-13 23:12:41,159:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=br_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:41,159:INFO:Checking exceptions
2023-10-13 23:12:41,159:INFO:Importing libraries
2023-10-13 23:12:41,159:INFO:Copying training dataset
2023-10-13 23:12:41,163:INFO:Defining folds
2023-10-13 23:12:41,163:INFO:Declaring metric variables
2023-10-13 23:12:41,166:INFO:Importing untrained model
2023-10-13 23:12:41,171:INFO:Bayesian Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:12:41,178:INFO:Starting cross validation
2023-10-13 23:12:41,180:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:41,336:INFO:Calculating mean and std
2023-10-13 23:12:41,337:INFO:Creating metrics dataframe
2023-10-13 23:12:41,341:INFO:Uploading results into container
2023-10-13 23:12:41,341:INFO:Uploading model into container now
2023-10-13 23:12:41,341:INFO:_master_model_container: 17
2023-10-13 23:12:41,341:INFO:_display_container: 2
2023-10-13 23:12:41,343:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=BayesianRidge(), sp=12, window_length=12)
2023-10-13 23:12:41,343:INFO:create_model() successfully completed......................................
2023-10-13 23:12:41,465:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:41,465:INFO:Creating metrics dataframe
2023-10-13 23:12:41,475:INFO:Initializing Huber w/ Cond. Deseasonalize & Detrending
2023-10-13 23:12:41,475:INFO:Total runtime is 0.3191500504811605 minutes
2023-10-13 23:12:41,480:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:41,480:INFO:Initializing create_model()
2023-10-13 23:12:41,480:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=huber_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:41,480:INFO:Checking exceptions
2023-10-13 23:12:41,480:INFO:Importing libraries
2023-10-13 23:12:41,480:INFO:Copying training dataset
2023-10-13 23:12:41,484:INFO:Defining folds
2023-10-13 23:12:41,484:INFO:Declaring metric variables
2023-10-13 23:12:41,487:INFO:Importing untrained model
2023-10-13 23:12:41,491:INFO:Huber w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:12:41,499:INFO:Starting cross validation
2023-10-13 23:12:41,500:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:41,665:INFO:Calculating mean and std
2023-10-13 23:12:41,667:INFO:Creating metrics dataframe
2023-10-13 23:12:41,671:INFO:Uploading results into container
2023-10-13 23:12:41,672:INFO:Uploading model into container now
2023-10-13 23:12:41,672:INFO:_master_model_container: 18
2023-10-13 23:12:41,672:INFO:_display_container: 2
2023-10-13 23:12:41,673:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=HuberRegressor(), sp=12, window_length=12)
2023-10-13 23:12:41,673:INFO:create_model() successfully completed......................................
2023-10-13 23:12:41,798:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:41,798:INFO:Creating metrics dataframe
2023-10-13 23:12:41,811:INFO:Initializing Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending
2023-10-13 23:12:41,811:INFO:Total runtime is 0.3247588555018108 minutes
2023-10-13 23:12:41,816:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:41,816:INFO:Initializing create_model()
2023-10-13 23:12:41,816:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=omp_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:41,816:INFO:Checking exceptions
2023-10-13 23:12:41,816:INFO:Importing libraries
2023-10-13 23:12:41,816:INFO:Copying training dataset
2023-10-13 23:12:41,819:INFO:Defining folds
2023-10-13 23:12:41,819:INFO:Declaring metric variables
2023-10-13 23:12:41,823:INFO:Importing untrained model
2023-10-13 23:12:41,828:INFO:Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:12:41,836:INFO:Starting cross validation
2023-10-13 23:12:41,837:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:41,900:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-13 23:12:41,903:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-13 23:12:41,907:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-13 23:12:41,989:INFO:Calculating mean and std
2023-10-13 23:12:41,991:INFO:Creating metrics dataframe
2023-10-13 23:12:41,995:INFO:Uploading results into container
2023-10-13 23:12:41,995:INFO:Uploading model into container now
2023-10-13 23:12:41,995:INFO:_master_model_container: 19
2023-10-13 23:12:41,995:INFO:_display_container: 2
2023-10-13 23:12:41,998:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=OrthogonalMatchingPursuit(), sp=12,
                    window_length=12)
2023-10-13 23:12:41,998:INFO:create_model() successfully completed......................................
2023-10-13 23:12:42,124:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:42,124:INFO:Creating metrics dataframe
2023-10-13 23:12:42,139:INFO:Initializing K Neighbors w/ Cond. Deseasonalize & Detrending
2023-10-13 23:12:42,139:INFO:Total runtime is 0.33021152416865035 minutes
2023-10-13 23:12:42,142:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:42,142:INFO:Initializing create_model()
2023-10-13 23:12:42,142:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=knn_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:42,142:INFO:Checking exceptions
2023-10-13 23:12:42,142:INFO:Importing libraries
2023-10-13 23:12:42,142:INFO:Copying training dataset
2023-10-13 23:12:42,146:INFO:Defining folds
2023-10-13 23:12:42,147:INFO:Declaring metric variables
2023-10-13 23:12:42,150:INFO:Importing untrained model
2023-10-13 23:12:42,154:INFO:K Neighbors w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:12:42,163:INFO:Starting cross validation
2023-10-13 23:12:42,165:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:42,355:INFO:Calculating mean and std
2023-10-13 23:12:42,356:INFO:Creating metrics dataframe
2023-10-13 23:12:42,359:INFO:Uploading results into container
2023-10-13 23:12:42,360:INFO:Uploading model into container now
2023-10-13 23:12:42,360:INFO:_master_model_container: 20
2023-10-13 23:12:42,360:INFO:_display_container: 2
2023-10-13 23:12:42,362:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=KNeighborsRegressor(n_jobs=-1), sp=12,
                    window_length=12)
2023-10-13 23:12:42,362:INFO:create_model() successfully completed......................................
2023-10-13 23:12:42,483:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:42,483:INFO:Creating metrics dataframe
2023-10-13 23:12:42,496:INFO:Initializing Decision Tree w/ Cond. Deseasonalize & Detrending
2023-10-13 23:12:42,497:INFO:Total runtime is 0.336180845896403 minutes
2023-10-13 23:12:42,500:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:42,501:INFO:Initializing create_model()
2023-10-13 23:12:42,501:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=dt_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:42,501:INFO:Checking exceptions
2023-10-13 23:12:42,501:INFO:Importing libraries
2023-10-13 23:12:42,501:INFO:Copying training dataset
2023-10-13 23:12:42,505:INFO:Defining folds
2023-10-13 23:12:42,505:INFO:Declaring metric variables
2023-10-13 23:12:42,508:INFO:Importing untrained model
2023-10-13 23:12:42,513:INFO:Decision Tree w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:12:42,519:INFO:Starting cross validation
2023-10-13 23:12:42,521:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:42,683:INFO:Calculating mean and std
2023-10-13 23:12:42,684:INFO:Creating metrics dataframe
2023-10-13 23:12:42,688:INFO:Uploading results into container
2023-10-13 23:12:42,688:INFO:Uploading model into container now
2023-10-13 23:12:42,688:INFO:_master_model_container: 21
2023-10-13 23:12:42,688:INFO:_display_container: 2
2023-10-13 23:12:42,690:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=DecisionTreeRegressor(random_state=123), sp=12,
                    window_length=12)
2023-10-13 23:12:42,690:INFO:create_model() successfully completed......................................
2023-10-13 23:12:42,815:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:42,815:INFO:Creating metrics dataframe
2023-10-13 23:12:42,829:INFO:Initializing Random Forest w/ Cond. Deseasonalize & Detrending
2023-10-13 23:12:42,829:INFO:Total runtime is 0.3417164444923401 minutes
2023-10-13 23:12:42,833:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:42,833:INFO:Initializing create_model()
2023-10-13 23:12:42,833:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=rf_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:42,833:INFO:Checking exceptions
2023-10-13 23:12:42,833:INFO:Importing libraries
2023-10-13 23:12:42,833:INFO:Copying training dataset
2023-10-13 23:12:42,837:INFO:Defining folds
2023-10-13 23:12:42,837:INFO:Declaring metric variables
2023-10-13 23:12:42,841:INFO:Importing untrained model
2023-10-13 23:12:42,845:INFO:Random Forest w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:12:42,853:INFO:Starting cross validation
2023-10-13 23:12:42,854:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:43,207:INFO:Calculating mean and std
2023-10-13 23:12:43,208:INFO:Creating metrics dataframe
2023-10-13 23:12:43,213:INFO:Uploading results into container
2023-10-13 23:12:43,213:INFO:Uploading model into container now
2023-10-13 23:12:43,213:INFO:_master_model_container: 22
2023-10-13 23:12:43,214:INFO:_display_container: 2
2023-10-13 23:12:43,216:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=RandomForestRegressor(n_jobs=-1, random_state=123),
                    sp=12, window_length=12)
2023-10-13 23:12:43,216:INFO:create_model() successfully completed......................................
2023-10-13 23:12:43,343:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:43,343:INFO:Creating metrics dataframe
2023-10-13 23:12:43,357:INFO:Initializing Extra Trees w/ Cond. Deseasonalize & Detrending
2023-10-13 23:12:43,357:INFO:Total runtime is 0.35052103996276857 minutes
2023-10-13 23:12:43,359:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:43,360:INFO:Initializing create_model()
2023-10-13 23:12:43,360:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=et_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:43,360:INFO:Checking exceptions
2023-10-13 23:12:43,360:INFO:Importing libraries
2023-10-13 23:12:43,360:INFO:Copying training dataset
2023-10-13 23:12:43,365:INFO:Defining folds
2023-10-13 23:12:43,365:INFO:Declaring metric variables
2023-10-13 23:12:43,368:INFO:Importing untrained model
2023-10-13 23:12:43,373:INFO:Extra Trees w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:12:43,381:INFO:Starting cross validation
2023-10-13 23:12:43,383:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:43,671:INFO:Calculating mean and std
2023-10-13 23:12:43,672:INFO:Creating metrics dataframe
2023-10-13 23:12:43,676:INFO:Uploading results into container
2023-10-13 23:12:43,677:INFO:Uploading model into container now
2023-10-13 23:12:43,677:INFO:_master_model_container: 23
2023-10-13 23:12:43,677:INFO:_display_container: 2
2023-10-13 23:12:43,679:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(n_jobs=-1, random_state=123),
                    sp=12, window_length=12)
2023-10-13 23:12:43,680:INFO:create_model() successfully completed......................................
2023-10-13 23:12:43,835:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:43,835:INFO:Creating metrics dataframe
2023-10-13 23:12:43,849:INFO:Initializing Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-10-13 23:12:43,849:INFO:Total runtime is 0.35872578620910645 minutes
2023-10-13 23:12:43,852:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:43,852:INFO:Initializing create_model()
2023-10-13 23:12:43,852:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=gbr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:43,852:INFO:Checking exceptions
2023-10-13 23:12:43,852:INFO:Importing libraries
2023-10-13 23:12:43,852:INFO:Copying training dataset
2023-10-13 23:12:43,857:INFO:Defining folds
2023-10-13 23:12:43,857:INFO:Declaring metric variables
2023-10-13 23:12:43,860:INFO:Importing untrained model
2023-10-13 23:12:43,865:INFO:Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:12:43,873:INFO:Starting cross validation
2023-10-13 23:12:43,875:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:44,071:INFO:Calculating mean and std
2023-10-13 23:12:44,073:INFO:Creating metrics dataframe
2023-10-13 23:12:44,076:INFO:Uploading results into container
2023-10-13 23:12:44,077:INFO:Uploading model into container now
2023-10-13 23:12:44,077:INFO:_master_model_container: 24
2023-10-13 23:12:44,077:INFO:_display_container: 2
2023-10-13 23:12:44,080:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=GradientBoostingRegressor(random_state=123),
                    sp=12, window_length=12)
2023-10-13 23:12:44,081:INFO:create_model() successfully completed......................................
2023-10-13 23:12:44,203:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:44,203:INFO:Creating metrics dataframe
2023-10-13 23:12:44,218:INFO:Initializing AdaBoost w/ Cond. Deseasonalize & Detrending
2023-10-13 23:12:44,218:INFO:Total runtime is 0.364872666200002 minutes
2023-10-13 23:12:44,221:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:44,221:INFO:Initializing create_model()
2023-10-13 23:12:44,221:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=ada_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:44,221:INFO:Checking exceptions
2023-10-13 23:12:44,221:INFO:Importing libraries
2023-10-13 23:12:44,221:INFO:Copying training dataset
2023-10-13 23:12:44,226:INFO:Defining folds
2023-10-13 23:12:44,226:INFO:Declaring metric variables
2023-10-13 23:12:44,229:INFO:Importing untrained model
2023-10-13 23:12:44,233:INFO:AdaBoost w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:12:44,241:INFO:Starting cross validation
2023-10-13 23:12:44,242:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:44,468:INFO:Calculating mean and std
2023-10-13 23:12:44,470:INFO:Creating metrics dataframe
2023-10-13 23:12:44,473:INFO:Uploading results into container
2023-10-13 23:12:44,473:INFO:Uploading model into container now
2023-10-13 23:12:44,474:INFO:_master_model_container: 25
2023-10-13 23:12:44,474:INFO:_display_container: 2
2023-10-13 23:12:44,475:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=AdaBoostRegressor(random_state=123), sp=12,
                    window_length=12)
2023-10-13 23:12:44,475:INFO:create_model() successfully completed......................................
2023-10-13 23:12:44,597:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:44,597:INFO:Creating metrics dataframe
2023-10-13 23:12:44,610:INFO:Initializing Extreme Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-10-13 23:12:44,610:INFO:Total runtime is 0.37140613396962485 minutes
2023-10-13 23:12:44,615:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:44,615:INFO:Initializing create_model()
2023-10-13 23:12:44,615:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=xgboost_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:44,615:INFO:Checking exceptions
2023-10-13 23:12:44,615:INFO:Importing libraries
2023-10-13 23:12:44,615:INFO:Copying training dataset
2023-10-13 23:12:44,618:INFO:Defining folds
2023-10-13 23:12:44,618:INFO:Declaring metric variables
2023-10-13 23:12:44,622:INFO:Importing untrained model
2023-10-13 23:12:44,625:INFO:Extreme Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:12:44,633:INFO:Starting cross validation
2023-10-13 23:12:44,634:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:44,934:INFO:Calculating mean and std
2023-10-13 23:12:44,936:INFO:Creating metrics dataframe
2023-10-13 23:12:44,941:INFO:Uploading results into container
2023-10-13 23:12:44,941:INFO:Uploading model into container now
2023-10-13 23:12:44,942:INFO:_master_model_container: 26
2023-10-13 23:12:44,942:INFO:_display_container: 2
2023-10-13 23:12:44,948:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             g...tance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=123, ...),
                    sp=12, window_length=12)
2023-10-13 23:12:44,949:INFO:create_model() successfully completed......................................
2023-10-13 23:12:45,085:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:45,085:INFO:Creating metrics dataframe
2023-10-13 23:12:45,100:INFO:Initializing Light Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-10-13 23:12:45,100:INFO:Total runtime is 0.3795677781105042 minutes
2023-10-13 23:12:45,102:INFO:SubProcess create_model() called ==================================
2023-10-13 23:12:45,102:INFO:Initializing create_model()
2023-10-13 23:12:45,103:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=lightgbm_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000215586B3E80>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:45,103:INFO:Checking exceptions
2023-10-13 23:12:45,103:INFO:Importing libraries
2023-10-13 23:12:45,103:INFO:Copying training dataset
2023-10-13 23:12:45,107:INFO:Defining folds
2023-10-13 23:12:45,107:INFO:Declaring metric variables
2023-10-13 23:12:45,110:INFO:Importing untrained model
2023-10-13 23:12:45,115:INFO:Light Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-10-13 23:12:45,124:INFO:Starting cross validation
2023-10-13 23:12:45,125:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=132, step_length=3), n_jobs=-1
2023-10-13 23:12:45,258:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\lightgbm\basic.py:599: UserWarning: Usage of np.ndarray subset (sliced data) is not recommended due to it will double the peak memory cost in LightGBM.
  _log_warning("Usage of np.ndarray subset (sliced data) is not recommended "

2023-10-13 23:12:45,286:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\lightgbm\basic.py:599: UserWarning: Usage of np.ndarray subset (sliced data) is not recommended due to it will double the peak memory cost in LightGBM.
  _log_warning("Usage of np.ndarray subset (sliced data) is not recommended "

2023-10-13 23:12:45,291:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\lightgbm\basic.py:599: UserWarning: Usage of np.ndarray subset (sliced data) is not recommended due to it will double the peak memory cost in LightGBM.
  _log_warning("Usage of np.ndarray subset (sliced data) is not recommended "

2023-10-13 23:12:45,293:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\lightgbm\basic.py:599: UserWarning: Usage of np.ndarray subset (sliced data) is not recommended due to it will double the peak memory cost in LightGBM.
  _log_warning("Usage of np.ndarray subset (sliced data) is not recommended "

2023-10-13 23:12:45,315:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\lightgbm\basic.py:599: UserWarning: Usage of np.ndarray subset (sliced data) is not recommended due to it will double the peak memory cost in LightGBM.
  _log_warning("Usage of np.ndarray subset (sliced data) is not recommended "

2023-10-13 23:12:45,321:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\lightgbm\basic.py:599: UserWarning: Usage of np.ndarray subset (sliced data) is not recommended due to it will double the peak memory cost in LightGBM.
  _log_warning("Usage of np.ndarray subset (sliced data) is not recommended "

2023-10-13 23:12:45,322:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\lightgbm\basic.py:599: UserWarning: Usage of np.ndarray subset (sliced data) is not recommended due to it will double the peak memory cost in LightGBM.
  _log_warning("Usage of np.ndarray subset (sliced data) is not recommended "

2023-10-13 23:12:45,349:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\lightgbm\basic.py:599: UserWarning: Usage of np.ndarray subset (sliced data) is not recommended due to it will double the peak memory cost in LightGBM.
  _log_warning("Usage of np.ndarray subset (sliced data) is not recommended "

2023-10-13 23:12:45,352:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\lightgbm\basic.py:599: UserWarning: Usage of np.ndarray subset (sliced data) is not recommended due to it will double the peak memory cost in LightGBM.
  _log_warning("Usage of np.ndarray subset (sliced data) is not recommended "

2023-10-13 23:12:45,368:INFO:Calculating mean and std
2023-10-13 23:12:45,370:INFO:Creating metrics dataframe
2023-10-13 23:12:45,377:INFO:Uploading results into container
2023-10-13 23:12:45,378:INFO:Uploading model into container now
2023-10-13 23:12:45,378:INFO:_master_model_container: 27
2023-10-13 23:12:45,378:INFO:_display_container: 2
2023-10-13 23:12:45,381:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=LGBMRegressor(n_jobs=-1, random_state=123), sp=12,
                    window_length=12)
2023-10-13 23:12:45,381:INFO:create_model() successfully completed......................................
2023-10-13 23:12:45,524:INFO:SubProcess create_model() end ==================================
2023-10-13 23:12:45,524:INFO:Creating metrics dataframe
2023-10-13 23:12:45,550:INFO:Initializing create_model()
2023-10-13 23:12:45,550:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000002155829DE70>, estimator=STLForecaster(sp=12), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-13 23:12:45,550:INFO:Checking exceptions
2023-10-13 23:12:45,552:INFO:Importing libraries
2023-10-13 23:12:45,553:INFO:Copying training dataset
2023-10-13 23:12:45,554:INFO:Defining folds
2023-10-13 23:12:45,554:INFO:Declaring metric variables
2023-10-13 23:12:45,555:INFO:Importing untrained model
2023-10-13 23:12:45,555:INFO:Declaring custom model
2023-10-13 23:12:45,556:INFO:STLF Imported successfully
2023-10-13 23:12:45,556:INFO:Cross validation set to False
2023-10-13 23:12:45,556:INFO:Fitting Model
2023-10-13 23:12:45,571:INFO:STLForecaster(sp=12)
2023-10-13 23:12:45,571:INFO:create_model() successfully completed......................................
2023-10-13 23:12:45,736:INFO:_master_model_container: 27
2023-10-13 23:12:45,737:INFO:_display_container: 2
2023-10-13 23:12:45,737:INFO:STLForecaster(sp=12)
2023-10-13 23:12:45,737:INFO:compare_models() successfully completed......................................
2023-10-13 23:13:32,524:INFO:Visual Rendered Successfully
2023-10-13 23:14:07,464:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\utils\generic.py:586: UserWarning:

Traceback (most recent call last):
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
TypeError: mase() got an unexpected keyword argument 'sample_weight'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\utils\generic.py", line 584, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\containers\metrics\time_series.py", line 175, in mase
    return mean_absolute_scaled_error(
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\performance_metrics\forecasting\_functions.py", line 417, in mean_absolute_scaled_error
    _, y_true, y_pred, multioutput = _check_reg_targets(y_true, y_pred, multioutput)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py", line 100, in _check_reg_targets
    check_consistent_length(y_true, y_pred)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 387, in check_consistent_length
    raise ValueError(
ValueError: Found input variables with inconsistent numbers of samples: [3, 36]



2023-10-13 23:14:07,465:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\utils\generic.py:586: UserWarning:

Traceback (most recent call last):
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
TypeError: rmsse() got an unexpected keyword argument 'sample_weight'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\utils\generic.py", line 584, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\containers\metrics\time_series.py", line 185, in rmsse
    return mean_squared_scaled_error(
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\performance_metrics\forecasting\_functions.py", line 680, in mean_squared_scaled_error
    _, y_true, y_pred, multioutput = _check_reg_targets(y_true, y_pred, multioutput)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py", line 100, in _check_reg_targets
    check_consistent_length(y_true, y_pred)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 387, in check_consistent_length
    raise ValueError(
ValueError: Found input variables with inconsistent numbers of samples: [3, 36]



2023-10-13 23:14:07,466:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\utils\generic.py:586: UserWarning:

Traceback (most recent call last):
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py", line 196, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py", line 100, in _check_reg_targets
    check_consistent_length(y_true, y_pred)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 387, in check_consistent_length
    raise ValueError(
ValueError: Found input variables with inconsistent numbers of samples: [3, 36]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\utils\generic.py", line 584, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py", line 196, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py", line 100, in _check_reg_targets
    check_consistent_length(y_true, y_pred)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 387, in check_consistent_length
    raise ValueError(
ValueError: Found input variables with inconsistent numbers of samples: [3, 36]



2023-10-13 23:14:07,466:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\utils\generic.py:586: UserWarning:

Traceback (most recent call last):
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py", line 442, in mean_squared_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py", line 100, in _check_reg_targets
    check_consistent_length(y_true, y_pred)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 387, in check_consistent_length
    raise ValueError(
ValueError: Found input variables with inconsistent numbers of samples: [3, 36]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\utils\generic.py", line 584, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py", line 442, in mean_squared_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py", line 100, in _check_reg_targets
    check_consistent_length(y_true, y_pred)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 387, in check_consistent_length
    raise ValueError(
ValueError: Found input variables with inconsistent numbers of samples: [3, 36]



2023-10-13 23:14:07,467:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\utils\generic.py:586: UserWarning:

Traceback (most recent call last):
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\containers\metrics\time_series.py", line 168, in mape
    return mean_absolute_percentage_error(
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\performance_metrics\forecasting\_functions.py", line 1537, in mean_absolute_percentage_error
    _, y_true, y_pred, multioutput = _check_reg_targets(y_true, y_pred, multioutput)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py", line 100, in _check_reg_targets
    check_consistent_length(y_true, y_pred)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 387, in check_consistent_length
    raise ValueError(
ValueError: Found input variables with inconsistent numbers of samples: [3, 36]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\utils\generic.py", line 584, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\containers\metrics\time_series.py", line 168, in mape
    return mean_absolute_percentage_error(
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\performance_metrics\forecasting\_functions.py", line 1537, in mean_absolute_percentage_error
    _, y_true, y_pred, multioutput = _check_reg_targets(y_true, y_pred, multioutput)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py", line 100, in _check_reg_targets
    check_consistent_length(y_true, y_pred)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 387, in check_consistent_length
    raise ValueError(
ValueError: Found input variables with inconsistent numbers of samples: [3, 36]



2023-10-13 23:14:07,467:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\utils\generic.py:586: UserWarning:

Traceback (most recent call last):
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\containers\metrics\time_series.py", line 159, in _smape_loss
    return mean_absolute_percentage_error(
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\performance_metrics\forecasting\_functions.py", line 1537, in mean_absolute_percentage_error
    _, y_true, y_pred, multioutput = _check_reg_targets(y_true, y_pred, multioutput)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py", line 100, in _check_reg_targets
    check_consistent_length(y_true, y_pred)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 387, in check_consistent_length
    raise ValueError(
ValueError: Found input variables with inconsistent numbers of samples: [3, 36]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\utils\generic.py", line 584, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\containers\metrics\time_series.py", line 159, in _smape_loss
    return mean_absolute_percentage_error(
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\sktime\performance_metrics\forecasting\_functions.py", line 1537, in mean_absolute_percentage_error
    _, y_true, y_pred, multioutput = _check_reg_targets(y_true, y_pred, multioutput)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py", line 100, in _check_reg_targets
    check_consistent_length(y_true, y_pred)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 387, in check_consistent_length
    raise ValueError(
ValueError: Found input variables with inconsistent numbers of samples: [3, 36]



2023-10-13 23:14:07,468:WARNING:C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\utils\generic.py:586: UserWarning:

Traceback (most recent call last):
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py", line 911, in r2_score
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py", line 100, in _check_reg_targets
    check_consistent_length(y_true, y_pred)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 387, in check_consistent_length
    raise ValueError(
ValueError: Found input variables with inconsistent numbers of samples: [3, 36]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\manue\AppData\Roaming\Python\Python310\site-packages\pycaret\utils\generic.py", line 584, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py", line 911, in r2_score
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py", line 100, in _check_reg_targets
    check_consistent_length(y_true, y_pred)
  File "c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 387, in check_consistent_length
    raise ValueError(
ValueError: Found input variables with inconsistent numbers of samples: [3, 36]



2023-10-13 23:14:07,470:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-10-13 23:14:07,649:INFO:Visual Rendered Successfully
2023-10-14 15:35:16,014:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-14 15:35:16,016:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-14 15:35:16,016:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-14 15:35:16,016:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-14 15:35:26,430:INFO:PyCaret RegressionExperiment
2023-10-14 15:35:26,430:INFO:Logging name: reg-default-name
2023-10-14 15:35:26,430:INFO:ML Usecase: MLUsecase.REGRESSION
2023-10-14 15:35:26,430:INFO:version 3.1.0
2023-10-14 15:35:26,430:INFO:Initializing setup()
2023-10-14 15:35:26,430:INFO:self.USI: 2041
2023-10-14 15:35:26,430:INFO:self._variable_keys: {'exp_id', 'seed', 'idx', 'html_param', 'fold_shuffle_param', 'log_plots_param', 'logging_param', '_available_plots', 'gpu_param', 'y', 'y_train', 'y_test', 'target_param', 'memory', 'transform_target_param', 'X_train', 'X_test', 'fold_groups_param', '_ml_usecase', 'data', 'X', 'pipeline', 'n_jobs_param', 'exp_name_log', 'fold_generator', 'gpu_n_jobs_param', 'USI'}
2023-10-14 15:35:26,430:INFO:Checking environment
2023-10-14 15:35:26,430:INFO:python_version: 3.10.6
2023-10-14 15:35:26,430:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2023-10-14 15:35:26,430:INFO:machine: AMD64
2023-10-14 15:35:26,430:INFO:platform: Windows-10-10.0.22621-SP0
2023-10-14 15:35:26,431:INFO:Memory: svmem(total=8273383424, available=1072361472, percent=87.0, used=7201021952, free=1072361472)
2023-10-14 15:35:26,431:INFO:Physical Core: 4
2023-10-14 15:35:26,431:INFO:Logical Core: 8
2023-10-14 15:35:26,431:INFO:Checking libraries
2023-10-14 15:35:26,431:INFO:System:
2023-10-14 15:35:26,431:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2023-10-14 15:35:26,431:INFO:executable: c:\Users\manue\AppData\Local\Programs\Python\Python310\python.exe
2023-10-14 15:35:26,431:INFO:   machine: Windows-10-10.0.22621-SP0
2023-10-14 15:35:26,431:INFO:PyCaret required dependencies:
2023-10-14 15:35:26,522:INFO:                 pip: 22.2.1
2023-10-14 15:35:26,522:INFO:          setuptools: 63.2.0
2023-10-14 15:35:26,522:INFO:             pycaret: 3.1.0
2023-10-14 15:35:26,522:INFO:             IPython: 8.4.0
2023-10-14 15:35:26,522:INFO:          ipywidgets: 8.1.1
2023-10-14 15:35:26,522:INFO:                tqdm: 4.66.1
2023-10-14 15:35:26,523:INFO:               numpy: 1.23.2
2023-10-14 15:35:26,523:INFO:              pandas: 1.4.3
2023-10-14 15:35:26,523:INFO:              jinja2: 3.1.2
2023-10-14 15:35:26,523:INFO:               scipy: 1.10.1
2023-10-14 15:35:26,523:INFO:              joblib: 1.2.0
2023-10-14 15:35:26,523:INFO:             sklearn: 1.1.2
2023-10-14 15:35:26,523:INFO:                pyod: 1.1.0
2023-10-14 15:35:26,523:INFO:            imblearn: 0.11.0
2023-10-14 15:35:26,523:INFO:   category_encoders: 2.6.2
2023-10-14 15:35:26,523:INFO:            lightgbm: 4.1.0
2023-10-14 15:35:26,523:INFO:               numba: 0.58.0
2023-10-14 15:35:26,523:INFO:            requests: 2.28.1
2023-10-14 15:35:26,523:INFO:          matplotlib: 3.6.0
2023-10-14 15:35:26,523:INFO:          scikitplot: 0.3.7
2023-10-14 15:35:26,523:INFO:         yellowbrick: 1.5
2023-10-14 15:35:26,523:INFO:              plotly: 5.17.0
2023-10-14 15:35:26,523:INFO:    plotly-resampler: Not installed
2023-10-14 15:35:26,523:INFO:             kaleido: 0.2.1
2023-10-14 15:35:26,523:INFO:           schemdraw: 0.15
2023-10-14 15:35:26,523:INFO:         statsmodels: 0.13.2
2023-10-14 15:35:26,523:INFO:              sktime: 0.21.1
2023-10-14 15:35:26,523:INFO:               tbats: 1.1.3
2023-10-14 15:35:26,523:INFO:            pmdarima: 2.0.3
2023-10-14 15:35:26,523:INFO:              psutil: 5.9.1
2023-10-14 15:35:26,523:INFO:          markupsafe: 2.1.1
2023-10-14 15:35:26,523:INFO:             pickle5: Not installed
2023-10-14 15:35:26,523:INFO:         cloudpickle: 2.2.1
2023-10-14 15:35:26,523:INFO:         deprecation: 2.1.0
2023-10-14 15:35:26,523:INFO:              xxhash: 3.4.1
2023-10-14 15:35:26,523:INFO:           wurlitzer: Not installed
2023-10-14 15:35:26,523:INFO:PyCaret optional dependencies:
2023-10-14 15:35:26,765:INFO:                shap: Not installed
2023-10-14 15:35:26,765:INFO:           interpret: Not installed
2023-10-14 15:35:26,765:INFO:                umap: Not installed
2023-10-14 15:35:26,765:INFO:     ydata_profiling: Not installed
2023-10-14 15:35:26,765:INFO:  explainerdashboard: Not installed
2023-10-14 15:35:26,765:INFO:             autoviz: Not installed
2023-10-14 15:35:26,765:INFO:           fairlearn: Not installed
2023-10-14 15:35:26,765:INFO:          deepchecks: Not installed
2023-10-14 15:35:26,765:INFO:             xgboost: 2.0.0
2023-10-14 15:35:26,765:INFO:            catboost: Not installed
2023-10-14 15:35:26,765:INFO:              kmodes: Not installed
2023-10-14 15:35:26,765:INFO:             mlxtend: Not installed
2023-10-14 15:35:26,765:INFO:       statsforecast: Not installed
2023-10-14 15:35:26,765:INFO:        tune_sklearn: Not installed
2023-10-14 15:35:26,765:INFO:                 ray: Not installed
2023-10-14 15:35:26,765:INFO:            hyperopt: Not installed
2023-10-14 15:35:26,765:INFO:              optuna: Not installed
2023-10-14 15:35:26,765:INFO:               skopt: Not installed
2023-10-14 15:35:26,765:INFO:              mlflow: Not installed
2023-10-14 15:35:26,765:INFO:              gradio: Not installed
2023-10-14 15:35:26,765:INFO:             fastapi: Not installed
2023-10-14 15:35:26,765:INFO:             uvicorn: Not installed
2023-10-14 15:35:26,765:INFO:              m2cgen: Not installed
2023-10-14 15:35:26,765:INFO:           evidently: Not installed
2023-10-14 15:35:26,765:INFO:               fugue: Not installed
2023-10-14 15:35:26,765:INFO:           streamlit: Not installed
2023-10-14 15:35:26,765:INFO:             prophet: Not installed
2023-10-14 15:35:26,765:INFO:None
2023-10-14 15:35:26,765:INFO:Set up data.
2023-10-14 15:35:26,775:INFO:Set up folding strategy.
2023-10-14 15:36:42,199:INFO:PyCaret RegressionExperiment
2023-10-14 15:36:42,199:INFO:Logging name: reg-default-name
2023-10-14 15:36:42,199:INFO:ML Usecase: MLUsecase.REGRESSION
2023-10-14 15:36:42,199:INFO:version 3.1.0
2023-10-14 15:36:42,199:INFO:Initializing setup()
2023-10-14 15:36:42,199:INFO:self.USI: 0779
2023-10-14 15:36:42,199:INFO:self._variable_keys: {'exp_id', 'seed', 'idx', 'html_param', 'fold_shuffle_param', 'log_plots_param', 'logging_param', '_available_plots', 'gpu_param', 'y', 'y_train', 'y_test', 'target_param', 'memory', 'transform_target_param', 'X_train', 'X_test', 'fold_groups_param', '_ml_usecase', 'data', 'X', 'pipeline', 'n_jobs_param', 'exp_name_log', 'fold_generator', 'gpu_n_jobs_param', 'USI'}
2023-10-14 15:36:42,200:INFO:Checking environment
2023-10-14 15:36:42,200:INFO:python_version: 3.10.6
2023-10-14 15:36:42,200:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2023-10-14 15:36:42,200:INFO:machine: AMD64
2023-10-14 15:36:42,200:INFO:platform: Windows-10-10.0.22621-SP0
2023-10-14 15:36:42,200:INFO:Memory: svmem(total=8273383424, available=1171206144, percent=85.8, used=7102177280, free=1171206144)
2023-10-14 15:36:42,200:INFO:Physical Core: 4
2023-10-14 15:36:42,200:INFO:Logical Core: 8
2023-10-14 15:36:42,200:INFO:Checking libraries
2023-10-14 15:36:42,200:INFO:System:
2023-10-14 15:36:42,200:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2023-10-14 15:36:42,200:INFO:executable: c:\Users\manue\AppData\Local\Programs\Python\Python310\python.exe
2023-10-14 15:36:42,200:INFO:   machine: Windows-10-10.0.22621-SP0
2023-10-14 15:36:42,200:INFO:PyCaret required dependencies:
2023-10-14 15:36:42,200:INFO:                 pip: 22.2.1
2023-10-14 15:36:42,200:INFO:          setuptools: 63.2.0
2023-10-14 15:36:42,200:INFO:             pycaret: 3.1.0
2023-10-14 15:36:42,200:INFO:             IPython: 8.4.0
2023-10-14 15:36:42,200:INFO:          ipywidgets: 8.1.1
2023-10-14 15:36:42,200:INFO:                tqdm: 4.66.1
2023-10-14 15:36:42,201:INFO:               numpy: 1.23.2
2023-10-14 15:36:42,201:INFO:              pandas: 1.4.3
2023-10-14 15:36:42,201:INFO:              jinja2: 3.1.2
2023-10-14 15:36:42,201:INFO:               scipy: 1.10.1
2023-10-14 15:36:42,201:INFO:              joblib: 1.2.0
2023-10-14 15:36:42,201:INFO:             sklearn: 1.1.2
2023-10-14 15:36:42,201:INFO:                pyod: 1.1.0
2023-10-14 15:36:42,201:INFO:            imblearn: 0.11.0
2023-10-14 15:36:42,201:INFO:   category_encoders: 2.6.2
2023-10-14 15:36:42,201:INFO:            lightgbm: 4.1.0
2023-10-14 15:36:42,201:INFO:               numba: 0.58.0
2023-10-14 15:36:42,201:INFO:            requests: 2.28.1
2023-10-14 15:36:42,201:INFO:          matplotlib: 3.6.0
2023-10-14 15:36:42,201:INFO:          scikitplot: 0.3.7
2023-10-14 15:36:42,201:INFO:         yellowbrick: 1.5
2023-10-14 15:36:42,201:INFO:              plotly: 5.17.0
2023-10-14 15:36:42,201:INFO:    plotly-resampler: Not installed
2023-10-14 15:36:42,201:INFO:             kaleido: 0.2.1
2023-10-14 15:36:42,201:INFO:           schemdraw: 0.15
2023-10-14 15:36:42,201:INFO:         statsmodels: 0.13.2
2023-10-14 15:36:42,201:INFO:              sktime: 0.21.1
2023-10-14 15:36:42,201:INFO:               tbats: 1.1.3
2023-10-14 15:36:42,201:INFO:            pmdarima: 2.0.3
2023-10-14 15:36:42,201:INFO:              psutil: 5.9.1
2023-10-14 15:36:42,201:INFO:          markupsafe: 2.1.1
2023-10-14 15:36:42,201:INFO:             pickle5: Not installed
2023-10-14 15:36:42,201:INFO:         cloudpickle: 2.2.1
2023-10-14 15:36:42,202:INFO:         deprecation: 2.1.0
2023-10-14 15:36:42,202:INFO:              xxhash: 3.4.1
2023-10-14 15:36:42,202:INFO:           wurlitzer: Not installed
2023-10-14 15:36:42,202:INFO:PyCaret optional dependencies:
2023-10-14 15:36:42,202:INFO:                shap: Not installed
2023-10-14 15:36:42,202:INFO:           interpret: Not installed
2023-10-14 15:36:42,202:INFO:                umap: Not installed
2023-10-14 15:36:42,202:INFO:     ydata_profiling: Not installed
2023-10-14 15:36:42,202:INFO:  explainerdashboard: Not installed
2023-10-14 15:36:42,202:INFO:             autoviz: Not installed
2023-10-14 15:36:42,202:INFO:           fairlearn: Not installed
2023-10-14 15:36:42,202:INFO:          deepchecks: Not installed
2023-10-14 15:36:42,202:INFO:             xgboost: 2.0.0
2023-10-14 15:36:42,202:INFO:            catboost: Not installed
2023-10-14 15:36:42,202:INFO:              kmodes: Not installed
2023-10-14 15:36:42,202:INFO:             mlxtend: Not installed
2023-10-14 15:36:42,202:INFO:       statsforecast: Not installed
2023-10-14 15:36:42,202:INFO:        tune_sklearn: Not installed
2023-10-14 15:36:42,202:INFO:                 ray: Not installed
2023-10-14 15:36:42,202:INFO:            hyperopt: Not installed
2023-10-14 15:36:42,202:INFO:              optuna: Not installed
2023-10-14 15:36:42,202:INFO:               skopt: Not installed
2023-10-14 15:36:42,202:INFO:              mlflow: Not installed
2023-10-14 15:36:42,202:INFO:              gradio: Not installed
2023-10-14 15:36:42,202:INFO:             fastapi: Not installed
2023-10-14 15:36:42,202:INFO:             uvicorn: Not installed
2023-10-14 15:36:42,203:INFO:              m2cgen: Not installed
2023-10-14 15:36:42,203:INFO:           evidently: Not installed
2023-10-14 15:36:42,203:INFO:               fugue: Not installed
2023-10-14 15:36:42,203:INFO:           streamlit: Not installed
2023-10-14 15:36:42,203:INFO:             prophet: Not installed
2023-10-14 15:36:42,203:INFO:None
2023-10-14 15:36:42,203:INFO:Set up data.
2023-10-14 15:36:42,209:INFO:Set up folding strategy.
2023-10-14 15:36:42,210:INFO:Set up train/test split.
2023-10-14 15:36:42,210:INFO:Set up data.
2023-10-14 15:36:42,215:INFO:Set up index.
2023-10-14 15:36:42,215:INFO:Assigning column types.
2023-10-14 15:36:42,220:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-10-14 15:36:42,221:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,226:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,231:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,280:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,317:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,317:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 15:36:42,320:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 15:36:42,320:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,324:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,328:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,376:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,414:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,414:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 15:36:42,416:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 15:36:42,417:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-10-14 15:36:42,421:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,424:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,477:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,515:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,515:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 15:36:42,517:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 15:36:42,521:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,525:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,573:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,608:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,609:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 15:36:42,611:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 15:36:42,612:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-10-14 15:36:42,619:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,667:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,711:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,711:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 15:36:42,714:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 15:36:42,721:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,772:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,808:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,809:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 15:36:42,811:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 15:36:42,812:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-10-14 15:36:42,866:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,903:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-14 15:36:42,904:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 15:36:42,905:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 15:36:42,966:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-14 15:36:43,004:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-14 15:36:43,004:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 15:36:43,006:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 15:36:43,007:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-10-14 15:36:43,063:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-14 15:36:43,102:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 15:36:43,104:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 15:36:43,159:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-14 15:36:43,198:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 15:36:43,200:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 15:36:43,200:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-10-14 15:36:43,299:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 15:36:43,301:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 15:36:43,390:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 15:36:43,392:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 15:36:43,397:INFO:Preparing preprocessing pipeline...
2023-10-14 15:36:43,397:INFO:Set up simple imputation.
2023-10-14 15:36:43,405:INFO:Set up encoding of categorical features.
2023-10-14 15:36:43,459:INFO:Finished creating preprocessing pipeline.
2023-10-14 15:36:43,466:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\manue\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'Series', 'temperature',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['month', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['month', 'day'],
                                    transformer=OneHotEncoder(cols=['month',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2023-10-14 15:36:43,467:INFO:Creating final display dataframe.
2023-10-14 15:36:43,586:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            demand
2                   Target type        Regression
3           Original data shape         (6006, 7)
4        Transformed data shape        (6006, 24)
5   Transformed train set shape        (5506, 24)
6    Transformed test set shape         (500, 24)
7              Numeric features                 4
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator   TimeSeriesSplit
16                  Fold Number                 3
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              0779
2023-10-14 15:36:43,677:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 15:36:43,679:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 15:36:43,770:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 15:36:43,772:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 15:36:43,773:INFO:setup() successfully completed in 1.58s...............
2023-10-14 15:37:16,858:INFO:Initializing compare_models()
2023-10-14 15:37:16,859:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-10-14 15:37:16,859:INFO:Checking exceptions
2023-10-14 15:37:16,863:INFO:Preparing display monitor
2023-10-14 15:37:16,907:INFO:Initializing Linear Regression
2023-10-14 15:37:16,907:INFO:Total runtime is 0.0 minutes
2023-10-14 15:37:16,911:INFO:SubProcess create_model() called ==================================
2023-10-14 15:37:16,911:INFO:Initializing create_model()
2023-10-14 15:37:16,911:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=lr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFD6B2F2B0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 15:37:16,911:INFO:Checking exceptions
2023-10-14 15:37:16,912:INFO:Importing libraries
2023-10-14 15:37:16,912:INFO:Copying training dataset
2023-10-14 15:37:16,917:INFO:Defining folds
2023-10-14 15:37:16,917:INFO:Declaring metric variables
2023-10-14 15:37:16,921:INFO:Importing untrained model
2023-10-14 15:37:16,925:INFO:Linear Regression Imported successfully
2023-10-14 15:37:16,959:INFO:Starting cross validation
2023-10-14 15:37:16,973:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 15:37:20,360:INFO:Calculating mean and std
2023-10-14 15:37:20,361:INFO:Creating metrics dataframe
2023-10-14 15:37:20,366:INFO:Uploading results into container
2023-10-14 15:37:20,367:INFO:Uploading model into container now
2023-10-14 15:37:20,368:INFO:_master_model_container: 1
2023-10-14 15:37:20,369:INFO:_display_container: 2
2023-10-14 15:37:20,369:INFO:LinearRegression(n_jobs=-1)
2023-10-14 15:37:20,370:INFO:create_model() successfully completed......................................
2023-10-14 15:37:20,543:INFO:SubProcess create_model() end ==================================
2023-10-14 15:37:20,543:INFO:Creating metrics dataframe
2023-10-14 15:37:20,549:INFO:Initializing Lasso Regression
2023-10-14 15:37:20,549:INFO:Total runtime is 0.060690538088480635 minutes
2023-10-14 15:37:20,552:INFO:SubProcess create_model() called ==================================
2023-10-14 15:37:20,552:INFO:Initializing create_model()
2023-10-14 15:37:20,552:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=lasso, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFD6B2F2B0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 15:37:20,553:INFO:Checking exceptions
2023-10-14 15:37:20,553:INFO:Importing libraries
2023-10-14 15:37:20,553:INFO:Copying training dataset
2023-10-14 15:37:20,558:INFO:Defining folds
2023-10-14 15:37:20,558:INFO:Declaring metric variables
2023-10-14 15:37:20,561:INFO:Importing untrained model
2023-10-14 15:37:20,566:INFO:Lasso Regression Imported successfully
2023-10-14 15:37:20,572:INFO:Starting cross validation
2023-10-14 15:37:20,574:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 15:37:22,300:INFO:Calculating mean and std
2023-10-14 15:37:22,302:INFO:Creating metrics dataframe
2023-10-14 15:37:22,306:INFO:Uploading results into container
2023-10-14 15:37:22,307:INFO:Uploading model into container now
2023-10-14 15:37:22,308:INFO:_master_model_container: 2
2023-10-14 15:37:22,308:INFO:_display_container: 2
2023-10-14 15:37:22,308:INFO:Lasso(random_state=123)
2023-10-14 15:37:22,308:INFO:create_model() successfully completed......................................
2023-10-14 15:37:22,459:INFO:SubProcess create_model() end ==================================
2023-10-14 15:37:22,459:INFO:Creating metrics dataframe
2023-10-14 15:37:22,467:INFO:Initializing Ridge Regression
2023-10-14 15:37:22,467:INFO:Total runtime is 0.0926718314488729 minutes
2023-10-14 15:37:22,469:INFO:SubProcess create_model() called ==================================
2023-10-14 15:37:22,470:INFO:Initializing create_model()
2023-10-14 15:37:22,470:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=ridge, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFD6B2F2B0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 15:37:22,470:INFO:Checking exceptions
2023-10-14 15:37:22,470:INFO:Importing libraries
2023-10-14 15:37:22,470:INFO:Copying training dataset
2023-10-14 15:37:22,476:INFO:Defining folds
2023-10-14 15:37:22,476:INFO:Declaring metric variables
2023-10-14 15:37:22,478:INFO:Importing untrained model
2023-10-14 15:37:22,482:INFO:Ridge Regression Imported successfully
2023-10-14 15:37:22,489:INFO:Starting cross validation
2023-10-14 15:37:22,490:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 15:37:24,076:INFO:Calculating mean and std
2023-10-14 15:37:24,078:INFO:Creating metrics dataframe
2023-10-14 15:37:24,084:INFO:Uploading results into container
2023-10-14 15:37:24,085:INFO:Uploading model into container now
2023-10-14 15:37:24,085:INFO:_master_model_container: 3
2023-10-14 15:37:24,085:INFO:_display_container: 2
2023-10-14 15:37:24,086:INFO:Ridge(random_state=123)
2023-10-14 15:37:24,086:INFO:create_model() successfully completed......................................
2023-10-14 15:37:24,258:INFO:SubProcess create_model() end ==================================
2023-10-14 15:37:24,258:INFO:Creating metrics dataframe
2023-10-14 15:37:24,266:INFO:Initializing Elastic Net
2023-10-14 15:37:24,266:INFO:Total runtime is 0.12265239953994753 minutes
2023-10-14 15:37:24,271:INFO:SubProcess create_model() called ==================================
2023-10-14 15:37:24,271:INFO:Initializing create_model()
2023-10-14 15:37:24,271:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=en, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFD6B2F2B0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 15:37:24,273:INFO:Checking exceptions
2023-10-14 15:37:24,273:INFO:Importing libraries
2023-10-14 15:37:24,273:INFO:Copying training dataset
2023-10-14 15:37:24,277:INFO:Defining folds
2023-10-14 15:37:24,277:INFO:Declaring metric variables
2023-10-14 15:37:24,281:INFO:Importing untrained model
2023-10-14 15:37:24,285:INFO:Elastic Net Imported successfully
2023-10-14 15:37:24,291:INFO:Starting cross validation
2023-10-14 15:37:24,292:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 15:37:24,391:INFO:Calculating mean and std
2023-10-14 15:37:24,392:INFO:Creating metrics dataframe
2023-10-14 15:37:24,395:INFO:Uploading results into container
2023-10-14 15:37:24,395:INFO:Uploading model into container now
2023-10-14 15:37:24,395:INFO:_master_model_container: 4
2023-10-14 15:37:24,395:INFO:_display_container: 2
2023-10-14 15:37:24,396:INFO:ElasticNet(random_state=123)
2023-10-14 15:37:24,396:INFO:create_model() successfully completed......................................
2023-10-14 15:37:24,523:INFO:SubProcess create_model() end ==================================
2023-10-14 15:37:24,523:INFO:Creating metrics dataframe
2023-10-14 15:37:24,531:INFO:Initializing Least Angle Regression
2023-10-14 15:37:24,532:INFO:Total runtime is 0.12707288662592572 minutes
2023-10-14 15:37:24,536:INFO:SubProcess create_model() called ==================================
2023-10-14 15:37:24,536:INFO:Initializing create_model()
2023-10-14 15:37:24,537:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=lar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFD6B2F2B0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 15:37:24,537:INFO:Checking exceptions
2023-10-14 15:37:24,537:INFO:Importing libraries
2023-10-14 15:37:24,537:INFO:Copying training dataset
2023-10-14 15:37:24,541:INFO:Defining folds
2023-10-14 15:37:24,541:INFO:Declaring metric variables
2023-10-14 15:37:24,544:INFO:Importing untrained model
2023-10-14 15:37:24,551:INFO:Least Angle Regression Imported successfully
2023-10-14 15:37:24,559:INFO:Starting cross validation
2023-10-14 15:37:24,560:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 15:37:24,668:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-14 15:37:24,692:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 20 iterations, i.e. alpha=3.136e-03, with an active set of 19 regressors, and the smallest cholesky pivot element being 6.322e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-14 15:37:24,693:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 24 iterations, i.e. alpha=1.733e-01, with an active set of 20 regressors, and the smallest cholesky pivot element being 6.322e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-14 15:37:24,693:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 25 iterations, i.e. alpha=2.633e-02, with an active set of 21 regressors, and the smallest cholesky pivot element being 6.322e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-14 15:37:24,710:INFO:Calculating mean and std
2023-10-14 15:37:24,711:INFO:Creating metrics dataframe
2023-10-14 15:37:24,714:INFO:Uploading results into container
2023-10-14 15:37:24,715:INFO:Uploading model into container now
2023-10-14 15:37:24,716:INFO:_master_model_container: 5
2023-10-14 15:37:24,716:INFO:_display_container: 2
2023-10-14 15:37:24,716:INFO:Lars(random_state=123)
2023-10-14 15:37:24,716:INFO:create_model() successfully completed......................................
2023-10-14 15:37:24,848:INFO:SubProcess create_model() end ==================================
2023-10-14 15:37:24,848:INFO:Creating metrics dataframe
2023-10-14 15:37:24,855:INFO:Initializing Lasso Least Angle Regression
2023-10-14 15:37:24,855:INFO:Total runtime is 0.1324690620104472 minutes
2023-10-14 15:37:24,857:INFO:SubProcess create_model() called ==================================
2023-10-14 15:37:24,858:INFO:Initializing create_model()
2023-10-14 15:37:24,858:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=llar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFD6B2F2B0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 15:37:24,858:INFO:Checking exceptions
2023-10-14 15:37:24,858:INFO:Importing libraries
2023-10-14 15:37:24,858:INFO:Copying training dataset
2023-10-14 15:37:24,864:INFO:Defining folds
2023-10-14 15:37:24,864:INFO:Declaring metric variables
2023-10-14 15:37:24,868:INFO:Importing untrained model
2023-10-14 15:37:24,872:INFO:Lasso Least Angle Regression Imported successfully
2023-10-14 15:37:24,878:INFO:Starting cross validation
2023-10-14 15:37:24,880:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 15:37:24,939:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-14 15:37:24,950:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-14 15:37:24,954:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-14 15:37:24,976:INFO:Calculating mean and std
2023-10-14 15:37:24,977:INFO:Creating metrics dataframe
2023-10-14 15:37:24,979:INFO:Uploading results into container
2023-10-14 15:37:24,980:INFO:Uploading model into container now
2023-10-14 15:37:24,980:INFO:_master_model_container: 6
2023-10-14 15:37:24,980:INFO:_display_container: 2
2023-10-14 15:37:24,981:INFO:LassoLars(random_state=123)
2023-10-14 15:37:24,981:INFO:create_model() successfully completed......................................
2023-10-14 15:37:25,106:INFO:SubProcess create_model() end ==================================
2023-10-14 15:37:25,106:INFO:Creating metrics dataframe
2023-10-14 15:37:25,116:INFO:Initializing Orthogonal Matching Pursuit
2023-10-14 15:37:25,116:INFO:Total runtime is 0.1368171532948812 minutes
2023-10-14 15:37:25,120:INFO:SubProcess create_model() called ==================================
2023-10-14 15:37:25,121:INFO:Initializing create_model()
2023-10-14 15:37:25,121:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=omp, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFD6B2F2B0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 15:37:25,121:INFO:Checking exceptions
2023-10-14 15:37:25,121:INFO:Importing libraries
2023-10-14 15:37:25,121:INFO:Copying training dataset
2023-10-14 15:37:25,125:INFO:Defining folds
2023-10-14 15:37:25,125:INFO:Declaring metric variables
2023-10-14 15:37:25,130:INFO:Importing untrained model
2023-10-14 15:37:25,134:INFO:Orthogonal Matching Pursuit Imported successfully
2023-10-14 15:37:25,140:INFO:Starting cross validation
2023-10-14 15:37:25,142:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 15:37:25,204:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-14 15:37:25,218:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-14 15:37:25,228:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-14 15:37:25,251:INFO:Calculating mean and std
2023-10-14 15:37:25,252:INFO:Creating metrics dataframe
2023-10-14 15:37:25,255:INFO:Uploading results into container
2023-10-14 15:37:25,255:INFO:Uploading model into container now
2023-10-14 15:37:25,255:INFO:_master_model_container: 7
2023-10-14 15:37:25,255:INFO:_display_container: 2
2023-10-14 15:37:25,256:INFO:OrthogonalMatchingPursuit()
2023-10-14 15:37:25,256:INFO:create_model() successfully completed......................................
2023-10-14 15:37:25,385:INFO:SubProcess create_model() end ==================================
2023-10-14 15:37:25,385:INFO:Creating metrics dataframe
2023-10-14 15:37:25,394:INFO:Initializing Bayesian Ridge
2023-10-14 15:37:25,395:INFO:Total runtime is 0.14146052996317546 minutes
2023-10-14 15:37:25,399:INFO:SubProcess create_model() called ==================================
2023-10-14 15:37:25,399:INFO:Initializing create_model()
2023-10-14 15:37:25,399:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=br, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFD6B2F2B0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 15:37:25,399:INFO:Checking exceptions
2023-10-14 15:37:25,400:INFO:Importing libraries
2023-10-14 15:37:25,400:INFO:Copying training dataset
2023-10-14 15:37:25,405:INFO:Defining folds
2023-10-14 15:37:25,405:INFO:Declaring metric variables
2023-10-14 15:37:25,408:INFO:Importing untrained model
2023-10-14 15:37:25,413:INFO:Bayesian Ridge Imported successfully
2023-10-14 15:37:25,420:INFO:Starting cross validation
2023-10-14 15:37:25,422:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 15:37:25,517:INFO:Calculating mean and std
2023-10-14 15:37:25,518:INFO:Creating metrics dataframe
2023-10-14 15:37:25,521:INFO:Uploading results into container
2023-10-14 15:37:25,521:INFO:Uploading model into container now
2023-10-14 15:37:25,521:INFO:_master_model_container: 8
2023-10-14 15:37:25,521:INFO:_display_container: 2
2023-10-14 15:37:25,522:INFO:BayesianRidge()
2023-10-14 15:37:25,522:INFO:create_model() successfully completed......................................
2023-10-14 15:37:25,650:INFO:SubProcess create_model() end ==================================
2023-10-14 15:37:25,650:INFO:Creating metrics dataframe
2023-10-14 15:37:25,658:INFO:Initializing Passive Aggressive Regressor
2023-10-14 15:37:25,658:INFO:Total runtime is 0.14583985408147176 minutes
2023-10-14 15:37:25,662:INFO:SubProcess create_model() called ==================================
2023-10-14 15:37:25,663:INFO:Initializing create_model()
2023-10-14 15:37:25,663:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=par, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFD6B2F2B0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 15:37:25,663:INFO:Checking exceptions
2023-10-14 15:37:25,663:INFO:Importing libraries
2023-10-14 15:37:25,663:INFO:Copying training dataset
2023-10-14 15:37:25,669:INFO:Defining folds
2023-10-14 15:37:25,670:INFO:Declaring metric variables
2023-10-14 15:37:25,673:INFO:Importing untrained model
2023-10-14 15:37:25,677:INFO:Passive Aggressive Regressor Imported successfully
2023-10-14 15:37:25,684:INFO:Starting cross validation
2023-10-14 15:37:25,685:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 15:37:25,799:INFO:Calculating mean and std
2023-10-14 15:37:25,800:INFO:Creating metrics dataframe
2023-10-14 15:37:25,802:INFO:Uploading results into container
2023-10-14 15:37:25,802:INFO:Uploading model into container now
2023-10-14 15:37:25,803:INFO:_master_model_container: 9
2023-10-14 15:37:25,803:INFO:_display_container: 2
2023-10-14 15:37:25,803:INFO:PassiveAggressiveRegressor(random_state=123)
2023-10-14 15:37:25,803:INFO:create_model() successfully completed......................................
2023-10-14 15:37:25,926:INFO:SubProcess create_model() end ==================================
2023-10-14 15:37:25,926:INFO:Creating metrics dataframe
2023-10-14 15:37:25,935:INFO:Initializing Huber Regressor
2023-10-14 15:37:25,935:INFO:Total runtime is 0.15046096642812093 minutes
2023-10-14 15:37:25,940:INFO:SubProcess create_model() called ==================================
2023-10-14 15:37:25,940:INFO:Initializing create_model()
2023-10-14 15:37:25,940:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=huber, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFD6B2F2B0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 15:37:25,940:INFO:Checking exceptions
2023-10-14 15:37:25,940:INFO:Importing libraries
2023-10-14 15:37:25,940:INFO:Copying training dataset
2023-10-14 15:37:25,945:INFO:Defining folds
2023-10-14 15:37:25,945:INFO:Declaring metric variables
2023-10-14 15:37:25,949:INFO:Importing untrained model
2023-10-14 15:37:25,953:INFO:Huber Regressor Imported successfully
2023-10-14 15:37:25,958:INFO:Starting cross validation
2023-10-14 15:37:25,960:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 15:37:26,056:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-10-14 15:37:26,061:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-10-14 15:37:26,078:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-10-14 15:37:26,098:INFO:Calculating mean and std
2023-10-14 15:37:26,099:INFO:Creating metrics dataframe
2023-10-14 15:37:26,102:INFO:Uploading results into container
2023-10-14 15:37:26,103:INFO:Uploading model into container now
2023-10-14 15:37:26,103:INFO:_master_model_container: 10
2023-10-14 15:37:26,103:INFO:_display_container: 2
2023-10-14 15:37:26,104:INFO:HuberRegressor()
2023-10-14 15:37:26,104:INFO:create_model() successfully completed......................................
2023-10-14 15:37:26,231:INFO:SubProcess create_model() end ==================================
2023-10-14 15:37:26,231:INFO:Creating metrics dataframe
2023-10-14 15:37:26,239:INFO:Initializing K Neighbors Regressor
2023-10-14 15:37:26,239:INFO:Total runtime is 0.15552481015523276 minutes
2023-10-14 15:37:26,241:INFO:SubProcess create_model() called ==================================
2023-10-14 15:37:26,241:INFO:Initializing create_model()
2023-10-14 15:37:26,241:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=knn, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFD6B2F2B0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 15:37:26,241:INFO:Checking exceptions
2023-10-14 15:37:26,242:INFO:Importing libraries
2023-10-14 15:37:26,242:INFO:Copying training dataset
2023-10-14 15:37:26,247:INFO:Defining folds
2023-10-14 15:37:26,247:INFO:Declaring metric variables
2023-10-14 15:37:26,250:INFO:Importing untrained model
2023-10-14 15:37:26,254:INFO:K Neighbors Regressor Imported successfully
2023-10-14 15:37:26,261:INFO:Starting cross validation
2023-10-14 15:37:26,263:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 15:37:26,458:INFO:Calculating mean and std
2023-10-14 15:37:26,460:INFO:Creating metrics dataframe
2023-10-14 15:37:26,462:INFO:Uploading results into container
2023-10-14 15:37:26,463:INFO:Uploading model into container now
2023-10-14 15:37:26,463:INFO:_master_model_container: 11
2023-10-14 15:37:26,463:INFO:_display_container: 2
2023-10-14 15:37:26,464:INFO:KNeighborsRegressor(n_jobs=-1)
2023-10-14 15:37:26,464:INFO:create_model() successfully completed......................................
2023-10-14 15:37:26,587:INFO:SubProcess create_model() end ==================================
2023-10-14 15:37:26,587:INFO:Creating metrics dataframe
2023-10-14 15:37:26,597:INFO:Initializing Decision Tree Regressor
2023-10-14 15:37:26,597:INFO:Total runtime is 0.1614983638127645 minutes
2023-10-14 15:37:26,602:INFO:SubProcess create_model() called ==================================
2023-10-14 15:37:26,602:INFO:Initializing create_model()
2023-10-14 15:37:26,602:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=dt, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFD6B2F2B0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 15:37:26,602:INFO:Checking exceptions
2023-10-14 15:37:26,602:INFO:Importing libraries
2023-10-14 15:37:26,602:INFO:Copying training dataset
2023-10-14 15:37:26,607:INFO:Defining folds
2023-10-14 15:37:26,607:INFO:Declaring metric variables
2023-10-14 15:37:26,611:INFO:Importing untrained model
2023-10-14 15:37:26,615:INFO:Decision Tree Regressor Imported successfully
2023-10-14 15:37:26,621:INFO:Starting cross validation
2023-10-14 15:37:26,622:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 15:37:26,764:INFO:Calculating mean and std
2023-10-14 15:37:26,765:INFO:Creating metrics dataframe
2023-10-14 15:37:26,768:INFO:Uploading results into container
2023-10-14 15:37:26,770:INFO:Uploading model into container now
2023-10-14 15:37:26,770:INFO:_master_model_container: 12
2023-10-14 15:37:26,771:INFO:_display_container: 2
2023-10-14 15:37:26,771:INFO:DecisionTreeRegressor(random_state=123)
2023-10-14 15:37:26,771:INFO:create_model() successfully completed......................................
2023-10-14 15:37:26,901:INFO:SubProcess create_model() end ==================================
2023-10-14 15:37:26,901:INFO:Creating metrics dataframe
2023-10-14 15:37:26,910:INFO:Initializing Random Forest Regressor
2023-10-14 15:37:26,910:INFO:Total runtime is 0.16672067244847616 minutes
2023-10-14 15:37:26,914:INFO:SubProcess create_model() called ==================================
2023-10-14 15:37:26,914:INFO:Initializing create_model()
2023-10-14 15:37:26,914:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=rf, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFD6B2F2B0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 15:37:26,914:INFO:Checking exceptions
2023-10-14 15:37:26,914:INFO:Importing libraries
2023-10-14 15:37:26,915:INFO:Copying training dataset
2023-10-14 15:37:26,920:INFO:Defining folds
2023-10-14 15:37:26,920:INFO:Declaring metric variables
2023-10-14 15:37:26,923:INFO:Importing untrained model
2023-10-14 15:37:26,927:INFO:Random Forest Regressor Imported successfully
2023-10-14 15:37:26,935:INFO:Starting cross validation
2023-10-14 15:37:26,938:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 15:37:27,619:INFO:Calculating mean and std
2023-10-14 15:37:27,621:INFO:Creating metrics dataframe
2023-10-14 15:37:27,623:INFO:Uploading results into container
2023-10-14 15:37:27,624:INFO:Uploading model into container now
2023-10-14 15:37:27,624:INFO:_master_model_container: 13
2023-10-14 15:37:27,624:INFO:_display_container: 2
2023-10-14 15:37:27,624:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-10-14 15:37:27,625:INFO:create_model() successfully completed......................................
2023-10-14 15:37:27,753:INFO:SubProcess create_model() end ==================================
2023-10-14 15:37:27,753:INFO:Creating metrics dataframe
2023-10-14 15:37:27,770:INFO:Initializing Extra Trees Regressor
2023-10-14 15:37:27,770:INFO:Total runtime is 0.18103955189387003 minutes
2023-10-14 15:37:27,773:INFO:SubProcess create_model() called ==================================
2023-10-14 15:37:27,774:INFO:Initializing create_model()
2023-10-14 15:37:27,774:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=et, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFD6B2F2B0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 15:37:27,774:INFO:Checking exceptions
2023-10-14 15:37:27,774:INFO:Importing libraries
2023-10-14 15:37:27,774:INFO:Copying training dataset
2023-10-14 15:37:27,784:INFO:Defining folds
2023-10-14 15:37:27,784:INFO:Declaring metric variables
2023-10-14 15:37:27,788:INFO:Importing untrained model
2023-10-14 15:37:27,792:INFO:Extra Trees Regressor Imported successfully
2023-10-14 15:37:27,800:INFO:Starting cross validation
2023-10-14 15:37:27,801:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 15:37:28,411:INFO:Calculating mean and std
2023-10-14 15:37:28,412:INFO:Creating metrics dataframe
2023-10-14 15:37:28,415:INFO:Uploading results into container
2023-10-14 15:37:28,416:INFO:Uploading model into container now
2023-10-14 15:37:28,416:INFO:_master_model_container: 14
2023-10-14 15:37:28,416:INFO:_display_container: 2
2023-10-14 15:37:28,416:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-10-14 15:37:28,417:INFO:create_model() successfully completed......................................
2023-10-14 15:37:28,552:INFO:SubProcess create_model() end ==================================
2023-10-14 15:37:28,552:INFO:Creating metrics dataframe
2023-10-14 15:37:28,562:INFO:Initializing AdaBoost Regressor
2023-10-14 15:37:28,563:INFO:Total runtime is 0.19426631927490234 minutes
2023-10-14 15:37:28,565:INFO:SubProcess create_model() called ==================================
2023-10-14 15:37:28,566:INFO:Initializing create_model()
2023-10-14 15:37:28,566:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=ada, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFD6B2F2B0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 15:37:28,566:INFO:Checking exceptions
2023-10-14 15:37:28,566:INFO:Importing libraries
2023-10-14 15:37:28,566:INFO:Copying training dataset
2023-10-14 15:37:28,570:INFO:Defining folds
2023-10-14 15:37:28,570:INFO:Declaring metric variables
2023-10-14 15:37:28,574:INFO:Importing untrained model
2023-10-14 15:37:28,578:INFO:AdaBoost Regressor Imported successfully
2023-10-14 15:37:28,585:INFO:Starting cross validation
2023-10-14 15:37:28,586:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 15:37:28,916:INFO:Calculating mean and std
2023-10-14 15:37:28,917:INFO:Creating metrics dataframe
2023-10-14 15:37:28,919:INFO:Uploading results into container
2023-10-14 15:37:28,920:INFO:Uploading model into container now
2023-10-14 15:37:28,920:INFO:_master_model_container: 15
2023-10-14 15:37:28,920:INFO:_display_container: 2
2023-10-14 15:37:28,920:INFO:AdaBoostRegressor(random_state=123)
2023-10-14 15:37:28,920:INFO:create_model() successfully completed......................................
2023-10-14 15:37:29,050:INFO:SubProcess create_model() end ==================================
2023-10-14 15:37:29,050:INFO:Creating metrics dataframe
2023-10-14 15:37:29,060:INFO:Initializing Gradient Boosting Regressor
2023-10-14 15:37:29,060:INFO:Total runtime is 0.2025416890780131 minutes
2023-10-14 15:37:29,064:INFO:SubProcess create_model() called ==================================
2023-10-14 15:37:29,065:INFO:Initializing create_model()
2023-10-14 15:37:29,065:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=gbr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFD6B2F2B0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 15:37:29,065:INFO:Checking exceptions
2023-10-14 15:37:29,065:INFO:Importing libraries
2023-10-14 15:37:29,065:INFO:Copying training dataset
2023-10-14 15:37:29,069:INFO:Defining folds
2023-10-14 15:37:29,069:INFO:Declaring metric variables
2023-10-14 15:37:29,072:INFO:Importing untrained model
2023-10-14 15:37:29,075:INFO:Gradient Boosting Regressor Imported successfully
2023-10-14 15:37:29,082:INFO:Starting cross validation
2023-10-14 15:37:29,083:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 15:37:29,501:INFO:Calculating mean and std
2023-10-14 15:37:29,502:INFO:Creating metrics dataframe
2023-10-14 15:37:29,505:INFO:Uploading results into container
2023-10-14 15:37:29,505:INFO:Uploading model into container now
2023-10-14 15:37:29,505:INFO:_master_model_container: 16
2023-10-14 15:37:29,505:INFO:_display_container: 2
2023-10-14 15:37:29,506:INFO:GradientBoostingRegressor(random_state=123)
2023-10-14 15:37:29,506:INFO:create_model() successfully completed......................................
2023-10-14 15:37:29,627:INFO:SubProcess create_model() end ==================================
2023-10-14 15:37:29,628:INFO:Creating metrics dataframe
2023-10-14 15:37:29,637:INFO:Initializing Extreme Gradient Boosting
2023-10-14 15:37:29,638:INFO:Total runtime is 0.2121791362762451 minutes
2023-10-14 15:37:29,642:INFO:SubProcess create_model() called ==================================
2023-10-14 15:37:29,642:INFO:Initializing create_model()
2023-10-14 15:37:29,642:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=xgboost, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFD6B2F2B0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 15:37:29,642:INFO:Checking exceptions
2023-10-14 15:37:29,642:INFO:Importing libraries
2023-10-14 15:37:29,642:INFO:Copying training dataset
2023-10-14 15:37:29,648:INFO:Defining folds
2023-10-14 15:37:29,648:INFO:Declaring metric variables
2023-10-14 15:37:29,651:INFO:Importing untrained model
2023-10-14 15:37:29,655:INFO:Extreme Gradient Boosting Imported successfully
2023-10-14 15:37:29,660:INFO:Starting cross validation
2023-10-14 15:37:29,662:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 15:37:29,934:INFO:Calculating mean and std
2023-10-14 15:37:29,935:INFO:Creating metrics dataframe
2023-10-14 15:37:29,938:INFO:Uploading results into container
2023-10-14 15:37:29,938:INFO:Uploading model into container now
2023-10-14 15:37:29,939:INFO:_master_model_container: 17
2023-10-14 15:37:29,939:INFO:_display_container: 2
2023-10-14 15:37:29,939:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=123, ...)
2023-10-14 15:37:29,940:INFO:create_model() successfully completed......................................
2023-10-14 15:37:30,070:INFO:SubProcess create_model() end ==================================
2023-10-14 15:37:30,070:INFO:Creating metrics dataframe
2023-10-14 15:37:30,080:INFO:Initializing Light Gradient Boosting Machine
2023-10-14 15:37:30,080:INFO:Total runtime is 0.21954871416091917 minutes
2023-10-14 15:37:30,083:INFO:SubProcess create_model() called ==================================
2023-10-14 15:37:30,083:INFO:Initializing create_model()
2023-10-14 15:37:30,084:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=lightgbm, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFD6B2F2B0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 15:37:30,084:INFO:Checking exceptions
2023-10-14 15:37:30,084:INFO:Importing libraries
2023-10-14 15:37:30,084:INFO:Copying training dataset
2023-10-14 15:37:30,089:INFO:Defining folds
2023-10-14 15:37:30,089:INFO:Declaring metric variables
2023-10-14 15:37:30,092:INFO:Importing untrained model
2023-10-14 15:37:30,097:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-14 15:37:30,103:INFO:Starting cross validation
2023-10-14 15:37:30,105:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 15:37:30,433:INFO:Calculating mean and std
2023-10-14 15:37:30,435:INFO:Creating metrics dataframe
2023-10-14 15:37:30,440:INFO:Uploading results into container
2023-10-14 15:37:30,440:INFO:Uploading model into container now
2023-10-14 15:37:30,441:INFO:_master_model_container: 18
2023-10-14 15:37:30,441:INFO:_display_container: 2
2023-10-14 15:37:30,441:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2023-10-14 15:37:30,442:INFO:create_model() successfully completed......................................
2023-10-14 15:37:30,589:INFO:SubProcess create_model() end ==================================
2023-10-14 15:37:30,589:INFO:Creating metrics dataframe
2023-10-14 15:37:30,601:INFO:Initializing Dummy Regressor
2023-10-14 15:37:30,601:INFO:Total runtime is 0.22822581529617308 minutes
2023-10-14 15:37:30,604:INFO:SubProcess create_model() called ==================================
2023-10-14 15:37:30,604:INFO:Initializing create_model()
2023-10-14 15:37:30,604:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=dummy, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFD6B2F2B0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 15:37:30,604:INFO:Checking exceptions
2023-10-14 15:37:30,604:INFO:Importing libraries
2023-10-14 15:37:30,604:INFO:Copying training dataset
2023-10-14 15:37:30,610:INFO:Defining folds
2023-10-14 15:37:30,610:INFO:Declaring metric variables
2023-10-14 15:37:30,614:INFO:Importing untrained model
2023-10-14 15:37:30,618:INFO:Dummy Regressor Imported successfully
2023-10-14 15:37:30,625:INFO:Starting cross validation
2023-10-14 15:37:30,626:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 15:37:30,719:INFO:Calculating mean and std
2023-10-14 15:37:30,720:INFO:Creating metrics dataframe
2023-10-14 15:37:30,722:INFO:Uploading results into container
2023-10-14 15:37:30,723:INFO:Uploading model into container now
2023-10-14 15:37:30,723:INFO:_master_model_container: 19
2023-10-14 15:37:30,723:INFO:_display_container: 2
2023-10-14 15:37:30,724:INFO:DummyRegressor()
2023-10-14 15:37:30,724:INFO:create_model() successfully completed......................................
2023-10-14 15:37:30,847:INFO:SubProcess create_model() end ==================================
2023-10-14 15:37:30,847:INFO:Creating metrics dataframe
2023-10-14 15:37:30,868:INFO:Initializing create_model()
2023-10-14 15:37:30,869:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-14 15:37:30,869:INFO:Checking exceptions
2023-10-14 15:37:30,871:INFO:Importing libraries
2023-10-14 15:37:30,871:INFO:Copying training dataset
2023-10-14 15:37:30,874:INFO:Defining folds
2023-10-14 15:37:30,874:INFO:Declaring metric variables
2023-10-14 15:37:30,874:INFO:Importing untrained model
2023-10-14 15:37:30,874:INFO:Declaring custom model
2023-10-14 15:37:30,875:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-14 15:37:30,875:INFO:Cross validation set to False
2023-10-14 15:37:30,876:INFO:Fitting Model
2023-10-14 15:37:30,931:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000195 seconds.
2023-10-14 15:37:30,931:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-14 15:37:30,931:INFO:[LightGBM] [Info] Total Bins 812
2023-10-14 15:37:30,931:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 23
2023-10-14 15:37:30,932:INFO:[LightGBM] [Info] Start training from score 361.942261
2023-10-14 15:37:30,990:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2023-10-14 15:37:30,990:INFO:create_model() successfully completed......................................
2023-10-14 15:37:31,174:INFO:_master_model_container: 19
2023-10-14 15:37:31,175:INFO:_display_container: 2
2023-10-14 15:37:31,175:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2023-10-14 15:37:31,175:INFO:compare_models() successfully completed......................................
2023-10-14 15:38:44,374:INFO:Initializing predict_model()
2023-10-14 15:38:44,375:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FFEB2941F0>)
2023-10-14 15:38:44,375:INFO:Checking exceptions
2023-10-14 15:38:44,375:INFO:Preloading libraries
2023-10-14 15:43:16,553:INFO:Initializing predict_model()
2023-10-14 15:43:16,553:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FFEB1D1870>)
2023-10-14 15:43:16,553:INFO:Checking exceptions
2023-10-14 15:43:16,553:INFO:Preloading libraries
2023-10-14 15:43:16,556:INFO:Set up data.
2023-10-14 15:43:16,565:INFO:Set up index.
2023-10-14 15:43:52,883:INFO:Initializing predict_model()
2023-10-14 15:43:52,883:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FFC0A1D240>)
2023-10-14 15:43:52,884:INFO:Checking exceptions
2023-10-14 15:43:52,884:INFO:Preloading libraries
2023-10-14 15:43:52,886:INFO:Set up data.
2023-10-14 15:43:52,893:INFO:Set up index.
2023-10-14 15:44:15,037:INFO:Initializing predict_model()
2023-10-14 15:44:15,037:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FFEBF5AEF0>)
2023-10-14 15:44:15,037:INFO:Checking exceptions
2023-10-14 15:44:15,037:INFO:Preloading libraries
2023-10-14 15:44:15,039:INFO:Set up data.
2023-10-14 15:44:15,048:INFO:Set up index.
2023-10-14 15:45:00,696:INFO:Initializing predict_model()
2023-10-14 15:45:00,696:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FFEBF5B9A0>)
2023-10-14 15:45:00,696:INFO:Checking exceptions
2023-10-14 15:45:00,696:INFO:Preloading libraries
2023-10-14 15:45:00,698:INFO:Set up data.
2023-10-14 15:45:00,706:INFO:Set up index.
2023-10-14 15:46:28,144:INFO:Initializing predict_model()
2023-10-14 15:46:28,144:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FFEC0BBAC0>)
2023-10-14 15:46:28,144:INFO:Checking exceptions
2023-10-14 15:46:28,144:INFO:Preloading libraries
2023-10-14 15:46:28,147:INFO:Set up data.
2023-10-14 15:46:28,152:INFO:Set up index.
2023-10-14 15:47:03,571:INFO:Initializing predict_model()
2023-10-14 15:47:03,571:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FFEB8DF640>)
2023-10-14 15:47:03,571:INFO:Checking exceptions
2023-10-14 15:47:03,572:INFO:Preloading libraries
2023-10-14 15:47:03,573:INFO:Set up data.
2023-10-14 15:47:03,580:INFO:Set up index.
2023-10-14 15:47:30,662:INFO:Initializing predict_model()
2023-10-14 15:47:30,662:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FFEC0B8820>)
2023-10-14 15:47:30,664:INFO:Checking exceptions
2023-10-14 15:47:30,664:INFO:Preloading libraries
2023-10-14 15:47:30,667:INFO:Set up data.
2023-10-14 15:47:30,674:INFO:Set up index.
2023-10-14 15:47:46,650:INFO:Initializing predict_model()
2023-10-14 15:47:46,650:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FFEE79CE50>)
2023-10-14 15:47:46,650:INFO:Checking exceptions
2023-10-14 15:47:46,650:INFO:Preloading libraries
2023-10-14 15:47:46,654:INFO:Set up data.
2023-10-14 15:47:46,661:INFO:Set up index.
2023-10-14 15:50:25,792:INFO:Initializing predict_model()
2023-10-14 15:50:25,792:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FFEF2720E0>)
2023-10-14 15:50:25,792:INFO:Checking exceptions
2023-10-14 15:50:25,793:INFO:Preloading libraries
2023-10-14 15:50:25,796:INFO:Set up data.
2023-10-14 15:50:25,806:INFO:Set up index.
2023-10-14 15:51:56,995:WARNING:C:\Users\manue\AppData\Local\Temp\ipykernel_1612\2913609534.py:7: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy


2023-10-14 15:52:38,944:INFO:Initializing predict_model()
2023-10-14 15:52:38,944:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFD9FABC40>, estimator=LGBMRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FFEE7A6440>)
2023-10-14 15:52:38,944:INFO:Checking exceptions
2023-10-14 15:52:38,944:INFO:Preloading libraries
2023-10-14 15:52:38,946:INFO:Set up data.
2023-10-14 15:52:38,956:INFO:Set up index.
2023-10-14 16:03:44,119:WARNING:C:\Users\manue\AppData\Local\Temp\ipykernel_1612\2913609534.py:7: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy


2023-10-14 16:04:42,259:INFO:PyCaret RegressionExperiment
2023-10-14 16:04:42,260:INFO:Logging name: reg-default-name
2023-10-14 16:04:42,260:INFO:ML Usecase: MLUsecase.REGRESSION
2023-10-14 16:04:42,260:INFO:version 3.1.0
2023-10-14 16:04:42,260:INFO:Initializing setup()
2023-10-14 16:04:42,260:INFO:self.USI: e8cf
2023-10-14 16:04:42,260:INFO:self._variable_keys: {'exp_id', 'seed', 'idx', 'html_param', 'fold_shuffle_param', 'log_plots_param', 'logging_param', '_available_plots', 'gpu_param', 'y', 'y_train', 'y_test', 'target_param', 'memory', 'transform_target_param', 'X_train', 'X_test', 'fold_groups_param', '_ml_usecase', 'data', 'X', 'pipeline', 'n_jobs_param', 'exp_name_log', 'fold_generator', 'gpu_n_jobs_param', 'USI'}
2023-10-14 16:04:42,260:INFO:Checking environment
2023-10-14 16:04:42,261:INFO:python_version: 3.10.6
2023-10-14 16:04:42,261:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2023-10-14 16:04:42,261:INFO:machine: AMD64
2023-10-14 16:04:42,261:INFO:platform: Windows-10-10.0.22621-SP0
2023-10-14 16:04:42,261:INFO:Memory: svmem(total=8273383424, available=1312530432, percent=84.1, used=6960852992, free=1312530432)
2023-10-14 16:04:42,261:INFO:Physical Core: 4
2023-10-14 16:04:42,261:INFO:Logical Core: 8
2023-10-14 16:04:42,261:INFO:Checking libraries
2023-10-14 16:04:42,262:INFO:System:
2023-10-14 16:04:42,262:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2023-10-14 16:04:42,262:INFO:executable: c:\Users\manue\AppData\Local\Programs\Python\Python310\python.exe
2023-10-14 16:04:42,262:INFO:   machine: Windows-10-10.0.22621-SP0
2023-10-14 16:04:42,262:INFO:PyCaret required dependencies:
2023-10-14 16:04:42,262:INFO:                 pip: 22.2.1
2023-10-14 16:04:42,262:INFO:          setuptools: 63.2.0
2023-10-14 16:04:42,262:INFO:             pycaret: 3.1.0
2023-10-14 16:04:42,262:INFO:             IPython: 8.4.0
2023-10-14 16:04:42,262:INFO:          ipywidgets: 8.1.1
2023-10-14 16:04:42,262:INFO:                tqdm: 4.66.1
2023-10-14 16:04:42,262:INFO:               numpy: 1.23.2
2023-10-14 16:04:42,262:INFO:              pandas: 1.4.3
2023-10-14 16:04:42,262:INFO:              jinja2: 3.1.2
2023-10-14 16:04:42,262:INFO:               scipy: 1.10.1
2023-10-14 16:04:42,262:INFO:              joblib: 1.2.0
2023-10-14 16:04:42,262:INFO:             sklearn: 1.1.2
2023-10-14 16:04:42,262:INFO:                pyod: 1.1.0
2023-10-14 16:04:42,262:INFO:            imblearn: 0.11.0
2023-10-14 16:04:42,262:INFO:   category_encoders: 2.6.2
2023-10-14 16:04:42,262:INFO:            lightgbm: 4.1.0
2023-10-14 16:04:42,262:INFO:               numba: 0.58.0
2023-10-14 16:04:42,262:INFO:            requests: 2.28.1
2023-10-14 16:04:42,262:INFO:          matplotlib: 3.6.0
2023-10-14 16:04:42,262:INFO:          scikitplot: 0.3.7
2023-10-14 16:04:42,262:INFO:         yellowbrick: 1.5
2023-10-14 16:04:42,262:INFO:              plotly: 5.17.0
2023-10-14 16:04:42,262:INFO:    plotly-resampler: Not installed
2023-10-14 16:04:42,262:INFO:             kaleido: 0.2.1
2023-10-14 16:04:42,262:INFO:           schemdraw: 0.15
2023-10-14 16:04:42,262:INFO:         statsmodels: 0.13.2
2023-10-14 16:04:42,262:INFO:              sktime: 0.21.1
2023-10-14 16:04:42,262:INFO:               tbats: 1.1.3
2023-10-14 16:04:42,262:INFO:            pmdarima: 2.0.3
2023-10-14 16:04:42,262:INFO:              psutil: 5.9.1
2023-10-14 16:04:42,262:INFO:          markupsafe: 2.1.1
2023-10-14 16:04:42,263:INFO:             pickle5: Not installed
2023-10-14 16:04:42,263:INFO:         cloudpickle: 2.2.1
2023-10-14 16:04:42,263:INFO:         deprecation: 2.1.0
2023-10-14 16:04:42,263:INFO:              xxhash: 3.4.1
2023-10-14 16:04:42,263:INFO:           wurlitzer: Not installed
2023-10-14 16:04:42,263:INFO:PyCaret optional dependencies:
2023-10-14 16:04:42,263:INFO:                shap: Not installed
2023-10-14 16:04:42,263:INFO:           interpret: Not installed
2023-10-14 16:04:42,263:INFO:                umap: Not installed
2023-10-14 16:04:42,263:INFO:     ydata_profiling: Not installed
2023-10-14 16:04:42,263:INFO:  explainerdashboard: Not installed
2023-10-14 16:04:42,263:INFO:             autoviz: Not installed
2023-10-14 16:04:42,263:INFO:           fairlearn: Not installed
2023-10-14 16:04:42,263:INFO:          deepchecks: Not installed
2023-10-14 16:04:42,263:INFO:             xgboost: 2.0.0
2023-10-14 16:04:42,263:INFO:            catboost: Not installed
2023-10-14 16:04:42,263:INFO:              kmodes: Not installed
2023-10-14 16:04:42,263:INFO:             mlxtend: Not installed
2023-10-14 16:04:42,263:INFO:       statsforecast: Not installed
2023-10-14 16:04:42,263:INFO:        tune_sklearn: Not installed
2023-10-14 16:04:42,263:INFO:                 ray: Not installed
2023-10-14 16:04:42,263:INFO:            hyperopt: Not installed
2023-10-14 16:04:42,263:INFO:              optuna: Not installed
2023-10-14 16:04:42,263:INFO:               skopt: Not installed
2023-10-14 16:04:42,263:INFO:              mlflow: Not installed
2023-10-14 16:04:42,263:INFO:              gradio: Not installed
2023-10-14 16:04:42,263:INFO:             fastapi: Not installed
2023-10-14 16:04:42,264:INFO:             uvicorn: Not installed
2023-10-14 16:04:42,264:INFO:              m2cgen: Not installed
2023-10-14 16:04:42,264:INFO:           evidently: Not installed
2023-10-14 16:04:42,264:INFO:               fugue: Not installed
2023-10-14 16:04:42,264:INFO:           streamlit: Not installed
2023-10-14 16:04:42,264:INFO:             prophet: Not installed
2023-10-14 16:04:42,264:INFO:None
2023-10-14 16:04:42,264:INFO:Set up data.
2023-10-14 16:04:42,270:INFO:Set up folding strategy.
2023-10-14 16:04:42,270:INFO:Set up train/test split.
2023-10-14 16:04:42,270:INFO:Set up data.
2023-10-14 16:04:42,275:INFO:Set up index.
2023-10-14 16:04:42,275:INFO:Assigning column types.
2023-10-14 16:04:42,279:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-10-14 16:04:42,279:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,284:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,288:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,337:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,374:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,375:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 16:04:42,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 16:04:42,379:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,383:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,388:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,436:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,474:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,474:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 16:04:42,477:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 16:04:42,477:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-10-14 16:04:42,481:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,485:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,535:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,577:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,578:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 16:04:42,583:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 16:04:42,590:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,599:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,654:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,690:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,690:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 16:04:42,692:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 16:04:42,692:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-10-14 16:04:42,700:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,749:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,786:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,787:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 16:04:42,789:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 16:04:42,796:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,845:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,882:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,882:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 16:04:42,884:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 16:04:42,885:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-10-14 16:04:42,939:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,977:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-14 16:04:42,977:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 16:04:42,979:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 16:04:43,035:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-14 16:04:43,074:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-14 16:04:43,075:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 16:04:43,077:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 16:04:43,078:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-10-14 16:04:43,135:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-14 16:04:43,173:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 16:04:43,174:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 16:04:43,232:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-14 16:04:43,269:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 16:04:43,272:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 16:04:43,272:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-10-14 16:04:43,365:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 16:04:43,367:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 16:04:43,458:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 16:04:43,461:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 16:04:43,462:INFO:Preparing preprocessing pipeline...
2023-10-14 16:04:43,462:INFO:Set up simple imputation.
2023-10-14 16:04:43,465:INFO:Set up encoding of categorical features.
2023-10-14 16:04:43,530:INFO:Finished creating preprocessing pipeline.
2023-10-14 16:04:43,535:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\manue\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'Series', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['month', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['month', 'day'],
                                    transformer=OneHotEncoder(cols=['month',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2023-10-14 16:04:43,535:INFO:Creating final display dataframe.
2023-10-14 16:04:43,683:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            demand
2                   Target type        Regression
3           Original data shape         (6006, 6)
4        Transformed data shape        (6006, 23)
5   Transformed train set shape        (5506, 23)
6    Transformed test set shape         (500, 23)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator   TimeSeriesSplit
16                  Fold Number                 3
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              e8cf
2023-10-14 16:04:43,775:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 16:04:43,778:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 16:04:43,873:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-14 16:04:43,875:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-14 16:04:43,876:INFO:setup() successfully completed in 1.62s...............
2023-10-14 16:04:45,578:INFO:Initializing compare_models()
2023-10-14 16:04:45,578:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-10-14 16:04:45,579:INFO:Checking exceptions
2023-10-14 16:04:45,582:INFO:Preparing display monitor
2023-10-14 16:04:45,623:INFO:Initializing Linear Regression
2023-10-14 16:04:45,624:INFO:Total runtime is 1.7940998077392578e-05 minutes
2023-10-14 16:04:45,629:INFO:SubProcess create_model() called ==================================
2023-10-14 16:04:45,630:INFO:Initializing create_model()
2023-10-14 16:04:45,630:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=lr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFEF2C93F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:04:45,630:INFO:Checking exceptions
2023-10-14 16:04:45,630:INFO:Importing libraries
2023-10-14 16:04:45,631:INFO:Copying training dataset
2023-10-14 16:04:45,638:INFO:Defining folds
2023-10-14 16:04:45,638:INFO:Declaring metric variables
2023-10-14 16:04:45,644:INFO:Importing untrained model
2023-10-14 16:04:45,649:INFO:Linear Regression Imported successfully
2023-10-14 16:04:45,658:INFO:Starting cross validation
2023-10-14 16:04:45,660:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:04:54,380:INFO:Calculating mean and std
2023-10-14 16:04:54,385:INFO:Creating metrics dataframe
2023-10-14 16:04:54,393:INFO:Uploading results into container
2023-10-14 16:04:54,395:INFO:Uploading model into container now
2023-10-14 16:04:54,396:INFO:_master_model_container: 1
2023-10-14 16:04:54,397:INFO:_display_container: 2
2023-10-14 16:04:54,398:INFO:LinearRegression(n_jobs=-1)
2023-10-14 16:04:54,398:INFO:create_model() successfully completed......................................
2023-10-14 16:04:54,643:INFO:SubProcess create_model() end ==================================
2023-10-14 16:04:54,643:INFO:Creating metrics dataframe
2023-10-14 16:04:54,649:INFO:Initializing Lasso Regression
2023-10-14 16:04:54,649:INFO:Total runtime is 0.15043491919835408 minutes
2023-10-14 16:04:54,651:INFO:SubProcess create_model() called ==================================
2023-10-14 16:04:54,651:INFO:Initializing create_model()
2023-10-14 16:04:54,651:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=lasso, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFEF2C93F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:04:54,651:INFO:Checking exceptions
2023-10-14 16:04:54,653:INFO:Importing libraries
2023-10-14 16:04:54,653:INFO:Copying training dataset
2023-10-14 16:04:54,658:INFO:Defining folds
2023-10-14 16:04:54,658:INFO:Declaring metric variables
2023-10-14 16:04:54,662:INFO:Importing untrained model
2023-10-14 16:04:54,666:INFO:Lasso Regression Imported successfully
2023-10-14 16:04:54,674:INFO:Starting cross validation
2023-10-14 16:04:54,675:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:04:56,488:INFO:Calculating mean and std
2023-10-14 16:04:56,491:INFO:Creating metrics dataframe
2023-10-14 16:04:56,499:INFO:Uploading results into container
2023-10-14 16:04:56,500:INFO:Uploading model into container now
2023-10-14 16:04:56,501:INFO:_master_model_container: 2
2023-10-14 16:04:56,501:INFO:_display_container: 2
2023-10-14 16:04:56,502:INFO:Lasso(random_state=123)
2023-10-14 16:04:56,502:INFO:create_model() successfully completed......................................
2023-10-14 16:04:56,697:INFO:SubProcess create_model() end ==================================
2023-10-14 16:04:56,697:INFO:Creating metrics dataframe
2023-10-14 16:04:56,705:INFO:Initializing Ridge Regression
2023-10-14 16:04:56,705:INFO:Total runtime is 0.1847024917602539 minutes
2023-10-14 16:04:56,708:INFO:SubProcess create_model() called ==================================
2023-10-14 16:04:56,709:INFO:Initializing create_model()
2023-10-14 16:04:56,709:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=ridge, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFEF2C93F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:04:56,709:INFO:Checking exceptions
2023-10-14 16:04:56,709:INFO:Importing libraries
2023-10-14 16:04:56,710:INFO:Copying training dataset
2023-10-14 16:04:56,716:INFO:Defining folds
2023-10-14 16:04:56,716:INFO:Declaring metric variables
2023-10-14 16:04:56,720:INFO:Importing untrained model
2023-10-14 16:04:56,726:INFO:Ridge Regression Imported successfully
2023-10-14 16:04:56,733:INFO:Starting cross validation
2023-10-14 16:04:56,735:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:04:58,606:INFO:Calculating mean and std
2023-10-14 16:04:58,609:INFO:Creating metrics dataframe
2023-10-14 16:04:58,616:INFO:Uploading results into container
2023-10-14 16:04:58,617:INFO:Uploading model into container now
2023-10-14 16:04:58,617:INFO:_master_model_container: 3
2023-10-14 16:04:58,617:INFO:_display_container: 2
2023-10-14 16:04:58,618:INFO:Ridge(random_state=123)
2023-10-14 16:04:58,618:INFO:create_model() successfully completed......................................
2023-10-14 16:04:58,841:INFO:SubProcess create_model() end ==================================
2023-10-14 16:04:58,841:INFO:Creating metrics dataframe
2023-10-14 16:04:58,849:INFO:Initializing Elastic Net
2023-10-14 16:04:58,850:INFO:Total runtime is 0.22044442494710287 minutes
2023-10-14 16:04:58,855:INFO:SubProcess create_model() called ==================================
2023-10-14 16:04:58,856:INFO:Initializing create_model()
2023-10-14 16:04:58,856:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=en, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFEF2C93F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:04:58,856:INFO:Checking exceptions
2023-10-14 16:04:58,857:INFO:Importing libraries
2023-10-14 16:04:58,857:INFO:Copying training dataset
2023-10-14 16:04:58,862:INFO:Defining folds
2023-10-14 16:04:58,862:INFO:Declaring metric variables
2023-10-14 16:04:58,864:INFO:Importing untrained model
2023-10-14 16:04:58,867:INFO:Elastic Net Imported successfully
2023-10-14 16:04:58,875:INFO:Starting cross validation
2023-10-14 16:04:58,877:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:04:58,971:INFO:Calculating mean and std
2023-10-14 16:04:58,973:INFO:Creating metrics dataframe
2023-10-14 16:04:58,977:INFO:Uploading results into container
2023-10-14 16:04:58,977:INFO:Uploading model into container now
2023-10-14 16:04:58,977:INFO:_master_model_container: 4
2023-10-14 16:04:58,977:INFO:_display_container: 2
2023-10-14 16:04:58,978:INFO:ElasticNet(random_state=123)
2023-10-14 16:04:58,978:INFO:create_model() successfully completed......................................
2023-10-14 16:04:59,127:INFO:SubProcess create_model() end ==================================
2023-10-14 16:04:59,127:INFO:Creating metrics dataframe
2023-10-14 16:04:59,136:INFO:Initializing Least Angle Regression
2023-10-14 16:04:59,136:INFO:Total runtime is 0.22521491448084513 minutes
2023-10-14 16:04:59,140:INFO:SubProcess create_model() called ==================================
2023-10-14 16:04:59,140:INFO:Initializing create_model()
2023-10-14 16:04:59,140:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=lar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFEF2C93F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:04:59,141:INFO:Checking exceptions
2023-10-14 16:04:59,141:INFO:Importing libraries
2023-10-14 16:04:59,141:INFO:Copying training dataset
2023-10-14 16:04:59,145:INFO:Defining folds
2023-10-14 16:04:59,146:INFO:Declaring metric variables
2023-10-14 16:04:59,149:INFO:Importing untrained model
2023-10-14 16:04:59,152:INFO:Least Angle Regression Imported successfully
2023-10-14 16:04:59,158:INFO:Starting cross validation
2023-10-14 16:04:59,159:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:04:59,251:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-14 16:04:59,253:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-14 16:04:59,271:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 23 iterations, i.e. alpha=1.736e-03, with an active set of 20 regressors, and the smallest cholesky pivot element being 5.960e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-14 16:04:59,294:INFO:Calculating mean and std
2023-10-14 16:04:59,295:INFO:Creating metrics dataframe
2023-10-14 16:04:59,297:INFO:Uploading results into container
2023-10-14 16:04:59,298:INFO:Uploading model into container now
2023-10-14 16:04:59,298:INFO:_master_model_container: 5
2023-10-14 16:04:59,298:INFO:_display_container: 2
2023-10-14 16:04:59,299:INFO:Lars(random_state=123)
2023-10-14 16:04:59,299:INFO:create_model() successfully completed......................................
2023-10-14 16:04:59,448:INFO:SubProcess create_model() end ==================================
2023-10-14 16:04:59,448:INFO:Creating metrics dataframe
2023-10-14 16:04:59,456:INFO:Initializing Lasso Least Angle Regression
2023-10-14 16:04:59,456:INFO:Total runtime is 0.23054303328196207 minutes
2023-10-14 16:04:59,459:INFO:SubProcess create_model() called ==================================
2023-10-14 16:04:59,460:INFO:Initializing create_model()
2023-10-14 16:04:59,460:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=llar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFEF2C93F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:04:59,460:INFO:Checking exceptions
2023-10-14 16:04:59,460:INFO:Importing libraries
2023-10-14 16:04:59,460:INFO:Copying training dataset
2023-10-14 16:04:59,465:INFO:Defining folds
2023-10-14 16:04:59,465:INFO:Declaring metric variables
2023-10-14 16:04:59,468:INFO:Importing untrained model
2023-10-14 16:04:59,473:INFO:Lasso Least Angle Regression Imported successfully
2023-10-14 16:04:59,480:INFO:Starting cross validation
2023-10-14 16:04:59,481:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:04:59,533:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-14 16:04:59,539:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-14 16:04:59,552:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-14 16:04:59,570:INFO:Calculating mean and std
2023-10-14 16:04:59,572:INFO:Creating metrics dataframe
2023-10-14 16:04:59,575:INFO:Uploading results into container
2023-10-14 16:04:59,576:INFO:Uploading model into container now
2023-10-14 16:04:59,576:INFO:_master_model_container: 6
2023-10-14 16:04:59,576:INFO:_display_container: 2
2023-10-14 16:04:59,577:INFO:LassoLars(random_state=123)
2023-10-14 16:04:59,577:INFO:create_model() successfully completed......................................
2023-10-14 16:04:59,726:INFO:SubProcess create_model() end ==================================
2023-10-14 16:04:59,726:INFO:Creating metrics dataframe
2023-10-14 16:04:59,735:INFO:Initializing Orthogonal Matching Pursuit
2023-10-14 16:04:59,735:INFO:Total runtime is 0.23520137866338095 minutes
2023-10-14 16:04:59,739:INFO:SubProcess create_model() called ==================================
2023-10-14 16:04:59,739:INFO:Initializing create_model()
2023-10-14 16:04:59,739:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=omp, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFEF2C93F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:04:59,740:INFO:Checking exceptions
2023-10-14 16:04:59,740:INFO:Importing libraries
2023-10-14 16:04:59,740:INFO:Copying training dataset
2023-10-14 16:04:59,746:INFO:Defining folds
2023-10-14 16:04:59,746:INFO:Declaring metric variables
2023-10-14 16:04:59,748:INFO:Importing untrained model
2023-10-14 16:04:59,752:INFO:Orthogonal Matching Pursuit Imported successfully
2023-10-14 16:04:59,758:INFO:Starting cross validation
2023-10-14 16:04:59,760:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:04:59,813:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-14 16:04:59,815:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-14 16:04:59,829:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-14 16:04:59,850:INFO:Calculating mean and std
2023-10-14 16:04:59,851:INFO:Creating metrics dataframe
2023-10-14 16:04:59,854:INFO:Uploading results into container
2023-10-14 16:04:59,854:INFO:Uploading model into container now
2023-10-14 16:04:59,855:INFO:_master_model_container: 7
2023-10-14 16:04:59,855:INFO:_display_container: 2
2023-10-14 16:04:59,855:INFO:OrthogonalMatchingPursuit()
2023-10-14 16:04:59,855:INFO:create_model() successfully completed......................................
2023-10-14 16:05:00,002:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:00,002:INFO:Creating metrics dataframe
2023-10-14 16:05:00,015:INFO:Initializing Bayesian Ridge
2023-10-14 16:05:00,015:INFO:Total runtime is 0.23986813624699913 minutes
2023-10-14 16:05:00,020:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:00,020:INFO:Initializing create_model()
2023-10-14 16:05:00,020:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=br, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFEF2C93F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:00,020:INFO:Checking exceptions
2023-10-14 16:05:00,020:INFO:Importing libraries
2023-10-14 16:05:00,020:INFO:Copying training dataset
2023-10-14 16:05:00,029:INFO:Defining folds
2023-10-14 16:05:00,029:INFO:Declaring metric variables
2023-10-14 16:05:00,031:INFO:Importing untrained model
2023-10-14 16:05:00,036:INFO:Bayesian Ridge Imported successfully
2023-10-14 16:05:00,044:INFO:Starting cross validation
2023-10-14 16:05:00,045:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:00,132:INFO:Calculating mean and std
2023-10-14 16:05:00,133:INFO:Creating metrics dataframe
2023-10-14 16:05:00,136:INFO:Uploading results into container
2023-10-14 16:05:00,136:INFO:Uploading model into container now
2023-10-14 16:05:00,136:INFO:_master_model_container: 8
2023-10-14 16:05:00,137:INFO:_display_container: 2
2023-10-14 16:05:00,137:INFO:BayesianRidge()
2023-10-14 16:05:00,137:INFO:create_model() successfully completed......................................
2023-10-14 16:05:00,283:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:00,284:INFO:Creating metrics dataframe
2023-10-14 16:05:00,293:INFO:Initializing Passive Aggressive Regressor
2023-10-14 16:05:00,293:INFO:Total runtime is 0.24449683030446373 minutes
2023-10-14 16:05:00,297:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:00,298:INFO:Initializing create_model()
2023-10-14 16:05:00,298:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=par, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFEF2C93F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:00,298:INFO:Checking exceptions
2023-10-14 16:05:00,298:INFO:Importing libraries
2023-10-14 16:05:00,298:INFO:Copying training dataset
2023-10-14 16:05:00,304:INFO:Defining folds
2023-10-14 16:05:00,304:INFO:Declaring metric variables
2023-10-14 16:05:00,308:INFO:Importing untrained model
2023-10-14 16:05:00,311:INFO:Passive Aggressive Regressor Imported successfully
2023-10-14 16:05:00,316:INFO:Starting cross validation
2023-10-14 16:05:00,318:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:00,422:INFO:Calculating mean and std
2023-10-14 16:05:00,423:INFO:Creating metrics dataframe
2023-10-14 16:05:00,426:INFO:Uploading results into container
2023-10-14 16:05:00,427:INFO:Uploading model into container now
2023-10-14 16:05:00,427:INFO:_master_model_container: 9
2023-10-14 16:05:00,427:INFO:_display_container: 2
2023-10-14 16:05:00,427:INFO:PassiveAggressiveRegressor(random_state=123)
2023-10-14 16:05:00,427:INFO:create_model() successfully completed......................................
2023-10-14 16:05:00,576:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:00,576:INFO:Creating metrics dataframe
2023-10-14 16:05:00,587:INFO:Initializing Huber Regressor
2023-10-14 16:05:00,587:INFO:Total runtime is 0.24939458370208742 minutes
2023-10-14 16:05:00,592:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:00,592:INFO:Initializing create_model()
2023-10-14 16:05:00,592:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=huber, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFEF2C93F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:00,592:INFO:Checking exceptions
2023-10-14 16:05:00,592:INFO:Importing libraries
2023-10-14 16:05:00,592:INFO:Copying training dataset
2023-10-14 16:05:00,596:INFO:Defining folds
2023-10-14 16:05:00,597:INFO:Declaring metric variables
2023-10-14 16:05:00,601:INFO:Importing untrained model
2023-10-14 16:05:00,605:INFO:Huber Regressor Imported successfully
2023-10-14 16:05:00,612:INFO:Starting cross validation
2023-10-14 16:05:00,612:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:00,705:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-10-14 16:05:00,714:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-10-14 16:05:00,721:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-10-14 16:05:00,741:INFO:Calculating mean and std
2023-10-14 16:05:00,743:INFO:Creating metrics dataframe
2023-10-14 16:05:00,746:INFO:Uploading results into container
2023-10-14 16:05:00,746:INFO:Uploading model into container now
2023-10-14 16:05:00,746:INFO:_master_model_container: 10
2023-10-14 16:05:00,746:INFO:_display_container: 2
2023-10-14 16:05:00,747:INFO:HuberRegressor()
2023-10-14 16:05:00,747:INFO:create_model() successfully completed......................................
2023-10-14 16:05:00,896:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:00,896:INFO:Creating metrics dataframe
2023-10-14 16:05:00,906:INFO:Initializing K Neighbors Regressor
2023-10-14 16:05:00,906:INFO:Total runtime is 0.2547199924786886 minutes
2023-10-14 16:05:00,909:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:00,910:INFO:Initializing create_model()
2023-10-14 16:05:00,910:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=knn, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFEF2C93F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:00,910:INFO:Checking exceptions
2023-10-14 16:05:00,910:INFO:Importing libraries
2023-10-14 16:05:00,910:INFO:Copying training dataset
2023-10-14 16:05:00,915:INFO:Defining folds
2023-10-14 16:05:00,915:INFO:Declaring metric variables
2023-10-14 16:05:00,919:INFO:Importing untrained model
2023-10-14 16:05:00,925:INFO:K Neighbors Regressor Imported successfully
2023-10-14 16:05:00,930:INFO:Starting cross validation
2023-10-14 16:05:00,931:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:01,105:INFO:Calculating mean and std
2023-10-14 16:05:01,106:INFO:Creating metrics dataframe
2023-10-14 16:05:01,109:INFO:Uploading results into container
2023-10-14 16:05:01,109:INFO:Uploading model into container now
2023-10-14 16:05:01,109:INFO:_master_model_container: 11
2023-10-14 16:05:01,109:INFO:_display_container: 2
2023-10-14 16:05:01,110:INFO:KNeighborsRegressor(n_jobs=-1)
2023-10-14 16:05:01,110:INFO:create_model() successfully completed......................................
2023-10-14 16:05:01,266:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:01,266:INFO:Creating metrics dataframe
2023-10-14 16:05:01,280:INFO:Initializing Decision Tree Regressor
2023-10-14 16:05:01,280:INFO:Total runtime is 0.2609464486440023 minutes
2023-10-14 16:05:01,283:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:01,283:INFO:Initializing create_model()
2023-10-14 16:05:01,283:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=dt, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFEF2C93F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:01,283:INFO:Checking exceptions
2023-10-14 16:05:01,283:INFO:Importing libraries
2023-10-14 16:05:01,283:INFO:Copying training dataset
2023-10-14 16:05:01,290:INFO:Defining folds
2023-10-14 16:05:01,290:INFO:Declaring metric variables
2023-10-14 16:05:01,293:INFO:Importing untrained model
2023-10-14 16:05:01,297:INFO:Decision Tree Regressor Imported successfully
2023-10-14 16:05:01,304:INFO:Starting cross validation
2023-10-14 16:05:01,306:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:01,421:INFO:Calculating mean and std
2023-10-14 16:05:01,423:INFO:Creating metrics dataframe
2023-10-14 16:05:01,426:INFO:Uploading results into container
2023-10-14 16:05:01,426:INFO:Uploading model into container now
2023-10-14 16:05:01,427:INFO:_master_model_container: 12
2023-10-14 16:05:01,427:INFO:_display_container: 2
2023-10-14 16:05:01,427:INFO:DecisionTreeRegressor(random_state=123)
2023-10-14 16:05:01,427:INFO:create_model() successfully completed......................................
2023-10-14 16:05:01,578:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:01,578:INFO:Creating metrics dataframe
2023-10-14 16:05:01,589:INFO:Initializing Random Forest Regressor
2023-10-14 16:05:01,590:INFO:Total runtime is 0.266110368569692 minutes
2023-10-14 16:05:01,593:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:01,594:INFO:Initializing create_model()
2023-10-14 16:05:01,594:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=rf, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFEF2C93F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:01,594:INFO:Checking exceptions
2023-10-14 16:05:01,594:INFO:Importing libraries
2023-10-14 16:05:01,594:INFO:Copying training dataset
2023-10-14 16:05:01,599:INFO:Defining folds
2023-10-14 16:05:01,600:INFO:Declaring metric variables
2023-10-14 16:05:01,604:INFO:Importing untrained model
2023-10-14 16:05:01,609:INFO:Random Forest Regressor Imported successfully
2023-10-14 16:05:01,628:INFO:Starting cross validation
2023-10-14 16:05:01,630:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:02,256:INFO:Calculating mean and std
2023-10-14 16:05:02,258:INFO:Creating metrics dataframe
2023-10-14 16:05:02,260:INFO:Uploading results into container
2023-10-14 16:05:02,261:INFO:Uploading model into container now
2023-10-14 16:05:02,261:INFO:_master_model_container: 13
2023-10-14 16:05:02,261:INFO:_display_container: 2
2023-10-14 16:05:02,262:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-10-14 16:05:02,262:INFO:create_model() successfully completed......................................
2023-10-14 16:05:02,414:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:02,415:INFO:Creating metrics dataframe
2023-10-14 16:05:02,426:INFO:Initializing Extra Trees Regressor
2023-10-14 16:05:02,426:INFO:Total runtime is 0.28004002571105957 minutes
2023-10-14 16:05:02,429:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:02,429:INFO:Initializing create_model()
2023-10-14 16:05:02,429:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=et, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFEF2C93F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:02,429:INFO:Checking exceptions
2023-10-14 16:05:02,430:INFO:Importing libraries
2023-10-14 16:05:02,430:INFO:Copying training dataset
2023-10-14 16:05:02,434:INFO:Defining folds
2023-10-14 16:05:02,434:INFO:Declaring metric variables
2023-10-14 16:05:02,438:INFO:Importing untrained model
2023-10-14 16:05:02,443:INFO:Extra Trees Regressor Imported successfully
2023-10-14 16:05:02,450:INFO:Starting cross validation
2023-10-14 16:05:02,451:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:03,028:INFO:Calculating mean and std
2023-10-14 16:05:03,029:INFO:Creating metrics dataframe
2023-10-14 16:05:03,031:INFO:Uploading results into container
2023-10-14 16:05:03,033:INFO:Uploading model into container now
2023-10-14 16:05:03,033:INFO:_master_model_container: 14
2023-10-14 16:05:03,033:INFO:_display_container: 2
2023-10-14 16:05:03,034:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-10-14 16:05:03,034:INFO:create_model() successfully completed......................................
2023-10-14 16:05:03,190:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:03,190:INFO:Creating metrics dataframe
2023-10-14 16:05:03,199:INFO:Initializing AdaBoost Regressor
2023-10-14 16:05:03,199:INFO:Total runtime is 0.29293705622355143 minutes
2023-10-14 16:05:03,201:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:03,201:INFO:Initializing create_model()
2023-10-14 16:05:03,201:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=ada, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFEF2C93F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:03,201:INFO:Checking exceptions
2023-10-14 16:05:03,203:INFO:Importing libraries
2023-10-14 16:05:03,203:INFO:Copying training dataset
2023-10-14 16:05:03,208:INFO:Defining folds
2023-10-14 16:05:03,208:INFO:Declaring metric variables
2023-10-14 16:05:03,211:INFO:Importing untrained model
2023-10-14 16:05:03,215:INFO:AdaBoost Regressor Imported successfully
2023-10-14 16:05:03,223:INFO:Starting cross validation
2023-10-14 16:05:03,224:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:03,479:INFO:Calculating mean and std
2023-10-14 16:05:03,480:INFO:Creating metrics dataframe
2023-10-14 16:05:03,483:INFO:Uploading results into container
2023-10-14 16:05:03,484:INFO:Uploading model into container now
2023-10-14 16:05:03,484:INFO:_master_model_container: 15
2023-10-14 16:05:03,484:INFO:_display_container: 2
2023-10-14 16:05:03,484:INFO:AdaBoostRegressor(random_state=123)
2023-10-14 16:05:03,484:INFO:create_model() successfully completed......................................
2023-10-14 16:05:03,635:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:03,635:INFO:Creating metrics dataframe
2023-10-14 16:05:03,647:INFO:Initializing Gradient Boosting Regressor
2023-10-14 16:05:03,647:INFO:Total runtime is 0.3004001537958781 minutes
2023-10-14 16:05:03,650:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:03,650:INFO:Initializing create_model()
2023-10-14 16:05:03,650:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=gbr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFEF2C93F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:03,650:INFO:Checking exceptions
2023-10-14 16:05:03,651:INFO:Importing libraries
2023-10-14 16:05:03,651:INFO:Copying training dataset
2023-10-14 16:05:03,655:INFO:Defining folds
2023-10-14 16:05:03,656:INFO:Declaring metric variables
2023-10-14 16:05:03,659:INFO:Importing untrained model
2023-10-14 16:05:03,663:INFO:Gradient Boosting Regressor Imported successfully
2023-10-14 16:05:03,669:INFO:Starting cross validation
2023-10-14 16:05:03,671:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:04,041:INFO:Calculating mean and std
2023-10-14 16:05:04,042:INFO:Creating metrics dataframe
2023-10-14 16:05:04,045:INFO:Uploading results into container
2023-10-14 16:05:04,045:INFO:Uploading model into container now
2023-10-14 16:05:04,045:INFO:_master_model_container: 16
2023-10-14 16:05:04,045:INFO:_display_container: 2
2023-10-14 16:05:04,046:INFO:GradientBoostingRegressor(random_state=123)
2023-10-14 16:05:04,046:INFO:create_model() successfully completed......................................
2023-10-14 16:05:04,196:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:04,196:INFO:Creating metrics dataframe
2023-10-14 16:05:04,206:INFO:Initializing Extreme Gradient Boosting
2023-10-14 16:05:04,206:INFO:Total runtime is 0.3097074031829834 minutes
2023-10-14 16:05:04,208:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:04,209:INFO:Initializing create_model()
2023-10-14 16:05:04,209:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=xgboost, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFEF2C93F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:04,209:INFO:Checking exceptions
2023-10-14 16:05:04,209:INFO:Importing libraries
2023-10-14 16:05:04,209:INFO:Copying training dataset
2023-10-14 16:05:04,214:INFO:Defining folds
2023-10-14 16:05:04,214:INFO:Declaring metric variables
2023-10-14 16:05:04,217:INFO:Importing untrained model
2023-10-14 16:05:04,221:INFO:Extreme Gradient Boosting Imported successfully
2023-10-14 16:05:04,229:INFO:Starting cross validation
2023-10-14 16:05:04,230:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:04,515:INFO:Calculating mean and std
2023-10-14 16:05:04,516:INFO:Creating metrics dataframe
2023-10-14 16:05:04,519:INFO:Uploading results into container
2023-10-14 16:05:04,520:INFO:Uploading model into container now
2023-10-14 16:05:04,521:INFO:_master_model_container: 17
2023-10-14 16:05:04,521:INFO:_display_container: 2
2023-10-14 16:05:04,521:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=123, ...)
2023-10-14 16:05:04,521:INFO:create_model() successfully completed......................................
2023-10-14 16:05:04,674:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:04,674:INFO:Creating metrics dataframe
2023-10-14 16:05:04,685:INFO:Initializing Light Gradient Boosting Machine
2023-10-14 16:05:04,685:INFO:Total runtime is 0.3176877776781718 minutes
2023-10-14 16:05:04,689:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:04,689:INFO:Initializing create_model()
2023-10-14 16:05:04,689:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=lightgbm, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFEF2C93F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:04,689:INFO:Checking exceptions
2023-10-14 16:05:04,689:INFO:Importing libraries
2023-10-14 16:05:04,690:INFO:Copying training dataset
2023-10-14 16:05:04,694:INFO:Defining folds
2023-10-14 16:05:04,695:INFO:Declaring metric variables
2023-10-14 16:05:04,697:INFO:Importing untrained model
2023-10-14 16:05:04,702:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-14 16:05:04,710:INFO:Starting cross validation
2023-10-14 16:05:04,711:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:05,004:INFO:Calculating mean and std
2023-10-14 16:05:05,006:INFO:Creating metrics dataframe
2023-10-14 16:05:05,011:INFO:Uploading results into container
2023-10-14 16:05:05,011:INFO:Uploading model into container now
2023-10-14 16:05:05,012:INFO:_master_model_container: 18
2023-10-14 16:05:05,012:INFO:_display_container: 2
2023-10-14 16:05:05,013:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2023-10-14 16:05:05,013:INFO:create_model() successfully completed......................................
2023-10-14 16:05:05,183:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:05,183:INFO:Creating metrics dataframe
2023-10-14 16:05:05,194:INFO:Initializing Dummy Regressor
2023-10-14 16:05:05,194:INFO:Total runtime is 0.32618279854456583 minutes
2023-10-14 16:05:05,196:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:05,196:INFO:Initializing create_model()
2023-10-14 16:05:05,196:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=dummy, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFEF2C93F0>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:05,197:INFO:Checking exceptions
2023-10-14 16:05:05,197:INFO:Importing libraries
2023-10-14 16:05:05,197:INFO:Copying training dataset
2023-10-14 16:05:05,203:INFO:Defining folds
2023-10-14 16:05:05,203:INFO:Declaring metric variables
2023-10-14 16:05:05,205:INFO:Importing untrained model
2023-10-14 16:05:05,209:INFO:Dummy Regressor Imported successfully
2023-10-14 16:05:05,215:INFO:Starting cross validation
2023-10-14 16:05:05,217:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:05,309:INFO:Calculating mean and std
2023-10-14 16:05:05,310:INFO:Creating metrics dataframe
2023-10-14 16:05:05,312:INFO:Uploading results into container
2023-10-14 16:05:05,313:INFO:Uploading model into container now
2023-10-14 16:05:05,313:INFO:_master_model_container: 19
2023-10-14 16:05:05,313:INFO:_display_container: 2
2023-10-14 16:05:05,313:INFO:DummyRegressor()
2023-10-14 16:05:05,313:INFO:create_model() successfully completed......................................
2023-10-14 16:05:05,465:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:05,465:INFO:Creating metrics dataframe
2023-10-14 16:05:05,486:INFO:Initializing create_model()
2023-10-14 16:05:05,487:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=GradientBoostingRegressor(random_state=123), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:05,487:INFO:Checking exceptions
2023-10-14 16:05:05,490:INFO:Importing libraries
2023-10-14 16:05:05,490:INFO:Copying training dataset
2023-10-14 16:05:05,493:INFO:Defining folds
2023-10-14 16:05:05,493:INFO:Declaring metric variables
2023-10-14 16:05:05,493:INFO:Importing untrained model
2023-10-14 16:05:05,493:INFO:Declaring custom model
2023-10-14 16:05:05,493:INFO:Gradient Boosting Regressor Imported successfully
2023-10-14 16:05:05,494:INFO:Cross validation set to False
2023-10-14 16:05:05,494:INFO:Fitting Model
2023-10-14 16:05:05,893:INFO:GradientBoostingRegressor(random_state=123)
2023-10-14 16:05:05,893:INFO:create_model() successfully completed......................................
2023-10-14 16:05:06,077:INFO:_master_model_container: 19
2023-10-14 16:05:06,077:INFO:_display_container: 2
2023-10-14 16:05:06,077:INFO:GradientBoostingRegressor(random_state=123)
2023-10-14 16:05:06,077:INFO:compare_models() successfully completed......................................
2023-10-14 16:05:33,596:INFO:Initializing compare_models()
2023-10-14 16:05:33,596:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-10-14 16:05:33,596:INFO:Checking exceptions
2023-10-14 16:05:33,600:INFO:Preparing display monitor
2023-10-14 16:05:33,638:INFO:Initializing Linear Regression
2023-10-14 16:05:33,639:INFO:Total runtime is 0.0 minutes
2023-10-14 16:05:33,643:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:33,644:INFO:Initializing create_model()
2023-10-14 16:05:33,644:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=lr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFCEE17D30>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:33,644:INFO:Checking exceptions
2023-10-14 16:05:33,644:INFO:Importing libraries
2023-10-14 16:05:33,644:INFO:Copying training dataset
2023-10-14 16:05:33,649:INFO:Defining folds
2023-10-14 16:05:33,649:INFO:Declaring metric variables
2023-10-14 16:05:33,653:INFO:Importing untrained model
2023-10-14 16:05:33,657:INFO:Linear Regression Imported successfully
2023-10-14 16:05:33,666:INFO:Starting cross validation
2023-10-14 16:05:33,670:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:33,807:INFO:Calculating mean and std
2023-10-14 16:05:33,807:INFO:Creating metrics dataframe
2023-10-14 16:05:33,811:INFO:Uploading results into container
2023-10-14 16:05:33,812:INFO:Uploading model into container now
2023-10-14 16:05:33,812:INFO:_master_model_container: 20
2023-10-14 16:05:33,812:INFO:_display_container: 3
2023-10-14 16:05:33,812:INFO:LinearRegression(n_jobs=-1)
2023-10-14 16:05:33,812:INFO:create_model() successfully completed......................................
2023-10-14 16:05:34,003:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:34,003:INFO:Creating metrics dataframe
2023-10-14 16:05:34,010:INFO:Initializing Lasso Regression
2023-10-14 16:05:34,011:INFO:Total runtime is 0.00622409184773763 minutes
2023-10-14 16:05:34,013:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:34,014:INFO:Initializing create_model()
2023-10-14 16:05:34,014:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=lasso, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFCEE17D30>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:34,014:INFO:Checking exceptions
2023-10-14 16:05:34,014:INFO:Importing libraries
2023-10-14 16:05:34,014:INFO:Copying training dataset
2023-10-14 16:05:34,019:INFO:Defining folds
2023-10-14 16:05:34,019:INFO:Declaring metric variables
2023-10-14 16:05:34,022:INFO:Importing untrained model
2023-10-14 16:05:34,025:INFO:Lasso Regression Imported successfully
2023-10-14 16:05:34,031:INFO:Starting cross validation
2023-10-14 16:05:34,033:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:34,136:INFO:Calculating mean and std
2023-10-14 16:05:34,136:INFO:Creating metrics dataframe
2023-10-14 16:05:34,139:INFO:Uploading results into container
2023-10-14 16:05:34,139:INFO:Uploading model into container now
2023-10-14 16:05:34,139:INFO:_master_model_container: 21
2023-10-14 16:05:34,139:INFO:_display_container: 3
2023-10-14 16:05:34,140:INFO:Lasso(random_state=123)
2023-10-14 16:05:34,140:INFO:create_model() successfully completed......................................
2023-10-14 16:05:34,301:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:34,301:INFO:Creating metrics dataframe
2023-10-14 16:05:34,310:INFO:Initializing Ridge Regression
2023-10-14 16:05:34,310:INFO:Total runtime is 0.011204226811726888 minutes
2023-10-14 16:05:34,314:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:34,314:INFO:Initializing create_model()
2023-10-14 16:05:34,314:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=ridge, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFCEE17D30>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:34,314:INFO:Checking exceptions
2023-10-14 16:05:34,314:INFO:Importing libraries
2023-10-14 16:05:34,314:INFO:Copying training dataset
2023-10-14 16:05:34,317:INFO:Defining folds
2023-10-14 16:05:34,318:INFO:Declaring metric variables
2023-10-14 16:05:34,321:INFO:Importing untrained model
2023-10-14 16:05:34,323:INFO:Ridge Regression Imported successfully
2023-10-14 16:05:34,330:INFO:Starting cross validation
2023-10-14 16:05:34,332:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:34,426:INFO:Calculating mean and std
2023-10-14 16:05:34,427:INFO:Creating metrics dataframe
2023-10-14 16:05:34,429:INFO:Uploading results into container
2023-10-14 16:05:34,429:INFO:Uploading model into container now
2023-10-14 16:05:34,430:INFO:_master_model_container: 22
2023-10-14 16:05:34,430:INFO:_display_container: 3
2023-10-14 16:05:34,430:INFO:Ridge(random_state=123)
2023-10-14 16:05:34,430:INFO:create_model() successfully completed......................................
2023-10-14 16:05:34,582:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:34,582:INFO:Creating metrics dataframe
2023-10-14 16:05:34,590:INFO:Initializing Elastic Net
2023-10-14 16:05:34,590:INFO:Total runtime is 0.015869295597076415 minutes
2023-10-14 16:05:34,593:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:34,594:INFO:Initializing create_model()
2023-10-14 16:05:34,594:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=en, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFCEE17D30>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:34,594:INFO:Checking exceptions
2023-10-14 16:05:34,594:INFO:Importing libraries
2023-10-14 16:05:34,594:INFO:Copying training dataset
2023-10-14 16:05:34,598:INFO:Defining folds
2023-10-14 16:05:34,598:INFO:Declaring metric variables
2023-10-14 16:05:34,601:INFO:Importing untrained model
2023-10-14 16:05:34,603:INFO:Elastic Net Imported successfully
2023-10-14 16:05:34,610:INFO:Starting cross validation
2023-10-14 16:05:34,611:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:34,710:INFO:Calculating mean and std
2023-10-14 16:05:34,712:INFO:Creating metrics dataframe
2023-10-14 16:05:34,715:INFO:Uploading results into container
2023-10-14 16:05:34,715:INFO:Uploading model into container now
2023-10-14 16:05:34,715:INFO:_master_model_container: 23
2023-10-14 16:05:34,715:INFO:_display_container: 3
2023-10-14 16:05:34,717:INFO:ElasticNet(random_state=123)
2023-10-14 16:05:34,717:INFO:create_model() successfully completed......................................
2023-10-14 16:05:34,871:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:34,871:INFO:Creating metrics dataframe
2023-10-14 16:05:34,880:INFO:Initializing Least Angle Regression
2023-10-14 16:05:34,880:INFO:Total runtime is 0.02070659001668294 minutes
2023-10-14 16:05:34,883:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:34,883:INFO:Initializing create_model()
2023-10-14 16:05:34,883:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=lar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFCEE17D30>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:34,883:INFO:Checking exceptions
2023-10-14 16:05:34,883:INFO:Importing libraries
2023-10-14 16:05:34,883:INFO:Copying training dataset
2023-10-14 16:05:34,888:INFO:Defining folds
2023-10-14 16:05:34,889:INFO:Declaring metric variables
2023-10-14 16:05:34,891:INFO:Importing untrained model
2023-10-14 16:05:34,897:INFO:Least Angle Regression Imported successfully
2023-10-14 16:05:34,903:INFO:Starting cross validation
2023-10-14 16:05:34,905:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:34,957:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-14 16:05:34,977:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-14 16:05:34,980:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-14 16:05:34,985:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 23 iterations, i.e. alpha=1.736e-03, with an active set of 20 regressors, and the smallest cholesky pivot element being 5.960e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-14 16:05:35,005:INFO:Calculating mean and std
2023-10-14 16:05:35,008:INFO:Creating metrics dataframe
2023-10-14 16:05:35,011:INFO:Uploading results into container
2023-10-14 16:05:35,011:INFO:Uploading model into container now
2023-10-14 16:05:35,011:INFO:_master_model_container: 24
2023-10-14 16:05:35,012:INFO:_display_container: 3
2023-10-14 16:05:35,012:INFO:Lars(random_state=123)
2023-10-14 16:05:35,012:INFO:create_model() successfully completed......................................
2023-10-14 16:05:35,187:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:35,187:INFO:Creating metrics dataframe
2023-10-14 16:05:35,198:INFO:Initializing Lasso Least Angle Regression
2023-10-14 16:05:35,198:INFO:Total runtime is 0.02599900960922241 minutes
2023-10-14 16:05:35,201:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:35,201:INFO:Initializing create_model()
2023-10-14 16:05:35,202:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=llar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFCEE17D30>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:35,202:INFO:Checking exceptions
2023-10-14 16:05:35,202:INFO:Importing libraries
2023-10-14 16:05:35,202:INFO:Copying training dataset
2023-10-14 16:05:35,207:INFO:Defining folds
2023-10-14 16:05:35,208:INFO:Declaring metric variables
2023-10-14 16:05:35,213:INFO:Importing untrained model
2023-10-14 16:05:35,218:INFO:Lasso Least Angle Regression Imported successfully
2023-10-14 16:05:35,227:INFO:Starting cross validation
2023-10-14 16:05:35,229:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:35,292:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-14 16:05:35,300:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-14 16:05:35,317:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-14 16:05:35,337:INFO:Calculating mean and std
2023-10-14 16:05:35,338:INFO:Creating metrics dataframe
2023-10-14 16:05:35,340:INFO:Uploading results into container
2023-10-14 16:05:35,341:INFO:Uploading model into container now
2023-10-14 16:05:35,341:INFO:_master_model_container: 25
2023-10-14 16:05:35,341:INFO:_display_container: 3
2023-10-14 16:05:35,342:INFO:LassoLars(random_state=123)
2023-10-14 16:05:35,342:INFO:create_model() successfully completed......................................
2023-10-14 16:05:35,512:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:35,512:INFO:Creating metrics dataframe
2023-10-14 16:05:35,519:INFO:Initializing Orthogonal Matching Pursuit
2023-10-14 16:05:35,519:INFO:Total runtime is 0.031359569231669104 minutes
2023-10-14 16:05:35,523:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:35,523:INFO:Initializing create_model()
2023-10-14 16:05:35,523:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=omp, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFCEE17D30>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:35,523:INFO:Checking exceptions
2023-10-14 16:05:35,523:INFO:Importing libraries
2023-10-14 16:05:35,523:INFO:Copying training dataset
2023-10-14 16:05:35,531:INFO:Defining folds
2023-10-14 16:05:35,531:INFO:Declaring metric variables
2023-10-14 16:05:35,533:INFO:Importing untrained model
2023-10-14 16:05:35,538:INFO:Orthogonal Matching Pursuit Imported successfully
2023-10-14 16:05:35,547:INFO:Starting cross validation
2023-10-14 16:05:35,548:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:35,614:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-14 16:05:35,617:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-14 16:05:35,631:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-14 16:05:35,652:INFO:Calculating mean and std
2023-10-14 16:05:35,653:INFO:Creating metrics dataframe
2023-10-14 16:05:35,656:INFO:Uploading results into container
2023-10-14 16:05:35,657:INFO:Uploading model into container now
2023-10-14 16:05:35,657:INFO:_master_model_container: 26
2023-10-14 16:05:35,657:INFO:_display_container: 3
2023-10-14 16:05:35,658:INFO:OrthogonalMatchingPursuit()
2023-10-14 16:05:35,658:INFO:create_model() successfully completed......................................
2023-10-14 16:05:35,815:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:35,815:INFO:Creating metrics dataframe
2023-10-14 16:05:35,823:INFO:Initializing Bayesian Ridge
2023-10-14 16:05:35,823:INFO:Total runtime is 0.03641348282496134 minutes
2023-10-14 16:05:35,825:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:35,826:INFO:Initializing create_model()
2023-10-14 16:05:35,826:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=br, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFCEE17D30>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:35,826:INFO:Checking exceptions
2023-10-14 16:05:35,826:INFO:Importing libraries
2023-10-14 16:05:35,826:INFO:Copying training dataset
2023-10-14 16:05:35,832:INFO:Defining folds
2023-10-14 16:05:35,832:INFO:Declaring metric variables
2023-10-14 16:05:35,835:INFO:Importing untrained model
2023-10-14 16:05:35,840:INFO:Bayesian Ridge Imported successfully
2023-10-14 16:05:35,847:INFO:Starting cross validation
2023-10-14 16:05:35,849:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:35,984:INFO:Calculating mean and std
2023-10-14 16:05:35,985:INFO:Creating metrics dataframe
2023-10-14 16:05:35,987:INFO:Uploading results into container
2023-10-14 16:05:35,987:INFO:Uploading model into container now
2023-10-14 16:05:35,988:INFO:_master_model_container: 27
2023-10-14 16:05:35,988:INFO:_display_container: 3
2023-10-14 16:05:35,988:INFO:BayesianRidge()
2023-10-14 16:05:35,988:INFO:create_model() successfully completed......................................
2023-10-14 16:05:36,158:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:36,159:INFO:Creating metrics dataframe
2023-10-14 16:05:36,170:INFO:Initializing Passive Aggressive Regressor
2023-10-14 16:05:36,170:INFO:Total runtime is 0.042208202679951984 minutes
2023-10-14 16:05:36,173:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:36,173:INFO:Initializing create_model()
2023-10-14 16:05:36,173:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=par, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFCEE17D30>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:36,174:INFO:Checking exceptions
2023-10-14 16:05:36,174:INFO:Importing libraries
2023-10-14 16:05:36,174:INFO:Copying training dataset
2023-10-14 16:05:36,180:INFO:Defining folds
2023-10-14 16:05:36,180:INFO:Declaring metric variables
2023-10-14 16:05:36,183:INFO:Importing untrained model
2023-10-14 16:05:36,188:INFO:Passive Aggressive Regressor Imported successfully
2023-10-14 16:05:36,195:INFO:Starting cross validation
2023-10-14 16:05:36,198:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:36,312:INFO:Calculating mean and std
2023-10-14 16:05:36,313:INFO:Creating metrics dataframe
2023-10-14 16:05:36,315:INFO:Uploading results into container
2023-10-14 16:05:36,317:INFO:Uploading model into container now
2023-10-14 16:05:36,317:INFO:_master_model_container: 28
2023-10-14 16:05:36,317:INFO:_display_container: 3
2023-10-14 16:05:36,317:INFO:PassiveAggressiveRegressor(random_state=123)
2023-10-14 16:05:36,317:INFO:create_model() successfully completed......................................
2023-10-14 16:05:36,470:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:36,470:INFO:Creating metrics dataframe
2023-10-14 16:05:36,481:INFO:Initializing Huber Regressor
2023-10-14 16:05:36,481:INFO:Total runtime is 0.047391164302825924 minutes
2023-10-14 16:05:36,484:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:36,484:INFO:Initializing create_model()
2023-10-14 16:05:36,484:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=huber, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFCEE17D30>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:36,484:INFO:Checking exceptions
2023-10-14 16:05:36,484:INFO:Importing libraries
2023-10-14 16:05:36,485:INFO:Copying training dataset
2023-10-14 16:05:36,489:INFO:Defining folds
2023-10-14 16:05:36,489:INFO:Declaring metric variables
2023-10-14 16:05:36,494:INFO:Importing untrained model
2023-10-14 16:05:36,497:INFO:Huber Regressor Imported successfully
2023-10-14 16:05:36,504:INFO:Starting cross validation
2023-10-14 16:05:36,505:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:36,593:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-10-14 16:05:36,613:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-10-14 16:05:36,633:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-10-14 16:05:36,651:INFO:Calculating mean and std
2023-10-14 16:05:36,652:INFO:Creating metrics dataframe
2023-10-14 16:05:36,654:INFO:Uploading results into container
2023-10-14 16:05:36,654:INFO:Uploading model into container now
2023-10-14 16:05:36,655:INFO:_master_model_container: 29
2023-10-14 16:05:36,655:INFO:_display_container: 3
2023-10-14 16:05:36,655:INFO:HuberRegressor()
2023-10-14 16:05:36,655:INFO:create_model() successfully completed......................................
2023-10-14 16:05:36,806:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:36,806:INFO:Creating metrics dataframe
2023-10-14 16:05:36,815:INFO:Initializing K Neighbors Regressor
2023-10-14 16:05:36,815:INFO:Total runtime is 0.05295776526133219 minutes
2023-10-14 16:05:36,819:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:36,819:INFO:Initializing create_model()
2023-10-14 16:05:36,819:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=knn, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFCEE17D30>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:36,819:INFO:Checking exceptions
2023-10-14 16:05:36,819:INFO:Importing libraries
2023-10-14 16:05:36,819:INFO:Copying training dataset
2023-10-14 16:05:36,825:INFO:Defining folds
2023-10-14 16:05:36,825:INFO:Declaring metric variables
2023-10-14 16:05:36,830:INFO:Importing untrained model
2023-10-14 16:05:36,833:INFO:K Neighbors Regressor Imported successfully
2023-10-14 16:05:36,839:INFO:Starting cross validation
2023-10-14 16:05:36,842:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:37,020:INFO:Calculating mean and std
2023-10-14 16:05:37,021:INFO:Creating metrics dataframe
2023-10-14 16:05:37,023:INFO:Uploading results into container
2023-10-14 16:05:37,023:INFO:Uploading model into container now
2023-10-14 16:05:37,023:INFO:_master_model_container: 30
2023-10-14 16:05:37,024:INFO:_display_container: 3
2023-10-14 16:05:37,024:INFO:KNeighborsRegressor(n_jobs=-1)
2023-10-14 16:05:37,024:INFO:create_model() successfully completed......................................
2023-10-14 16:05:37,175:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:37,176:INFO:Creating metrics dataframe
2023-10-14 16:05:37,186:INFO:Initializing Decision Tree Regressor
2023-10-14 16:05:37,186:INFO:Total runtime is 0.05913293361663818 minutes
2023-10-14 16:05:37,190:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:37,190:INFO:Initializing create_model()
2023-10-14 16:05:37,190:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=dt, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFCEE17D30>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:37,190:INFO:Checking exceptions
2023-10-14 16:05:37,190:INFO:Importing libraries
2023-10-14 16:05:37,190:INFO:Copying training dataset
2023-10-14 16:05:37,197:INFO:Defining folds
2023-10-14 16:05:37,197:INFO:Declaring metric variables
2023-10-14 16:05:37,201:INFO:Importing untrained model
2023-10-14 16:05:37,205:INFO:Decision Tree Regressor Imported successfully
2023-10-14 16:05:37,214:INFO:Starting cross validation
2023-10-14 16:05:37,216:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:37,353:INFO:Calculating mean and std
2023-10-14 16:05:37,355:INFO:Creating metrics dataframe
2023-10-14 16:05:37,357:INFO:Uploading results into container
2023-10-14 16:05:37,357:INFO:Uploading model into container now
2023-10-14 16:05:37,359:INFO:_master_model_container: 31
2023-10-14 16:05:37,359:INFO:_display_container: 3
2023-10-14 16:05:37,360:INFO:DecisionTreeRegressor(random_state=123)
2023-10-14 16:05:37,360:INFO:create_model() successfully completed......................................
2023-10-14 16:05:37,523:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:37,523:INFO:Creating metrics dataframe
2023-10-14 16:05:37,531:INFO:Initializing Random Forest Regressor
2023-10-14 16:05:37,531:INFO:Total runtime is 0.06489526033401488 minutes
2023-10-14 16:05:37,534:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:37,534:INFO:Initializing create_model()
2023-10-14 16:05:37,534:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=rf, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFCEE17D30>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:37,534:INFO:Checking exceptions
2023-10-14 16:05:37,534:INFO:Importing libraries
2023-10-14 16:05:37,534:INFO:Copying training dataset
2023-10-14 16:05:37,561:INFO:Defining folds
2023-10-14 16:05:37,562:INFO:Declaring metric variables
2023-10-14 16:05:37,568:INFO:Importing untrained model
2023-10-14 16:05:37,573:INFO:Random Forest Regressor Imported successfully
2023-10-14 16:05:37,583:INFO:Starting cross validation
2023-10-14 16:05:37,584:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:38,198:INFO:Calculating mean and std
2023-10-14 16:05:38,200:INFO:Creating metrics dataframe
2023-10-14 16:05:38,202:INFO:Uploading results into container
2023-10-14 16:05:38,203:INFO:Uploading model into container now
2023-10-14 16:05:38,203:INFO:_master_model_container: 32
2023-10-14 16:05:38,203:INFO:_display_container: 3
2023-10-14 16:05:38,204:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-10-14 16:05:38,204:INFO:create_model() successfully completed......................................
2023-10-14 16:05:38,354:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:38,354:INFO:Creating metrics dataframe
2023-10-14 16:05:38,364:INFO:Initializing Extra Trees Regressor
2023-10-14 16:05:38,364:INFO:Total runtime is 0.07877057790756224 minutes
2023-10-14 16:05:38,366:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:38,367:INFO:Initializing create_model()
2023-10-14 16:05:38,367:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=et, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFCEE17D30>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:38,367:INFO:Checking exceptions
2023-10-14 16:05:38,367:INFO:Importing libraries
2023-10-14 16:05:38,367:INFO:Copying training dataset
2023-10-14 16:05:38,372:INFO:Defining folds
2023-10-14 16:05:38,372:INFO:Declaring metric variables
2023-10-14 16:05:38,375:INFO:Importing untrained model
2023-10-14 16:05:38,379:INFO:Extra Trees Regressor Imported successfully
2023-10-14 16:05:38,387:INFO:Starting cross validation
2023-10-14 16:05:38,389:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:38,939:INFO:Calculating mean and std
2023-10-14 16:05:38,940:INFO:Creating metrics dataframe
2023-10-14 16:05:38,944:INFO:Uploading results into container
2023-10-14 16:05:38,944:INFO:Uploading model into container now
2023-10-14 16:05:38,944:INFO:_master_model_container: 33
2023-10-14 16:05:38,944:INFO:_display_container: 3
2023-10-14 16:05:38,944:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-10-14 16:05:38,944:INFO:create_model() successfully completed......................................
2023-10-14 16:05:39,101:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:39,101:INFO:Creating metrics dataframe
2023-10-14 16:05:39,111:INFO:Initializing AdaBoost Regressor
2023-10-14 16:05:39,111:INFO:Total runtime is 0.09121406873067218 minutes
2023-10-14 16:05:39,113:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:39,113:INFO:Initializing create_model()
2023-10-14 16:05:39,113:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=ada, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFCEE17D30>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:39,113:INFO:Checking exceptions
2023-10-14 16:05:39,114:INFO:Importing libraries
2023-10-14 16:05:39,114:INFO:Copying training dataset
2023-10-14 16:05:39,118:INFO:Defining folds
2023-10-14 16:05:39,118:INFO:Declaring metric variables
2023-10-14 16:05:39,121:INFO:Importing untrained model
2023-10-14 16:05:39,125:INFO:AdaBoost Regressor Imported successfully
2023-10-14 16:05:39,133:INFO:Starting cross validation
2023-10-14 16:05:39,135:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:39,390:INFO:Calculating mean and std
2023-10-14 16:05:39,393:INFO:Creating metrics dataframe
2023-10-14 16:05:39,395:INFO:Uploading results into container
2023-10-14 16:05:39,396:INFO:Uploading model into container now
2023-10-14 16:05:39,396:INFO:_master_model_container: 34
2023-10-14 16:05:39,396:INFO:_display_container: 3
2023-10-14 16:05:39,396:INFO:AdaBoostRegressor(random_state=123)
2023-10-14 16:05:39,396:INFO:create_model() successfully completed......................................
2023-10-14 16:05:39,546:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:39,546:INFO:Creating metrics dataframe
2023-10-14 16:05:39,555:INFO:Initializing Gradient Boosting Regressor
2023-10-14 16:05:39,555:INFO:Total runtime is 0.09862668514251707 minutes
2023-10-14 16:05:39,560:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:39,561:INFO:Initializing create_model()
2023-10-14 16:05:39,561:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=gbr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFCEE17D30>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:39,561:INFO:Checking exceptions
2023-10-14 16:05:39,561:INFO:Importing libraries
2023-10-14 16:05:39,561:INFO:Copying training dataset
2023-10-14 16:05:39,565:INFO:Defining folds
2023-10-14 16:05:39,566:INFO:Declaring metric variables
2023-10-14 16:05:39,569:INFO:Importing untrained model
2023-10-14 16:05:39,573:INFO:Gradient Boosting Regressor Imported successfully
2023-10-14 16:05:39,579:INFO:Starting cross validation
2023-10-14 16:05:39,581:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:39,948:INFO:Calculating mean and std
2023-10-14 16:05:39,950:INFO:Creating metrics dataframe
2023-10-14 16:05:39,952:INFO:Uploading results into container
2023-10-14 16:05:39,952:INFO:Uploading model into container now
2023-10-14 16:05:39,952:INFO:_master_model_container: 35
2023-10-14 16:05:39,953:INFO:_display_container: 3
2023-10-14 16:05:39,953:INFO:GradientBoostingRegressor(random_state=123)
2023-10-14 16:05:39,953:INFO:create_model() successfully completed......................................
2023-10-14 16:05:40,100:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:40,100:INFO:Creating metrics dataframe
2023-10-14 16:05:40,112:INFO:Initializing Extreme Gradient Boosting
2023-10-14 16:05:40,112:INFO:Total runtime is 0.10790820519129433 minutes
2023-10-14 16:05:40,115:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:40,115:INFO:Initializing create_model()
2023-10-14 16:05:40,115:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=xgboost, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFCEE17D30>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:40,115:INFO:Checking exceptions
2023-10-14 16:05:40,115:INFO:Importing libraries
2023-10-14 16:05:40,115:INFO:Copying training dataset
2023-10-14 16:05:40,120:INFO:Defining folds
2023-10-14 16:05:40,121:INFO:Declaring metric variables
2023-10-14 16:05:40,124:INFO:Importing untrained model
2023-10-14 16:05:40,130:INFO:Extreme Gradient Boosting Imported successfully
2023-10-14 16:05:40,136:INFO:Starting cross validation
2023-10-14 16:05:40,136:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:40,367:INFO:Calculating mean and std
2023-10-14 16:05:40,369:INFO:Creating metrics dataframe
2023-10-14 16:05:40,372:INFO:Uploading results into container
2023-10-14 16:05:40,373:INFO:Uploading model into container now
2023-10-14 16:05:40,373:INFO:_master_model_container: 36
2023-10-14 16:05:40,373:INFO:_display_container: 3
2023-10-14 16:05:40,375:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=123, ...)
2023-10-14 16:05:40,375:INFO:create_model() successfully completed......................................
2023-10-14 16:05:40,549:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:40,549:INFO:Creating metrics dataframe
2023-10-14 16:05:40,558:INFO:Initializing Light Gradient Boosting Machine
2023-10-14 16:05:40,558:INFO:Total runtime is 0.11533941030502318 minutes
2023-10-14 16:05:40,561:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:40,562:INFO:Initializing create_model()
2023-10-14 16:05:40,562:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=lightgbm, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFCEE17D30>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:40,562:INFO:Checking exceptions
2023-10-14 16:05:40,562:INFO:Importing libraries
2023-10-14 16:05:40,562:INFO:Copying training dataset
2023-10-14 16:05:40,567:INFO:Defining folds
2023-10-14 16:05:40,567:INFO:Declaring metric variables
2023-10-14 16:05:40,570:INFO:Importing untrained model
2023-10-14 16:05:40,574:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-14 16:05:40,582:INFO:Starting cross validation
2023-10-14 16:05:40,583:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:40,891:INFO:Calculating mean and std
2023-10-14 16:05:40,893:INFO:Creating metrics dataframe
2023-10-14 16:05:40,897:INFO:Uploading results into container
2023-10-14 16:05:40,898:INFO:Uploading model into container now
2023-10-14 16:05:40,899:INFO:_master_model_container: 37
2023-10-14 16:05:40,899:INFO:_display_container: 3
2023-10-14 16:05:40,900:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2023-10-14 16:05:40,900:INFO:create_model() successfully completed......................................
2023-10-14 16:05:41,121:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:41,121:INFO:Creating metrics dataframe
2023-10-14 16:05:41,134:INFO:Initializing Dummy Regressor
2023-10-14 16:05:41,135:INFO:Total runtime is 0.12495438257853189 minutes
2023-10-14 16:05:41,137:INFO:SubProcess create_model() called ==================================
2023-10-14 16:05:41,137:INFO:Initializing create_model()
2023-10-14 16:05:41,137:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=dummy, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFCEE17D30>, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:41,137:INFO:Checking exceptions
2023-10-14 16:05:41,137:INFO:Importing libraries
2023-10-14 16:05:41,137:INFO:Copying training dataset
2023-10-14 16:05:41,144:INFO:Defining folds
2023-10-14 16:05:41,144:INFO:Declaring metric variables
2023-10-14 16:05:41,147:INFO:Importing untrained model
2023-10-14 16:05:41,151:INFO:Dummy Regressor Imported successfully
2023-10-14 16:05:41,160:INFO:Starting cross validation
2023-10-14 16:05:41,161:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-14 16:05:41,264:INFO:Calculating mean and std
2023-10-14 16:05:41,266:INFO:Creating metrics dataframe
2023-10-14 16:05:41,268:INFO:Uploading results into container
2023-10-14 16:05:41,268:INFO:Uploading model into container now
2023-10-14 16:05:41,268:INFO:_master_model_container: 38
2023-10-14 16:05:41,269:INFO:_display_container: 3
2023-10-14 16:05:41,269:INFO:DummyRegressor()
2023-10-14 16:05:41,269:INFO:create_model() successfully completed......................................
2023-10-14 16:05:41,417:INFO:SubProcess create_model() end ==================================
2023-10-14 16:05:41,417:INFO:Creating metrics dataframe
2023-10-14 16:05:41,439:INFO:Initializing create_model()
2023-10-14 16:05:41,439:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=GradientBoostingRegressor(random_state=123), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-14 16:05:41,440:INFO:Checking exceptions
2023-10-14 16:05:41,443:INFO:Importing libraries
2023-10-14 16:05:41,443:INFO:Copying training dataset
2023-10-14 16:05:41,446:INFO:Defining folds
2023-10-14 16:05:41,446:INFO:Declaring metric variables
2023-10-14 16:05:41,446:INFO:Importing untrained model
2023-10-14 16:05:41,446:INFO:Declaring custom model
2023-10-14 16:05:41,447:INFO:Gradient Boosting Regressor Imported successfully
2023-10-14 16:05:41,448:INFO:Cross validation set to False
2023-10-14 16:05:41,449:INFO:Fitting Model
2023-10-14 16:05:41,851:INFO:GradientBoostingRegressor(random_state=123)
2023-10-14 16:05:41,851:INFO:create_model() successfully completed......................................
2023-10-14 16:05:42,037:INFO:_master_model_container: 38
2023-10-14 16:05:42,037:INFO:_display_container: 3
2023-10-14 16:05:42,037:INFO:GradientBoostingRegressor(random_state=123)
2023-10-14 16:05:42,037:INFO:compare_models() successfully completed......................................
2023-10-14 16:05:57,680:INFO:Initializing predict_model()
2023-10-14 16:05:57,680:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=GradientBoostingRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FFEC0B9AB0>)
2023-10-14 16:05:57,680:INFO:Checking exceptions
2023-10-14 16:05:57,680:INFO:Preloading libraries
2023-10-14 16:06:03,727:INFO:Initializing predict_model()
2023-10-14 16:06:03,727:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=GradientBoostingRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FFEC457C70>)
2023-10-14 16:06:03,727:INFO:Checking exceptions
2023-10-14 16:06:03,727:INFO:Preloading libraries
2023-10-14 16:06:13,115:INFO:Initializing predict_model()
2023-10-14 16:06:13,115:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FFF06B7730>, estimator=GradientBoostingRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FFEC457C70>)
2023-10-14 16:06:13,115:INFO:Checking exceptions
2023-10-14 16:06:13,115:INFO:Preloading libraries
2023-10-14 16:06:13,117:INFO:Set up data.
2023-10-14 16:06:13,123:INFO:Set up index.
2023-10-14 17:08:52,876:WARNING:C:\Users\manue\AppData\Local\Temp\ipykernel_1612\1041142005.py:7: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy


2023-10-14 20:35:33,882:WARNING:C:\Users\manue\AppData\Local\Temp\ipykernel_1612\59473513.py:13: FutureWarning:

reindexing with a non-unique Index is deprecated and will raise in a future version.


2023-10-14 20:38:39,191:WARNING:C:\Users\manue\AppData\Local\Temp\ipykernel_1612\973162004.py:1: UserWarning:

Pandas doesn't allow columns to be created via a new attribute name - see https://pandas.pydata.org/pandas-docs/stable/indexing.html#attribute-access


2023-10-15 22:36:55,826:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-15 22:36:55,827:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-15 22:36:55,827:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-15 22:36:55,827:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-15 22:36:55,933:INFO:PyCaret RegressionExperiment
2023-10-15 22:36:55,933:INFO:Logging name: reg-default-name
2023-10-15 22:36:55,934:INFO:ML Usecase: MLUsecase.REGRESSION
2023-10-15 22:36:55,934:INFO:version 3.1.0
2023-10-15 22:36:55,934:INFO:Initializing setup()
2023-10-15 22:36:55,934:INFO:self.USI: 2eb3
2023-10-15 22:36:55,934:INFO:self._variable_keys: {'y_train', 'USI', 'gpu_n_jobs_param', 'fold_shuffle_param', 'idx', 'y', 'X_test', 'n_jobs_param', '_ml_usecase', 'memory', 'fold_generator', 'transform_target_param', 'data', 'y_test', 'exp_id', 'target_param', 'fold_groups_param', 'pipeline', 'seed', 'logging_param', 'X', 'log_plots_param', '_available_plots', 'exp_name_log', 'X_train', 'html_param', 'gpu_param'}
2023-10-15 22:36:55,934:INFO:Checking environment
2023-10-15 22:36:55,934:INFO:python_version: 3.10.6
2023-10-15 22:36:55,934:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2023-10-15 22:36:55,934:INFO:machine: AMD64
2023-10-15 22:36:55,934:INFO:platform: Windows-10-10.0.22621-SP0
2023-10-15 22:36:55,934:INFO:Memory: svmem(total=8273383424, available=1587118080, percent=80.8, used=6686265344, free=1587118080)
2023-10-15 22:36:55,934:INFO:Physical Core: 4
2023-10-15 22:36:55,934:INFO:Logical Core: 8
2023-10-15 22:36:55,934:INFO:Checking libraries
2023-10-15 22:36:55,934:INFO:System:
2023-10-15 22:36:55,934:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2023-10-15 22:36:55,936:INFO:executable: c:\Users\manue\AppData\Local\Programs\Python\Python310\python.exe
2023-10-15 22:36:55,936:INFO:   machine: Windows-10-10.0.22621-SP0
2023-10-15 22:36:55,936:INFO:PyCaret required dependencies:
2023-10-15 22:36:56,006:INFO:                 pip: 22.2.1
2023-10-15 22:36:56,008:INFO:          setuptools: 63.2.0
2023-10-15 22:36:56,008:INFO:             pycaret: 3.1.0
2023-10-15 22:36:56,008:INFO:             IPython: 8.4.0
2023-10-15 22:36:56,008:INFO:          ipywidgets: 8.1.1
2023-10-15 22:36:56,008:INFO:                tqdm: 4.66.1
2023-10-15 22:36:56,008:INFO:               numpy: 1.23.2
2023-10-15 22:36:56,008:INFO:              pandas: 1.4.3
2023-10-15 22:36:56,008:INFO:              jinja2: 3.1.2
2023-10-15 22:36:56,008:INFO:               scipy: 1.10.1
2023-10-15 22:36:56,008:INFO:              joblib: 1.2.0
2023-10-15 22:36:56,008:INFO:             sklearn: 1.1.2
2023-10-15 22:36:56,008:INFO:                pyod: 1.1.0
2023-10-15 22:36:56,008:INFO:            imblearn: 0.11.0
2023-10-15 22:36:56,008:INFO:   category_encoders: 2.6.2
2023-10-15 22:36:56,008:INFO:            lightgbm: 4.1.0
2023-10-15 22:36:56,008:INFO:               numba: 0.58.0
2023-10-15 22:36:56,008:INFO:            requests: 2.28.1
2023-10-15 22:36:56,008:INFO:          matplotlib: 3.6.0
2023-10-15 22:36:56,008:INFO:          scikitplot: 0.3.7
2023-10-15 22:36:56,008:INFO:         yellowbrick: 1.5
2023-10-15 22:36:56,008:INFO:              plotly: 5.17.0
2023-10-15 22:36:56,008:INFO:    plotly-resampler: Not installed
2023-10-15 22:36:56,008:INFO:             kaleido: 0.2.1
2023-10-15 22:36:56,008:INFO:           schemdraw: 0.15
2023-10-15 22:36:56,008:INFO:         statsmodels: 0.13.2
2023-10-15 22:36:56,008:INFO:              sktime: 0.21.1
2023-10-15 22:36:56,008:INFO:               tbats: 1.1.3
2023-10-15 22:36:56,008:INFO:            pmdarima: 2.0.3
2023-10-15 22:36:56,008:INFO:              psutil: 5.9.1
2023-10-15 22:36:56,008:INFO:          markupsafe: 2.1.1
2023-10-15 22:36:56,008:INFO:             pickle5: Not installed
2023-10-15 22:36:56,008:INFO:         cloudpickle: 2.2.1
2023-10-15 22:36:56,008:INFO:         deprecation: 2.1.0
2023-10-15 22:36:56,008:INFO:              xxhash: 3.4.1
2023-10-15 22:36:56,008:INFO:           wurlitzer: Not installed
2023-10-15 22:36:56,009:INFO:PyCaret optional dependencies:
2023-10-15 22:36:56,116:INFO:                shap: Not installed
2023-10-15 22:36:56,116:INFO:           interpret: Not installed
2023-10-15 22:36:56,116:INFO:                umap: Not installed
2023-10-15 22:36:56,116:INFO:     ydata_profiling: Not installed
2023-10-15 22:36:56,116:INFO:  explainerdashboard: Not installed
2023-10-15 22:36:56,116:INFO:             autoviz: Not installed
2023-10-15 22:36:56,116:INFO:           fairlearn: Not installed
2023-10-15 22:36:56,116:INFO:          deepchecks: Not installed
2023-10-15 22:36:56,116:INFO:             xgboost: 2.0.0
2023-10-15 22:36:56,116:INFO:            catboost: Not installed
2023-10-15 22:36:56,116:INFO:              kmodes: Not installed
2023-10-15 22:36:56,116:INFO:             mlxtend: Not installed
2023-10-15 22:36:56,116:INFO:       statsforecast: Not installed
2023-10-15 22:36:56,116:INFO:        tune_sklearn: Not installed
2023-10-15 22:36:56,116:INFO:                 ray: Not installed
2023-10-15 22:36:56,116:INFO:            hyperopt: Not installed
2023-10-15 22:36:56,116:INFO:              optuna: Not installed
2023-10-15 22:36:56,117:INFO:               skopt: Not installed
2023-10-15 22:36:56,117:INFO:              mlflow: Not installed
2023-10-15 22:36:56,117:INFO:              gradio: Not installed
2023-10-15 22:36:56,117:INFO:             fastapi: Not installed
2023-10-15 22:36:56,117:INFO:             uvicorn: Not installed
2023-10-15 22:36:56,117:INFO:              m2cgen: Not installed
2023-10-15 22:36:56,117:INFO:           evidently: Not installed
2023-10-15 22:36:56,117:INFO:               fugue: Not installed
2023-10-15 22:36:56,117:INFO:           streamlit: Not installed
2023-10-15 22:36:56,117:INFO:             prophet: 1.1.5
2023-10-15 22:36:56,117:INFO:None
2023-10-15 22:36:56,117:INFO:Set up data.
2023-10-15 22:36:56,124:INFO:Set up folding strategy.
2023-10-15 22:36:56,124:INFO:Set up train/test split.
2023-10-15 22:36:56,124:INFO:Set up data.
2023-10-15 22:36:56,128:INFO:Set up index.
2023-10-15 22:36:56,128:INFO:Assigning column types.
2023-10-15 22:36:56,132:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-10-15 22:36:56,132:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,136:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,140:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,191:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,227:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,380:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:36:56,382:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:36:56,383:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,386:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,391:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,441:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,477:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,478:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:36:56,480:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:36:56,480:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-10-15 22:36:56,484:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,488:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,535:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,573:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,574:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:36:56,576:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:36:56,579:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,583:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,631:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,668:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,668:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:36:56,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:36:56,672:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-10-15 22:36:56,679:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,727:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,763:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,764:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:36:56,768:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:36:56,776:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,824:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,861:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,861:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:36:56,864:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:36:56,864:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-10-15 22:36:56,923:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,961:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-15 22:36:56,961:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:36:56,963:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:36:57,020:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-15 22:36:57,057:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-15 22:36:57,058:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:36:57,060:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:36:57,060:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-10-15 22:36:57,117:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-15 22:36:57,155:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:36:57,156:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:36:57,212:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-15 22:36:57,250:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:36:57,252:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:36:57,252:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-10-15 22:36:57,344:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:36:57,347:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:36:57,439:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:36:57,441:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:36:57,442:INFO:Preparing preprocessing pipeline...
2023-10-15 22:36:57,442:INFO:Set up simple imputation.
2023-10-15 22:36:57,448:INFO:Set up encoding of ordinal features.
2023-10-15 22:36:57,450:INFO:Set up encoding of categorical features.
2023-10-15 22:36:57,537:INFO:Finished creating preprocessing pipeline.
2023-10-15 22:36:57,562:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\manue\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'Series', 'day_of_year',
                                             'dolar_oficial', 'temperature_C'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['month', 'day_of_week',
                                             'is_working'],
                                    transformer=SimpleImputer(strategy='...
                 TransformerWrapper(include=['is_working'],
                                    transformer=OrdinalEncoder(cols=['is_working'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'is_working',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['month', 'day_of_week'],
                                    transformer=OneHotEncoder(cols=['month',
                                                                    'day_of_week'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2023-10-15 22:36:57,562:INFO:Creating final display dataframe.
2023-10-15 22:36:57,761:INFO:Setup _display_container:                     Description             Value
0                    Session id              1234
1                        Target        demand_GWh
2                   Target type        Regression
3           Original data shape         (6006, 9)
4        Transformed data shape        (6006, 26)
5   Transformed train set shape        (5506, 26)
6    Transformed test set shape         (500, 26)
7              Ordinal features                 1
8              Numeric features                 5
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   TimeSeriesSplit
17                  Fold Number                 3
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              2eb3
2023-10-15 22:36:57,854:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:36:57,857:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:36:57,954:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:36:57,958:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:36:57,959:INFO:setup() successfully completed in 2.03s...............
2023-10-15 22:37:00,574:INFO:Initializing compare_models()
2023-10-15 22:37:00,574:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-10-15 22:37:00,574:INFO:Checking exceptions
2023-10-15 22:37:00,578:INFO:Preparing display monitor
2023-10-15 22:37:00,622:INFO:Initializing Linear Regression
2023-10-15 22:37:00,622:INFO:Total runtime is 0.0 minutes
2023-10-15 22:37:00,625:INFO:SubProcess create_model() called ==================================
2023-10-15 22:37:00,625:INFO:Initializing create_model()
2023-10-15 22:37:00,626:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=lr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BE812020>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:37:00,626:INFO:Checking exceptions
2023-10-15 22:37:00,626:INFO:Importing libraries
2023-10-15 22:37:00,626:INFO:Copying training dataset
2023-10-15 22:37:00,633:INFO:Defining folds
2023-10-15 22:37:00,633:INFO:Declaring metric variables
2023-10-15 22:37:00,638:INFO:Importing untrained model
2023-10-15 22:37:00,642:INFO:Linear Regression Imported successfully
2023-10-15 22:37:00,654:INFO:Starting cross validation
2023-10-15 22:37:00,664:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-15 22:37:04,929:INFO:Calculating mean and std
2023-10-15 22:37:04,931:INFO:Creating metrics dataframe
2023-10-15 22:37:04,938:INFO:Uploading results into container
2023-10-15 22:37:04,940:INFO:Uploading model into container now
2023-10-15 22:37:04,940:INFO:_master_model_container: 1
2023-10-15 22:37:04,940:INFO:_display_container: 2
2023-10-15 22:37:04,941:INFO:LinearRegression(n_jobs=-1)
2023-10-15 22:37:04,941:INFO:create_model() successfully completed......................................
2023-10-15 22:37:05,093:INFO:SubProcess create_model() end ==================================
2023-10-15 22:37:05,093:INFO:Creating metrics dataframe
2023-10-15 22:37:05,099:INFO:Initializing Lasso Regression
2023-10-15 22:37:05,099:INFO:Total runtime is 0.07462034225463868 minutes
2023-10-15 22:37:05,104:INFO:SubProcess create_model() called ==================================
2023-10-15 22:37:05,104:INFO:Initializing create_model()
2023-10-15 22:37:05,104:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=lasso, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BE812020>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:37:05,104:INFO:Checking exceptions
2023-10-15 22:37:05,104:INFO:Importing libraries
2023-10-15 22:37:05,104:INFO:Copying training dataset
2023-10-15 22:37:05,110:INFO:Defining folds
2023-10-15 22:37:05,111:INFO:Declaring metric variables
2023-10-15 22:37:05,113:INFO:Importing untrained model
2023-10-15 22:37:05,117:INFO:Lasso Regression Imported successfully
2023-10-15 22:37:05,125:INFO:Starting cross validation
2023-10-15 22:37:05,127:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-15 22:37:07,173:INFO:Calculating mean and std
2023-10-15 22:37:07,175:INFO:Creating metrics dataframe
2023-10-15 22:37:07,179:INFO:Uploading results into container
2023-10-15 22:37:07,180:INFO:Uploading model into container now
2023-10-15 22:37:07,181:INFO:_master_model_container: 2
2023-10-15 22:37:07,181:INFO:_display_container: 2
2023-10-15 22:37:07,181:INFO:Lasso(random_state=1234)
2023-10-15 22:37:07,181:INFO:create_model() successfully completed......................................
2023-10-15 22:37:07,340:INFO:SubProcess create_model() end ==================================
2023-10-15 22:37:07,340:INFO:Creating metrics dataframe
2023-10-15 22:37:07,348:INFO:Initializing Ridge Regression
2023-10-15 22:37:07,348:INFO:Total runtime is 0.11210116147994996 minutes
2023-10-15 22:37:07,351:INFO:SubProcess create_model() called ==================================
2023-10-15 22:37:07,352:INFO:Initializing create_model()
2023-10-15 22:37:07,352:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=ridge, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BE812020>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:37:07,352:INFO:Checking exceptions
2023-10-15 22:37:07,352:INFO:Importing libraries
2023-10-15 22:37:07,352:INFO:Copying training dataset
2023-10-15 22:37:07,358:INFO:Defining folds
2023-10-15 22:37:07,359:INFO:Declaring metric variables
2023-10-15 22:37:07,361:INFO:Importing untrained model
2023-10-15 22:37:07,365:INFO:Ridge Regression Imported successfully
2023-10-15 22:37:07,372:INFO:Starting cross validation
2023-10-15 22:37:07,375:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-15 22:37:09,192:INFO:Calculating mean and std
2023-10-15 22:37:09,194:INFO:Creating metrics dataframe
2023-10-15 22:37:09,197:INFO:Uploading results into container
2023-10-15 22:37:09,197:INFO:Uploading model into container now
2023-10-15 22:37:09,197:INFO:_master_model_container: 3
2023-10-15 22:37:09,198:INFO:_display_container: 2
2023-10-15 22:37:09,199:INFO:Ridge(random_state=1234)
2023-10-15 22:37:09,199:INFO:create_model() successfully completed......................................
2023-10-15 22:37:09,360:INFO:SubProcess create_model() end ==================================
2023-10-15 22:37:09,360:INFO:Creating metrics dataframe
2023-10-15 22:37:09,367:INFO:Initializing Elastic Net
2023-10-15 22:37:09,367:INFO:Total runtime is 0.145750363667806 minutes
2023-10-15 22:37:09,372:INFO:SubProcess create_model() called ==================================
2023-10-15 22:37:09,373:INFO:Initializing create_model()
2023-10-15 22:37:09,373:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=en, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BE812020>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:37:09,373:INFO:Checking exceptions
2023-10-15 22:37:09,373:INFO:Importing libraries
2023-10-15 22:37:09,373:INFO:Copying training dataset
2023-10-15 22:37:09,379:INFO:Defining folds
2023-10-15 22:37:09,379:INFO:Declaring metric variables
2023-10-15 22:37:09,382:INFO:Importing untrained model
2023-10-15 22:37:09,388:INFO:Elastic Net Imported successfully
2023-10-15 22:37:09,393:INFO:Starting cross validation
2023-10-15 22:37:09,394:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-15 22:37:09,530:INFO:Calculating mean and std
2023-10-15 22:37:09,532:INFO:Creating metrics dataframe
2023-10-15 22:37:09,535:INFO:Uploading results into container
2023-10-15 22:37:09,536:INFO:Uploading model into container now
2023-10-15 22:37:09,536:INFO:_master_model_container: 4
2023-10-15 22:37:09,536:INFO:_display_container: 2
2023-10-15 22:37:09,536:INFO:ElasticNet(random_state=1234)
2023-10-15 22:37:09,537:INFO:create_model() successfully completed......................................
2023-10-15 22:37:09,664:INFO:SubProcess create_model() end ==================================
2023-10-15 22:37:09,664:INFO:Creating metrics dataframe
2023-10-15 22:37:09,677:INFO:Initializing Least Angle Regression
2023-10-15 22:37:09,677:INFO:Total runtime is 0.15091119607289633 minutes
2023-10-15 22:37:09,679:INFO:SubProcess create_model() called ==================================
2023-10-15 22:37:09,680:INFO:Initializing create_model()
2023-10-15 22:37:09,680:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=lar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BE812020>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:37:09,680:INFO:Checking exceptions
2023-10-15 22:37:09,680:INFO:Importing libraries
2023-10-15 22:37:09,680:INFO:Copying training dataset
2023-10-15 22:37:09,687:INFO:Defining folds
2023-10-15 22:37:09,687:INFO:Declaring metric variables
2023-10-15 22:37:09,691:INFO:Importing untrained model
2023-10-15 22:37:09,695:INFO:Least Angle Regression Imported successfully
2023-10-15 22:37:09,702:INFO:Starting cross validation
2023-10-15 22:37:09,704:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-15 22:37:09,810:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-15 22:37:09,833:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 20 iterations, i.e. alpha=2.079e-02, with an active set of 18 regressors, and the smallest cholesky pivot element being 6.664e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-15 22:37:09,834:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 20 iterations, i.e. alpha=1.266e-02, with an active set of 18 regressors, and the smallest cholesky pivot element being 6.664e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-15 22:37:09,834:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 21 iterations, i.e. alpha=7.267e-03, with an active set of 19 regressors, and the smallest cholesky pivot element being 6.664e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-15 22:37:09,836:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 24 iterations, i.e. alpha=9.524e-03, with an active set of 20 regressors, and the smallest cholesky pivot element being 6.664e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-15 22:37:09,836:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 24 iterations, i.e. alpha=8.586e-03, with an active set of 20 regressors, and the smallest cholesky pivot element being 6.664e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-15 22:37:09,837:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 29 iterations, i.e. alpha=4.322e-02, with an active set of 23 regressors, and the smallest cholesky pivot element being 6.664e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-15 22:37:09,838:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 31 iterations, i.e. alpha=1.600e-02, with an active set of 24 regressors, and the smallest cholesky pivot element being 6.664e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-15 22:37:09,871:INFO:Calculating mean and std
2023-10-15 22:37:09,873:INFO:Creating metrics dataframe
2023-10-15 22:37:09,875:INFO:Uploading results into container
2023-10-15 22:37:09,875:INFO:Uploading model into container now
2023-10-15 22:37:09,876:INFO:_master_model_container: 5
2023-10-15 22:37:09,876:INFO:_display_container: 2
2023-10-15 22:37:09,876:INFO:Lars(random_state=1234)
2023-10-15 22:37:09,876:INFO:create_model() successfully completed......................................
2023-10-15 22:37:09,999:INFO:SubProcess create_model() end ==================================
2023-10-15 22:37:09,999:INFO:Creating metrics dataframe
2023-10-15 22:37:10,010:INFO:Initializing Lasso Least Angle Regression
2023-10-15 22:37:10,010:INFO:Total runtime is 0.1564685662587484 minutes
2023-10-15 22:37:10,013:INFO:SubProcess create_model() called ==================================
2023-10-15 22:37:10,014:INFO:Initializing create_model()
2023-10-15 22:37:10,014:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=llar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BE812020>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:37:10,014:INFO:Checking exceptions
2023-10-15 22:37:10,014:INFO:Importing libraries
2023-10-15 22:37:10,014:INFO:Copying training dataset
2023-10-15 22:37:10,021:INFO:Defining folds
2023-10-15 22:37:10,021:INFO:Declaring metric variables
2023-10-15 22:37:10,024:INFO:Importing untrained model
2023-10-15 22:37:10,029:INFO:Lasso Least Angle Regression Imported successfully
2023-10-15 22:37:10,036:INFO:Starting cross validation
2023-10-15 22:37:10,038:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-15 22:37:10,113:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-15 22:37:10,129:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-15 22:37:10,146:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-15 22:37:10,176:INFO:Calculating mean and std
2023-10-15 22:37:10,177:INFO:Creating metrics dataframe
2023-10-15 22:37:10,179:INFO:Uploading results into container
2023-10-15 22:37:10,180:INFO:Uploading model into container now
2023-10-15 22:37:10,180:INFO:_master_model_container: 6
2023-10-15 22:37:10,180:INFO:_display_container: 2
2023-10-15 22:37:10,181:INFO:LassoLars(random_state=1234)
2023-10-15 22:37:10,181:INFO:create_model() successfully completed......................................
2023-10-15 22:37:10,307:INFO:SubProcess create_model() end ==================================
2023-10-15 22:37:10,307:INFO:Creating metrics dataframe
2023-10-15 22:37:10,316:INFO:Initializing Orthogonal Matching Pursuit
2023-10-15 22:37:10,317:INFO:Total runtime is 0.16156431833902996 minutes
2023-10-15 22:37:10,321:INFO:SubProcess create_model() called ==================================
2023-10-15 22:37:10,321:INFO:Initializing create_model()
2023-10-15 22:37:10,321:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=omp, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BE812020>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:37:10,322:INFO:Checking exceptions
2023-10-15 22:37:10,322:INFO:Importing libraries
2023-10-15 22:37:10,322:INFO:Copying training dataset
2023-10-15 22:37:10,327:INFO:Defining folds
2023-10-15 22:37:10,327:INFO:Declaring metric variables
2023-10-15 22:37:10,330:INFO:Importing untrained model
2023-10-15 22:37:10,335:INFO:Orthogonal Matching Pursuit Imported successfully
2023-10-15 22:37:10,341:INFO:Starting cross validation
2023-10-15 22:37:10,344:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-15 22:37:10,429:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-15 22:37:10,438:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-15 22:37:10,458:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-15 22:37:10,490:INFO:Calculating mean and std
2023-10-15 22:37:10,492:INFO:Creating metrics dataframe
2023-10-15 22:37:10,494:INFO:Uploading results into container
2023-10-15 22:37:10,494:INFO:Uploading model into container now
2023-10-15 22:37:10,495:INFO:_master_model_container: 7
2023-10-15 22:37:10,495:INFO:_display_container: 2
2023-10-15 22:37:10,495:INFO:OrthogonalMatchingPursuit()
2023-10-15 22:37:10,495:INFO:create_model() successfully completed......................................
2023-10-15 22:37:10,623:INFO:SubProcess create_model() end ==================================
2023-10-15 22:37:10,623:INFO:Creating metrics dataframe
2023-10-15 22:37:10,634:INFO:Initializing Bayesian Ridge
2023-10-15 22:37:10,634:INFO:Total runtime is 0.1668697158495585 minutes
2023-10-15 22:37:10,638:INFO:SubProcess create_model() called ==================================
2023-10-15 22:37:10,639:INFO:Initializing create_model()
2023-10-15 22:37:10,639:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=br, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BE812020>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:37:10,639:INFO:Checking exceptions
2023-10-15 22:37:10,639:INFO:Importing libraries
2023-10-15 22:37:10,639:INFO:Copying training dataset
2023-10-15 22:37:10,643:INFO:Defining folds
2023-10-15 22:37:10,643:INFO:Declaring metric variables
2023-10-15 22:37:10,646:INFO:Importing untrained model
2023-10-15 22:37:10,651:INFO:Bayesian Ridge Imported successfully
2023-10-15 22:37:10,659:INFO:Starting cross validation
2023-10-15 22:37:10,661:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-15 22:37:10,793:INFO:Calculating mean and std
2023-10-15 22:37:10,794:INFO:Creating metrics dataframe
2023-10-15 22:37:10,797:INFO:Uploading results into container
2023-10-15 22:37:10,798:INFO:Uploading model into container now
2023-10-15 22:37:10,798:INFO:_master_model_container: 8
2023-10-15 22:37:10,798:INFO:_display_container: 2
2023-10-15 22:37:10,798:INFO:BayesianRidge()
2023-10-15 22:37:10,798:INFO:create_model() successfully completed......................................
2023-10-15 22:37:10,922:INFO:SubProcess create_model() end ==================================
2023-10-15 22:37:10,922:INFO:Creating metrics dataframe
2023-10-15 22:37:10,930:INFO:Initializing Passive Aggressive Regressor
2023-10-15 22:37:10,930:INFO:Total runtime is 0.17180852890014647 minutes
2023-10-15 22:37:10,936:INFO:SubProcess create_model() called ==================================
2023-10-15 22:37:10,936:INFO:Initializing create_model()
2023-10-15 22:37:10,936:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=par, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BE812020>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:37:10,937:INFO:Checking exceptions
2023-10-15 22:37:10,937:INFO:Importing libraries
2023-10-15 22:37:10,937:INFO:Copying training dataset
2023-10-15 22:37:10,942:INFO:Defining folds
2023-10-15 22:37:10,942:INFO:Declaring metric variables
2023-10-15 22:37:10,944:INFO:Importing untrained model
2023-10-15 22:37:10,949:INFO:Passive Aggressive Regressor Imported successfully
2023-10-15 22:37:10,957:INFO:Starting cross validation
2023-10-15 22:37:10,959:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-15 22:37:11,131:INFO:Calculating mean and std
2023-10-15 22:37:11,134:INFO:Creating metrics dataframe
2023-10-15 22:37:11,137:INFO:Uploading results into container
2023-10-15 22:37:11,138:INFO:Uploading model into container now
2023-10-15 22:37:11,138:INFO:_master_model_container: 9
2023-10-15 22:37:11,138:INFO:_display_container: 2
2023-10-15 22:37:11,139:INFO:PassiveAggressiveRegressor(random_state=1234)
2023-10-15 22:37:11,139:INFO:create_model() successfully completed......................................
2023-10-15 22:37:11,257:INFO:SubProcess create_model() end ==================================
2023-10-15 22:37:11,258:INFO:Creating metrics dataframe
2023-10-15 22:37:11,268:INFO:Initializing Huber Regressor
2023-10-15 22:37:11,268:INFO:Total runtime is 0.17742815812428792 minutes
2023-10-15 22:37:11,270:INFO:SubProcess create_model() called ==================================
2023-10-15 22:37:11,271:INFO:Initializing create_model()
2023-10-15 22:37:11,271:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=huber, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BE812020>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:37:11,271:INFO:Checking exceptions
2023-10-15 22:37:11,271:INFO:Importing libraries
2023-10-15 22:37:11,271:INFO:Copying training dataset
2023-10-15 22:37:11,276:INFO:Defining folds
2023-10-15 22:37:11,276:INFO:Declaring metric variables
2023-10-15 22:37:11,279:INFO:Importing untrained model
2023-10-15 22:37:11,284:INFO:Huber Regressor Imported successfully
2023-10-15 22:37:11,291:INFO:Starting cross validation
2023-10-15 22:37:11,294:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-15 22:37:11,461:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-10-15 22:37:11,474:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-10-15 22:37:11,508:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-10-15 22:37:11,534:INFO:Calculating mean and std
2023-10-15 22:37:11,536:INFO:Creating metrics dataframe
2023-10-15 22:37:11,538:INFO:Uploading results into container
2023-10-15 22:37:11,539:INFO:Uploading model into container now
2023-10-15 22:37:11,539:INFO:_master_model_container: 10
2023-10-15 22:37:11,539:INFO:_display_container: 2
2023-10-15 22:37:11,540:INFO:HuberRegressor()
2023-10-15 22:37:11,540:INFO:create_model() successfully completed......................................
2023-10-15 22:37:11,662:INFO:SubProcess create_model() end ==================================
2023-10-15 22:37:11,663:INFO:Creating metrics dataframe
2023-10-15 22:37:11,673:INFO:Initializing K Neighbors Regressor
2023-10-15 22:37:11,673:INFO:Total runtime is 0.18418877124786376 minutes
2023-10-15 22:37:11,676:INFO:SubProcess create_model() called ==================================
2023-10-15 22:37:11,676:INFO:Initializing create_model()
2023-10-15 22:37:11,676:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=knn, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BE812020>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:37:11,676:INFO:Checking exceptions
2023-10-15 22:37:11,676:INFO:Importing libraries
2023-10-15 22:37:11,677:INFO:Copying training dataset
2023-10-15 22:37:11,683:INFO:Defining folds
2023-10-15 22:37:11,684:INFO:Declaring metric variables
2023-10-15 22:37:11,686:INFO:Importing untrained model
2023-10-15 22:37:11,691:INFO:K Neighbors Regressor Imported successfully
2023-10-15 22:37:11,697:INFO:Starting cross validation
2023-10-15 22:37:11,700:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-15 22:37:11,924:INFO:Calculating mean and std
2023-10-15 22:37:11,925:INFO:Creating metrics dataframe
2023-10-15 22:37:11,927:INFO:Uploading results into container
2023-10-15 22:37:11,928:INFO:Uploading model into container now
2023-10-15 22:37:11,928:INFO:_master_model_container: 11
2023-10-15 22:37:11,928:INFO:_display_container: 2
2023-10-15 22:37:11,928:INFO:KNeighborsRegressor(n_jobs=-1)
2023-10-15 22:37:11,928:INFO:create_model() successfully completed......................................
2023-10-15 22:37:12,092:INFO:SubProcess create_model() end ==================================
2023-10-15 22:37:12,092:INFO:Creating metrics dataframe
2023-10-15 22:37:12,109:INFO:Initializing Decision Tree Regressor
2023-10-15 22:37:12,109:INFO:Total runtime is 0.19145550727844238 minutes
2023-10-15 22:37:12,113:INFO:SubProcess create_model() called ==================================
2023-10-15 22:37:12,114:INFO:Initializing create_model()
2023-10-15 22:37:12,114:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=dt, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BE812020>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:37:12,114:INFO:Checking exceptions
2023-10-15 22:37:12,114:INFO:Importing libraries
2023-10-15 22:37:12,114:INFO:Copying training dataset
2023-10-15 22:37:12,125:INFO:Defining folds
2023-10-15 22:37:12,125:INFO:Declaring metric variables
2023-10-15 22:37:12,134:INFO:Importing untrained model
2023-10-15 22:37:12,142:INFO:Decision Tree Regressor Imported successfully
2023-10-15 22:37:12,153:INFO:Starting cross validation
2023-10-15 22:37:12,154:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-15 22:37:12,310:INFO:Calculating mean and std
2023-10-15 22:37:12,311:INFO:Creating metrics dataframe
2023-10-15 22:37:12,314:INFO:Uploading results into container
2023-10-15 22:37:12,317:INFO:Uploading model into container now
2023-10-15 22:37:12,317:INFO:_master_model_container: 12
2023-10-15 22:37:12,317:INFO:_display_container: 2
2023-10-15 22:37:12,318:INFO:DecisionTreeRegressor(random_state=1234)
2023-10-15 22:37:12,318:INFO:create_model() successfully completed......................................
2023-10-15 22:37:12,448:INFO:SubProcess create_model() end ==================================
2023-10-15 22:37:12,448:INFO:Creating metrics dataframe
2023-10-15 22:37:12,459:INFO:Initializing Random Forest Regressor
2023-10-15 22:37:12,459:INFO:Total runtime is 0.19728094339370728 minutes
2023-10-15 22:37:12,461:INFO:SubProcess create_model() called ==================================
2023-10-15 22:37:12,461:INFO:Initializing create_model()
2023-10-15 22:37:12,462:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=rf, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BE812020>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:37:12,462:INFO:Checking exceptions
2023-10-15 22:37:12,462:INFO:Importing libraries
2023-10-15 22:37:12,462:INFO:Copying training dataset
2023-10-15 22:37:12,469:INFO:Defining folds
2023-10-15 22:37:12,470:INFO:Declaring metric variables
2023-10-15 22:37:12,473:INFO:Importing untrained model
2023-10-15 22:37:12,477:INFO:Random Forest Regressor Imported successfully
2023-10-15 22:37:12,486:INFO:Starting cross validation
2023-10-15 22:37:12,488:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-15 22:37:13,494:INFO:Calculating mean and std
2023-10-15 22:37:13,496:INFO:Creating metrics dataframe
2023-10-15 22:37:13,500:INFO:Uploading results into container
2023-10-15 22:37:13,500:INFO:Uploading model into container now
2023-10-15 22:37:13,501:INFO:_master_model_container: 13
2023-10-15 22:37:13,501:INFO:_display_container: 2
2023-10-15 22:37:13,501:INFO:RandomForestRegressor(n_jobs=-1, random_state=1234)
2023-10-15 22:37:13,502:INFO:create_model() successfully completed......................................
2023-10-15 22:37:13,634:INFO:SubProcess create_model() end ==================================
2023-10-15 22:37:13,634:INFO:Creating metrics dataframe
2023-10-15 22:37:13,642:INFO:Initializing Extra Trees Regressor
2023-10-15 22:37:13,642:INFO:Total runtime is 0.2170081655184428 minutes
2023-10-15 22:37:13,644:INFO:SubProcess create_model() called ==================================
2023-10-15 22:37:13,646:INFO:Initializing create_model()
2023-10-15 22:37:13,646:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=et, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BE812020>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:37:13,646:INFO:Checking exceptions
2023-10-15 22:37:13,646:INFO:Importing libraries
2023-10-15 22:37:13,646:INFO:Copying training dataset
2023-10-15 22:37:13,655:INFO:Defining folds
2023-10-15 22:37:13,656:INFO:Declaring metric variables
2023-10-15 22:37:13,659:INFO:Importing untrained model
2023-10-15 22:37:13,664:INFO:Extra Trees Regressor Imported successfully
2023-10-15 22:37:13,673:INFO:Starting cross validation
2023-10-15 22:37:13,675:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-15 22:37:14,461:INFO:Calculating mean and std
2023-10-15 22:37:14,462:INFO:Creating metrics dataframe
2023-10-15 22:37:14,466:INFO:Uploading results into container
2023-10-15 22:37:14,468:INFO:Uploading model into container now
2023-10-15 22:37:14,468:INFO:_master_model_container: 14
2023-10-15 22:37:14,468:INFO:_display_container: 2
2023-10-15 22:37:14,469:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1234)
2023-10-15 22:37:14,469:INFO:create_model() successfully completed......................................
2023-10-15 22:37:14,593:INFO:SubProcess create_model() end ==================================
2023-10-15 22:37:14,593:INFO:Creating metrics dataframe
2023-10-15 22:37:14,603:INFO:Initializing AdaBoost Regressor
2023-10-15 22:37:14,603:INFO:Total runtime is 0.23301610151926677 minutes
2023-10-15 22:37:14,606:INFO:SubProcess create_model() called ==================================
2023-10-15 22:37:14,607:INFO:Initializing create_model()
2023-10-15 22:37:14,607:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=ada, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BE812020>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:37:14,607:INFO:Checking exceptions
2023-10-15 22:37:14,607:INFO:Importing libraries
2023-10-15 22:37:14,607:INFO:Copying training dataset
2023-10-15 22:37:14,611:INFO:Defining folds
2023-10-15 22:37:14,612:INFO:Declaring metric variables
2023-10-15 22:37:14,617:INFO:Importing untrained model
2023-10-15 22:37:14,620:INFO:AdaBoost Regressor Imported successfully
2023-10-15 22:37:14,666:INFO:Starting cross validation
2023-10-15 22:37:14,667:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-15 22:37:15,099:INFO:Calculating mean and std
2023-10-15 22:37:15,101:INFO:Creating metrics dataframe
2023-10-15 22:37:15,104:INFO:Uploading results into container
2023-10-15 22:37:15,104:INFO:Uploading model into container now
2023-10-15 22:37:15,105:INFO:_master_model_container: 15
2023-10-15 22:37:15,105:INFO:_display_container: 2
2023-10-15 22:37:15,105:INFO:AdaBoostRegressor(random_state=1234)
2023-10-15 22:37:15,105:INFO:create_model() successfully completed......................................
2023-10-15 22:37:15,221:INFO:SubProcess create_model() end ==================================
2023-10-15 22:37:15,221:INFO:Creating metrics dataframe
2023-10-15 22:37:15,234:INFO:Initializing Gradient Boosting Regressor
2023-10-15 22:37:15,234:INFO:Total runtime is 0.24353086551030478 minutes
2023-10-15 22:37:15,241:INFO:SubProcess create_model() called ==================================
2023-10-15 22:37:15,241:INFO:Initializing create_model()
2023-10-15 22:37:15,241:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=gbr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BE812020>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:37:15,242:INFO:Checking exceptions
2023-10-15 22:37:15,242:INFO:Importing libraries
2023-10-15 22:37:15,242:INFO:Copying training dataset
2023-10-15 22:37:15,246:INFO:Defining folds
2023-10-15 22:37:15,246:INFO:Declaring metric variables
2023-10-15 22:37:15,250:INFO:Importing untrained model
2023-10-15 22:37:15,253:INFO:Gradient Boosting Regressor Imported successfully
2023-10-15 22:37:15,262:INFO:Starting cross validation
2023-10-15 22:37:15,265:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-15 22:37:15,894:INFO:Calculating mean and std
2023-10-15 22:37:15,896:INFO:Creating metrics dataframe
2023-10-15 22:37:15,901:INFO:Uploading results into container
2023-10-15 22:37:15,901:INFO:Uploading model into container now
2023-10-15 22:37:15,902:INFO:_master_model_container: 16
2023-10-15 22:37:15,902:INFO:_display_container: 2
2023-10-15 22:37:15,902:INFO:GradientBoostingRegressor(random_state=1234)
2023-10-15 22:37:15,902:INFO:create_model() successfully completed......................................
2023-10-15 22:37:16,041:INFO:SubProcess create_model() end ==================================
2023-10-15 22:37:16,041:INFO:Creating metrics dataframe
2023-10-15 22:37:16,052:INFO:Initializing Extreme Gradient Boosting
2023-10-15 22:37:16,052:INFO:Total runtime is 0.25715949535369875 minutes
2023-10-15 22:37:16,056:INFO:SubProcess create_model() called ==================================
2023-10-15 22:37:16,056:INFO:Initializing create_model()
2023-10-15 22:37:16,056:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=xgboost, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BE812020>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:37:16,056:INFO:Checking exceptions
2023-10-15 22:37:16,057:INFO:Importing libraries
2023-10-15 22:37:16,057:INFO:Copying training dataset
2023-10-15 22:37:16,061:INFO:Defining folds
2023-10-15 22:37:16,061:INFO:Declaring metric variables
2023-10-15 22:37:16,067:INFO:Importing untrained model
2023-10-15 22:37:16,073:INFO:Extreme Gradient Boosting Imported successfully
2023-10-15 22:37:16,079:INFO:Starting cross validation
2023-10-15 22:37:16,080:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-15 22:37:16,413:INFO:Calculating mean and std
2023-10-15 22:37:16,416:INFO:Creating metrics dataframe
2023-10-15 22:37:16,419:INFO:Uploading results into container
2023-10-15 22:37:16,419:INFO:Uploading model into container now
2023-10-15 22:37:16,420:INFO:_master_model_container: 17
2023-10-15 22:37:16,420:INFO:_display_container: 2
2023-10-15 22:37:16,421:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=1234, ...)
2023-10-15 22:37:16,421:INFO:create_model() successfully completed......................................
2023-10-15 22:37:16,554:INFO:SubProcess create_model() end ==================================
2023-10-15 22:37:16,556:INFO:Creating metrics dataframe
2023-10-15 22:37:16,569:INFO:Initializing Light Gradient Boosting Machine
2023-10-15 22:37:16,569:INFO:Total runtime is 0.26579053004582726 minutes
2023-10-15 22:37:16,572:INFO:SubProcess create_model() called ==================================
2023-10-15 22:37:16,573:INFO:Initializing create_model()
2023-10-15 22:37:16,573:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=lightgbm, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BE812020>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:37:16,573:INFO:Checking exceptions
2023-10-15 22:37:16,573:INFO:Importing libraries
2023-10-15 22:37:16,573:INFO:Copying training dataset
2023-10-15 22:37:16,579:INFO:Defining folds
2023-10-15 22:37:16,579:INFO:Declaring metric variables
2023-10-15 22:37:16,583:INFO:Importing untrained model
2023-10-15 22:37:16,587:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-15 22:37:16,594:INFO:Starting cross validation
2023-10-15 22:37:16,597:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-15 22:37:17,052:INFO:Calculating mean and std
2023-10-15 22:37:17,054:INFO:Creating metrics dataframe
2023-10-15 22:37:17,061:INFO:Uploading results into container
2023-10-15 22:37:17,062:INFO:Uploading model into container now
2023-10-15 22:37:17,063:INFO:_master_model_container: 18
2023-10-15 22:37:17,063:INFO:_display_container: 2
2023-10-15 22:37:17,064:INFO:LGBMRegressor(n_jobs=-1, random_state=1234)
2023-10-15 22:37:17,064:INFO:create_model() successfully completed......................................
2023-10-15 22:37:17,230:INFO:SubProcess create_model() end ==================================
2023-10-15 22:37:17,230:INFO:Creating metrics dataframe
2023-10-15 22:37:17,242:INFO:Initializing Dummy Regressor
2023-10-15 22:37:17,242:INFO:Total runtime is 0.2770030736923218 minutes
2023-10-15 22:37:17,246:INFO:SubProcess create_model() called ==================================
2023-10-15 22:37:17,248:INFO:Initializing create_model()
2023-10-15 22:37:17,248:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=dummy, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BE812020>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:37:17,249:INFO:Checking exceptions
2023-10-15 22:37:17,249:INFO:Importing libraries
2023-10-15 22:37:17,249:INFO:Copying training dataset
2023-10-15 22:37:17,257:INFO:Defining folds
2023-10-15 22:37:17,257:INFO:Declaring metric variables
2023-10-15 22:37:17,260:INFO:Importing untrained model
2023-10-15 22:37:17,266:INFO:Dummy Regressor Imported successfully
2023-10-15 22:37:17,272:INFO:Starting cross validation
2023-10-15 22:37:17,274:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-15 22:37:17,429:INFO:Calculating mean and std
2023-10-15 22:37:17,431:INFO:Creating metrics dataframe
2023-10-15 22:37:17,437:INFO:Uploading results into container
2023-10-15 22:37:17,437:INFO:Uploading model into container now
2023-10-15 22:37:17,438:INFO:_master_model_container: 19
2023-10-15 22:37:17,438:INFO:_display_container: 2
2023-10-15 22:37:17,438:INFO:DummyRegressor()
2023-10-15 22:37:17,438:INFO:create_model() successfully completed......................................
2023-10-15 22:37:17,572:INFO:SubProcess create_model() end ==================================
2023-10-15 22:37:17,572:INFO:Creating metrics dataframe
2023-10-15 22:37:17,597:INFO:Initializing create_model()
2023-10-15 22:37:17,597:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=LGBMRegressor(n_jobs=-1, random_state=1234), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:37:17,597:INFO:Checking exceptions
2023-10-15 22:37:17,600:INFO:Importing libraries
2023-10-15 22:37:17,600:INFO:Copying training dataset
2023-10-15 22:37:17,605:INFO:Defining folds
2023-10-15 22:37:17,605:INFO:Declaring metric variables
2023-10-15 22:37:17,605:INFO:Importing untrained model
2023-10-15 22:37:17,605:INFO:Declaring custom model
2023-10-15 22:37:17,606:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-15 22:37:17,607:INFO:Cross validation set to False
2023-10-15 22:37:17,607:INFO:Fitting Model
2023-10-15 22:37:17,687:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000248 seconds.
2023-10-15 22:37:17,687:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:37:17,687:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:37:17,687:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:37:17,688:INFO:[LightGBM] [Info] Start training from score 361.942261
2023-10-15 22:37:17,757:INFO:LGBMRegressor(n_jobs=-1, random_state=1234)
2023-10-15 22:37:17,757:INFO:create_model() successfully completed......................................
2023-10-15 22:37:17,933:INFO:_master_model_container: 19
2023-10-15 22:37:17,933:INFO:_display_container: 2
2023-10-15 22:37:17,933:INFO:LGBMRegressor(n_jobs=-1, random_state=1234)
2023-10-15 22:37:17,933:INFO:compare_models() successfully completed......................................
2023-10-15 22:42:16,222:INFO:Initializing predict_model()
2023-10-15 22:42:16,222:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=LGBMRegressor(n_jobs=-1, random_state=1234), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000291B7F4BEB0>)
2023-10-15 22:42:16,222:INFO:Checking exceptions
2023-10-15 22:42:16,223:INFO:Preloading libraries
2023-10-15 22:42:55,478:INFO:Initializing predict_model()
2023-10-15 22:42:55,478:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=LGBMRegressor(n_jobs=-1, random_state=1234), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000291CF979360>)
2023-10-15 22:42:55,478:INFO:Checking exceptions
2023-10-15 22:42:55,478:INFO:Preloading libraries
2023-10-15 22:42:55,481:INFO:Set up data.
2023-10-15 22:42:55,492:INFO:Set up index.
2023-10-15 22:46:11,988:INFO:Initializing tune_model()
2023-10-15 22:46:11,988:INFO:tune_model(estimator=LGBMRegressor(n_jobs=-1, random_state=1234), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>)
2023-10-15 22:46:11,988:INFO:Checking exceptions
2023-10-15 22:46:12,026:INFO:Copying training dataset
2023-10-15 22:46:12,032:INFO:Checking base model
2023-10-15 22:46:12,032:INFO:Base model : Light Gradient Boosting Machine
2023-10-15 22:46:12,038:INFO:Declaring metric variables
2023-10-15 22:46:12,043:INFO:Defining Hyperparameters
2023-10-15 22:46:12,297:INFO:Tuning with n_jobs=-1
2023-10-15 22:46:12,297:INFO:Initializing RandomizedSearchCV
2023-10-15 22:46:20,886:INFO:best_params: {'actual_estimator__reg_lambda': 0.3, 'actual_estimator__reg_alpha': 3, 'actual_estimator__num_leaves': 30, 'actual_estimator__n_estimators': 230, 'actual_estimator__min_split_gain': 0.3, 'actual_estimator__min_child_samples': 91, 'actual_estimator__learning_rate': 0.1, 'actual_estimator__feature_fraction': 0.5, 'actual_estimator__bagging_freq': 0, 'actual_estimator__bagging_fraction': 0.7}
2023-10-15 22:46:20,888:INFO:Hyperparameter search completed
2023-10-15 22:46:20,889:INFO:SubProcess create_model() called ==================================
2023-10-15 22:46:20,889:INFO:Initializing create_model()
2023-10-15 22:46:20,890:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=LGBMRegressor(n_jobs=-1, random_state=1234), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BE6482B0>, model_only=True, return_train_score=False, kwargs={'reg_lambda': 0.3, 'reg_alpha': 3, 'num_leaves': 30, 'n_estimators': 230, 'min_split_gain': 0.3, 'min_child_samples': 91, 'learning_rate': 0.1, 'feature_fraction': 0.5, 'bagging_freq': 0, 'bagging_fraction': 0.7})
2023-10-15 22:46:20,890:INFO:Checking exceptions
2023-10-15 22:46:20,890:INFO:Importing libraries
2023-10-15 22:46:20,890:INFO:Copying training dataset
2023-10-15 22:46:20,897:INFO:Defining folds
2023-10-15 22:46:20,898:INFO:Declaring metric variables
2023-10-15 22:46:20,903:INFO:Importing untrained model
2023-10-15 22:46:20,903:INFO:Declaring custom model
2023-10-15 22:46:20,907:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-15 22:46:20,915:INFO:Starting cross validation
2023-10-15 22:46:20,919:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-15 22:46:21,522:INFO:Calculating mean and std
2023-10-15 22:46:21,524:INFO:Creating metrics dataframe
2023-10-15 22:46:21,529:INFO:Finalizing model
2023-10-15 22:46:21,621:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:46:21,621:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:46:21,622:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:46:21,627:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:46:21,627:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:46:21,627:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:46:21,627:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000069 seconds.
2023-10-15 22:46:21,628:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-10-15 22:46:21,628:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-10-15 22:46:21,628:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:46:21,628:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:46:21,629:INFO:[LightGBM] [Info] Start training from score 361.942261
2023-10-15 22:46:21,642:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:46:21,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:46:21,806:INFO:Uploading results into container
2023-10-15 22:46:21,806:INFO:Uploading model into container now
2023-10-15 22:46:21,808:INFO:_master_model_container: 20
2023-10-15 22:46:21,809:INFO:_display_container: 5
2023-10-15 22:46:21,810:INFO:LGBMRegressor(bagging_fraction=0.7, bagging_freq=0, feature_fraction=0.5,
              min_child_samples=91, min_split_gain=0.3, n_estimators=230,
              n_jobs=-1, num_leaves=30, random_state=1234, reg_alpha=3,
              reg_lambda=0.3)
2023-10-15 22:46:21,810:INFO:create_model() successfully completed......................................
2023-10-15 22:46:21,986:INFO:SubProcess create_model() end ==================================
2023-10-15 22:46:21,986:INFO:choose_better activated
2023-10-15 22:46:21,990:INFO:SubProcess create_model() called ==================================
2023-10-15 22:46:21,991:INFO:Initializing create_model()
2023-10-15 22:46:21,991:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=LGBMRegressor(n_jobs=-1, random_state=1234), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:46:21,991:INFO:Checking exceptions
2023-10-15 22:46:21,993:INFO:Importing libraries
2023-10-15 22:46:21,993:INFO:Copying training dataset
2023-10-15 22:46:21,996:INFO:Defining folds
2023-10-15 22:46:21,996:INFO:Declaring metric variables
2023-10-15 22:46:21,997:INFO:Importing untrained model
2023-10-15 22:46:21,997:INFO:Declaring custom model
2023-10-15 22:46:21,998:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-15 22:46:21,998:INFO:Starting cross validation
2023-10-15 22:46:21,998:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-15 22:46:22,379:INFO:Calculating mean and std
2023-10-15 22:46:22,380:INFO:Creating metrics dataframe
2023-10-15 22:46:22,383:INFO:Finalizing model
2023-10-15 22:46:22,475:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000340 seconds.
2023-10-15 22:46:22,475:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:46:22,475:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:46:22,475:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:46:22,476:INFO:[LightGBM] [Info] Start training from score 361.942261
2023-10-15 22:46:22,548:INFO:Uploading results into container
2023-10-15 22:46:22,548:INFO:Uploading model into container now
2023-10-15 22:46:22,549:INFO:_master_model_container: 21
2023-10-15 22:46:22,549:INFO:_display_container: 6
2023-10-15 22:46:22,549:INFO:LGBMRegressor(n_jobs=-1, random_state=1234)
2023-10-15 22:46:22,549:INFO:create_model() successfully completed......................................
2023-10-15 22:46:22,705:INFO:SubProcess create_model() end ==================================
2023-10-15 22:46:22,706:INFO:LGBMRegressor(n_jobs=-1, random_state=1234) result for R2 is 0.5757
2023-10-15 22:46:22,707:INFO:LGBMRegressor(bagging_fraction=0.7, bagging_freq=0, feature_fraction=0.5,
              min_child_samples=91, min_split_gain=0.3, n_estimators=230,
              n_jobs=-1, num_leaves=30, random_state=1234, reg_alpha=3,
              reg_lambda=0.3) result for R2 is 0.5798
2023-10-15 22:46:22,707:INFO:LGBMRegressor(bagging_fraction=0.7, bagging_freq=0, feature_fraction=0.5,
              min_child_samples=91, min_split_gain=0.3, n_estimators=230,
              n_jobs=-1, num_leaves=30, random_state=1234, reg_alpha=3,
              reg_lambda=0.3) is best model
2023-10-15 22:46:22,707:INFO:choose_better completed
2023-10-15 22:46:22,715:INFO:_master_model_container: 21
2023-10-15 22:46:22,716:INFO:_display_container: 5
2023-10-15 22:46:22,716:INFO:LGBMRegressor(bagging_fraction=0.7, bagging_freq=0, feature_fraction=0.5,
              min_child_samples=91, min_split_gain=0.3, n_estimators=230,
              n_jobs=-1, num_leaves=30, random_state=1234, reg_alpha=3,
              reg_lambda=0.3)
2023-10-15 22:46:22,716:INFO:tune_model() successfully completed......................................
2023-10-15 22:47:48,057:INFO:Initializing predict_model()
2023-10-15 22:47:48,058:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=LGBMRegressor(bagging_fraction=0.7, bagging_freq=0, feature_fraction=0.5,
              min_child_samples=91, min_split_gain=0.3, n_estimators=230,
              n_jobs=-1, num_leaves=30, random_state=1234, reg_alpha=3,
              reg_lambda=0.3), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000291D143DD80>)
2023-10-15 22:47:48,058:INFO:Checking exceptions
2023-10-15 22:47:48,058:INFO:Preloading libraries
2023-10-15 22:48:42,883:INFO:Initializing predict_model()
2023-10-15 22:48:42,883:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=LGBMRegressor(bagging_fraction=0.7, bagging_freq=0, feature_fraction=0.5,
              min_child_samples=91, min_split_gain=0.3, n_estimators=230,
              n_jobs=-1, num_leaves=30, random_state=1234, reg_alpha=3,
              reg_lambda=0.3), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000291BDED7C70>)
2023-10-15 22:48:42,883:INFO:Checking exceptions
2023-10-15 22:48:42,883:INFO:Preloading libraries
2023-10-15 22:48:42,886:INFO:Set up data.
2023-10-15 22:48:42,893:INFO:Set up index.
2023-10-15 22:49:37,951:INFO:Initializing finalize_model()
2023-10-15 22:49:37,951:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=LGBMRegressor(bagging_fraction=0.7, bagging_freq=0, feature_fraction=0.5,
              min_child_samples=91, min_split_gain=0.3, n_estimators=230,
              n_jobs=-1, num_leaves=30, random_state=1234, reg_alpha=3,
              reg_lambda=0.3), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-10-15 22:49:37,952:INFO:Finalizing LGBMRegressor(bagging_fraction=0.7, bagging_freq=0, feature_fraction=0.5,
              min_child_samples=91, min_split_gain=0.3, n_estimators=230,
              n_jobs=-1, num_leaves=30, random_state=1234, reg_alpha=3,
              reg_lambda=0.3)
2023-10-15 22:49:37,957:INFO:Initializing create_model()
2023-10-15 22:49:37,957:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=LGBMRegressor(bagging_fraction=0.7, bagging_freq=0, feature_fraction=0.5,
              min_child_samples=91, min_split_gain=0.3, n_estimators=230,
              n_jobs=-1, num_leaves=30, random_state=1234, reg_alpha=3,
              reg_lambda=0.3), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-10-15 22:49:37,957:INFO:Checking exceptions
2023-10-15 22:49:37,959:INFO:Importing libraries
2023-10-15 22:49:37,959:INFO:Copying training dataset
2023-10-15 22:49:37,959:INFO:Defining folds
2023-10-15 22:49:37,959:INFO:Declaring metric variables
2023-10-15 22:49:37,959:INFO:Importing untrained model
2023-10-15 22:49:37,959:INFO:Declaring custom model
2023-10-15 22:49:37,960:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-15 22:49:37,962:INFO:Cross validation set to False
2023-10-15 22:49:37,962:INFO:Fitting Model
2023-10-15 22:49:38,045:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:49:38,045:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:49:38,045:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:49:38,050:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:49:38,050:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:49:38,050:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:49:38,050:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000067 seconds.
2023-10-15 22:49:38,050:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-10-15 22:49:38,050:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-10-15 22:49:38,050:INFO:[LightGBM] [Info] Total Bins 1070
2023-10-15 22:49:38,050:INFO:[LightGBM] [Info] Number of data points in the train set: 6006, number of used features: 25
2023-10-15 22:49:38,051:INFO:[LightGBM] [Info] Start training from score 365.914729
2023-10-15 22:49:38,211:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:49:38,274:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'Series', 'day_of_year',
                                             'dolar_oficial', 'temperature_C'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['month', 'day_of_week',
                                             'is_working'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Tr...
                 TransformerWrapper(include=['month', 'day_of_week'],
                                    transformer=OneHotEncoder(cols=['month',
                                                                    'day_of_week'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.7, bagging_freq=0,
                               feature_fraction=0.5, min_child_samples=91,
                               min_split_gain=0.3, n_estimators=230, n_jobs=-1,
                               num_leaves=30, random_state=1234, reg_alpha=3,
                               reg_lambda=0.3))])
2023-10-15 22:49:38,274:INFO:create_model() successfully completed......................................
2023-10-15 22:49:38,418:INFO:_master_model_container: 21
2023-10-15 22:49:38,418:INFO:_display_container: 7
2023-10-15 22:49:38,449:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'Series', 'day_of_year',
                                             'dolar_oficial', 'temperature_C'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['month', 'day_of_week',
                                             'is_working'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Tr...
                 TransformerWrapper(include=['month', 'day_of_week'],
                                    transformer=OneHotEncoder(cols=['month',
                                                                    'day_of_week'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 LGBMRegressor(bagging_fraction=0.7, bagging_freq=0,
                               feature_fraction=0.5, min_child_samples=91,
                               min_split_gain=0.3, n_estimators=230, n_jobs=-1,
                               num_leaves=30, random_state=1234, reg_alpha=3,
                               reg_lambda=0.3))])
2023-10-15 22:49:38,449:INFO:finalize_model() successfully completed......................................
2023-10-15 22:56:12,248:INFO:Initializing ensemble_model()
2023-10-15 22:56:12,248:INFO:ensemble_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=LGBMRegressor(bagging_fraction=0.7, bagging_freq=0, feature_fraction=0.5,
              min_child_samples=91, min_split_gain=0.3, n_estimators=230,
              n_jobs=-1, num_leaves=30, random_state=1234, reg_alpha=3,
              reg_lambda=0.3), method=Bagging, fold=None, n_estimators=10, round=4, choose_better=True, optimize=R2, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2023-10-15 22:56:12,248:INFO:Checking exceptions
2023-10-15 22:56:12,284:INFO:Importing libraries
2023-10-15 22:56:12,284:INFO:Copying training dataset
2023-10-15 22:56:12,284:INFO:Checking base model
2023-10-15 22:56:12,284:INFO:Base model : Light Gradient Boosting Machine
2023-10-15 22:56:12,291:INFO:Importing untrained ensembler
2023-10-15 22:56:12,292:INFO:Ensemble method set to Bagging
2023-10-15 22:56:12,292:INFO:SubProcess create_model() called ==================================
2023-10-15 22:56:12,295:INFO:Initializing create_model()
2023-10-15 22:56:12,295:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=BaggingRegressor(base_estimator=LGBMRegressor(bagging_fraction=0.7,
                                              bagging_freq=0,
                                              feature_fraction=0.5,
                                              min_child_samples=91,
                                              min_split_gain=0.3,
                                              n_estimators=230, n_jobs=-1,
                                              num_leaves=30, random_state=1234,
                                              reg_alpha=3, reg_lambda=0.3),
                 random_state=1234), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291D1576590>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:56:12,295:INFO:Checking exceptions
2023-10-15 22:56:12,295:INFO:Importing libraries
2023-10-15 22:56:12,295:INFO:Copying training dataset
2023-10-15 22:56:12,301:INFO:Defining folds
2023-10-15 22:56:12,302:INFO:Declaring metric variables
2023-10-15 22:56:12,305:INFO:Importing untrained model
2023-10-15 22:56:12,305:INFO:Declaring custom model
2023-10-15 22:56:12,308:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-15 22:56:12,318:INFO:Starting cross validation
2023-10-15 22:56:12,321:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-15 22:56:19,103:INFO:Calculating mean and std
2023-10-15 22:56:19,106:INFO:Creating metrics dataframe
2023-10-15 22:56:19,115:INFO:Finalizing model
2023-10-15 22:56:19,211:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:56:19,211:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:56:19,211:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:56:19,214:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:56:19,214:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:56:19,214:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:56:19,214:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000057 seconds.
2023-10-15 22:56:19,214:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-10-15 22:56:19,214:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-10-15 22:56:19,215:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:56:19,215:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:56:19,215:INFO:[LightGBM] [Info] Start training from score 361.461216
2023-10-15 22:56:19,230:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:19,300:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:19,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:19,372:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:56:19,372:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:56:19,372:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:56:19,375:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:56:19,375:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:56:19,375:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:56:19,376:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000253 seconds.
2023-10-15 22:56:19,376:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:56:19,376:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:56:19,376:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:56:19,376:INFO:[LightGBM] [Info] Start training from score 362.048122
2023-10-15 22:56:19,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:19,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:19,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:19,432:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:19,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:19,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:19,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:19,510:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:56:19,510:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:56:19,510:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:56:19,513:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:56:19,514:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:56:19,514:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:56:19,514:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000210 seconds.
2023-10-15 22:56:19,514:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:56:19,514:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:56:19,514:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:56:19,515:INFO:[LightGBM] [Info] Start training from score 362.152229
2023-10-15 22:56:19,526:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:19,543:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:19,559:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:19,640:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:56:19,640:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:56:19,640:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:56:19,644:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:56:19,644:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:56:19,644:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:56:19,645:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000371 seconds.
2023-10-15 22:56:19,645:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:56:19,645:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:56:19,645:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:56:19,645:INFO:[LightGBM] [Info] Start training from score 361.120814
2023-10-15 22:56:19,671:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:19,688:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:19,737:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:19,787:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:56:19,787:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:56:19,787:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:56:19,791:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:56:19,791:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:56:19,791:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:56:19,791:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000208 seconds.
2023-10-15 22:56:19,791:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:56:19,791:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:56:19,791:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:56:19,792:INFO:[LightGBM] [Info] Start training from score 362.010807
2023-10-15 22:56:19,840:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:19,840:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:19,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:19,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:19,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:19,921:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:56:19,921:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:56:19,922:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:56:19,924:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:56:19,925:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:56:19,925:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:56:19,925:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000262 seconds.
2023-10-15 22:56:19,925:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:56:19,925:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:56:19,925:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:56:19,925:INFO:[LightGBM] [Info] Start training from score 361.960496
2023-10-15 22:56:19,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:20,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:20,046:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:20,068:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:56:20,068:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:56:20,068:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:56:20,071:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:56:20,071:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:56:20,071:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:56:20,073:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000221 seconds.
2023-10-15 22:56:20,073:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:56:20,073:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:56:20,073:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:56:20,073:INFO:[LightGBM] [Info] Start training from score 361.852436
2023-10-15 22:56:20,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:20,091:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:20,130:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:20,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:20,157:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:20,183:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:20,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:20,227:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:56:20,228:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:56:20,228:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:56:20,232:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:56:20,232:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:56:20,232:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:56:20,232:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000196 seconds.
2023-10-15 22:56:20,232:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:56:20,232:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:56:20,232:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:56:20,232:INFO:[LightGBM] [Info] Start training from score 361.515665
2023-10-15 22:56:20,316:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:20,364:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:56:20,364:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:56:20,364:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:56:20,368:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:56:20,368:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:56:20,368:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:56:20,368:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000209 seconds.
2023-10-15 22:56:20,368:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:56:20,369:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:56:20,369:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:56:20,369:INFO:[LightGBM] [Info] Start training from score 361.132447
2023-10-15 22:56:20,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:20,433:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:20,440:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:20,462:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:20,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:20,500:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:56:20,500:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:56:20,500:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:56:20,503:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:56:20,503:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:56:20,503:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:56:20,504:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000205 seconds.
2023-10-15 22:56:20,504:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:56:20,504:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:56:20,504:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:56:20,504:INFO:[LightGBM] [Info] Start training from score 360.648827
2023-10-15 22:56:20,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:20,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:20,639:INFO:Uploading results into container
2023-10-15 22:56:20,640:INFO:Uploading model into container now
2023-10-15 22:56:20,641:INFO:_master_model_container: 22
2023-10-15 22:56:20,641:INFO:_display_container: 8
2023-10-15 22:56:20,643:INFO:BaggingRegressor(base_estimator=LGBMRegressor(bagging_fraction=0.7,
                                              bagging_freq=0,
                                              feature_fraction=0.5,
                                              min_child_samples=91,
                                              min_split_gain=0.3,
                                              n_estimators=230, n_jobs=-1,
                                              num_leaves=30, random_state=1234,
                                              reg_alpha=3, reg_lambda=0.3),
                 random_state=1234)
2023-10-15 22:56:20,644:INFO:create_model() successfully completed......................................
2023-10-15 22:56:20,869:INFO:SubProcess create_model() end ==================================
2023-10-15 22:56:20,869:INFO:choose_better activated
2023-10-15 22:56:20,872:INFO:SubProcess create_model() called ==================================
2023-10-15 22:56:20,872:INFO:Initializing create_model()
2023-10-15 22:56:20,872:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291BDF99F00>, estimator=LGBMRegressor(bagging_fraction=0.7, bagging_freq=0, feature_fraction=0.5,
              min_child_samples=91, min_split_gain=0.3, n_estimators=230,
              n_jobs=-1, num_leaves=30, random_state=1234, reg_alpha=3,
              reg_lambda=0.3), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:56:20,872:INFO:Checking exceptions
2023-10-15 22:56:20,874:INFO:Importing libraries
2023-10-15 22:56:20,874:INFO:Copying training dataset
2023-10-15 22:56:20,878:INFO:Defining folds
2023-10-15 22:56:20,878:INFO:Declaring metric variables
2023-10-15 22:56:20,878:INFO:Importing untrained model
2023-10-15 22:56:20,878:INFO:Declaring custom model
2023-10-15 22:56:20,879:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-15 22:56:20,879:INFO:Starting cross validation
2023-10-15 22:56:20,880:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-10-15 22:56:23,207:INFO:Calculating mean and std
2023-10-15 22:56:23,208:INFO:Creating metrics dataframe
2023-10-15 22:56:23,211:INFO:Finalizing model
2023-10-15 22:56:23,312:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:56:23,312:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:56:23,312:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:56:23,316:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:56:23,317:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:56:23,317:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:56:23,317:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000063 seconds.
2023-10-15 22:56:23,317:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-10-15 22:56:23,317:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-10-15 22:56:23,317:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:56:23,317:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:56:23,317:INFO:[LightGBM] [Info] Start training from score 361.942261
2023-10-15 22:56:23,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:23,457:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:56:23,481:INFO:Uploading results into container
2023-10-15 22:56:23,482:INFO:Uploading model into container now
2023-10-15 22:56:23,482:INFO:_master_model_container: 23
2023-10-15 22:56:23,482:INFO:_display_container: 9
2023-10-15 22:56:23,484:INFO:LGBMRegressor(bagging_fraction=0.7, bagging_freq=0, feature_fraction=0.5,
              min_child_samples=91, min_split_gain=0.3, n_estimators=230,
              n_jobs=-1, num_leaves=30, random_state=1234, reg_alpha=3,
              reg_lambda=0.3)
2023-10-15 22:56:23,484:INFO:create_model() successfully completed......................................
2023-10-15 22:56:23,641:INFO:SubProcess create_model() end ==================================
2023-10-15 22:56:23,642:INFO:LGBMRegressor(bagging_fraction=0.7, bagging_freq=0, feature_fraction=0.5,
              min_child_samples=91, min_split_gain=0.3, n_estimators=230,
              n_jobs=-1, num_leaves=30, random_state=1234, reg_alpha=3,
              reg_lambda=0.3) result for R2 is 0.5798
2023-10-15 22:56:23,644:INFO:BaggingRegressor(base_estimator=LGBMRegressor(bagging_fraction=0.7,
                                              bagging_freq=0,
                                              feature_fraction=0.5,
                                              min_child_samples=91,
                                              min_split_gain=0.3,
                                              n_estimators=230, n_jobs=-1,
                                              num_leaves=30, random_state=1234,
                                              reg_alpha=3, reg_lambda=0.3),
                 random_state=1234) result for R2 is 0.5696
2023-10-15 22:56:23,645:INFO:LGBMRegressor(bagging_fraction=0.7, bagging_freq=0, feature_fraction=0.5,
              min_child_samples=91, min_split_gain=0.3, n_estimators=230,
              n_jobs=-1, num_leaves=30, random_state=1234, reg_alpha=3,
              reg_lambda=0.3) is best model
2023-10-15 22:56:23,645:INFO:choose_better completed
2023-10-15 22:56:23,645:INFO:Original model was better than the ensembled model, hence it will be returned. NOTE: The display metrics are for the ensembled model (not the original one).
2023-10-15 22:56:23,652:INFO:_master_model_container: 23
2023-10-15 22:56:23,652:INFO:_display_container: 8
2023-10-15 22:56:23,653:INFO:LGBMRegressor(bagging_fraction=0.7, bagging_freq=0, feature_fraction=0.5,
              min_child_samples=91, min_split_gain=0.3, n_estimators=230,
              n_jobs=-1, num_leaves=30, random_state=1234, reg_alpha=3,
              reg_lambda=0.3)
2023-10-15 22:56:23,653:INFO:ensemble_model() successfully completed......................................
2023-10-15 22:56:48,722:INFO:PyCaret RegressionExperiment
2023-10-15 22:56:48,722:INFO:Logging name: reg-default-name
2023-10-15 22:56:48,722:INFO:ML Usecase: MLUsecase.REGRESSION
2023-10-15 22:56:48,722:INFO:version 3.1.0
2023-10-15 22:56:48,722:INFO:Initializing setup()
2023-10-15 22:56:48,722:INFO:self.USI: 29d3
2023-10-15 22:56:48,722:INFO:self._variable_keys: {'y_train', 'USI', 'gpu_n_jobs_param', 'fold_shuffle_param', 'idx', 'y', 'X_test', 'n_jobs_param', '_ml_usecase', 'memory', 'fold_generator', 'transform_target_param', 'data', 'y_test', 'exp_id', 'target_param', 'fold_groups_param', 'pipeline', 'seed', 'logging_param', 'X', 'log_plots_param', '_available_plots', 'exp_name_log', 'X_train', 'html_param', 'gpu_param'}
2023-10-15 22:56:48,722:INFO:Checking environment
2023-10-15 22:56:48,722:INFO:python_version: 3.10.6
2023-10-15 22:56:48,722:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2023-10-15 22:56:48,722:INFO:machine: AMD64
2023-10-15 22:56:48,722:INFO:platform: Windows-10-10.0.22621-SP0
2023-10-15 22:56:48,722:INFO:Memory: svmem(total=8273383424, available=1450422272, percent=82.5, used=6822961152, free=1450422272)
2023-10-15 22:56:48,722:INFO:Physical Core: 4
2023-10-15 22:56:48,722:INFO:Logical Core: 8
2023-10-15 22:56:48,722:INFO:Checking libraries
2023-10-15 22:56:48,724:INFO:System:
2023-10-15 22:56:48,724:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2023-10-15 22:56:48,724:INFO:executable: c:\Users\manue\AppData\Local\Programs\Python\Python310\python.exe
2023-10-15 22:56:48,724:INFO:   machine: Windows-10-10.0.22621-SP0
2023-10-15 22:56:48,724:INFO:PyCaret required dependencies:
2023-10-15 22:56:48,724:INFO:                 pip: 22.2.1
2023-10-15 22:56:48,724:INFO:          setuptools: 63.2.0
2023-10-15 22:56:48,724:INFO:             pycaret: 3.1.0
2023-10-15 22:56:48,724:INFO:             IPython: 8.4.0
2023-10-15 22:56:48,724:INFO:          ipywidgets: 8.1.1
2023-10-15 22:56:48,724:INFO:                tqdm: 4.66.1
2023-10-15 22:56:48,724:INFO:               numpy: 1.23.2
2023-10-15 22:56:48,724:INFO:              pandas: 1.4.3
2023-10-15 22:56:48,724:INFO:              jinja2: 3.1.2
2023-10-15 22:56:48,724:INFO:               scipy: 1.10.1
2023-10-15 22:56:48,724:INFO:              joblib: 1.2.0
2023-10-15 22:56:48,724:INFO:             sklearn: 1.1.2
2023-10-15 22:56:48,724:INFO:                pyod: 1.1.0
2023-10-15 22:56:48,724:INFO:            imblearn: 0.11.0
2023-10-15 22:56:48,724:INFO:   category_encoders: 2.6.2
2023-10-15 22:56:48,724:INFO:            lightgbm: 4.1.0
2023-10-15 22:56:48,724:INFO:               numba: 0.58.0
2023-10-15 22:56:48,724:INFO:            requests: 2.28.1
2023-10-15 22:56:48,724:INFO:          matplotlib: 3.6.0
2023-10-15 22:56:48,725:INFO:          scikitplot: 0.3.7
2023-10-15 22:56:48,725:INFO:         yellowbrick: 1.5
2023-10-15 22:56:48,725:INFO:              plotly: 5.17.0
2023-10-15 22:56:48,725:INFO:    plotly-resampler: Not installed
2023-10-15 22:56:48,725:INFO:             kaleido: 0.2.1
2023-10-15 22:56:48,725:INFO:           schemdraw: 0.15
2023-10-15 22:56:48,725:INFO:         statsmodels: 0.13.2
2023-10-15 22:56:48,725:INFO:              sktime: 0.21.1
2023-10-15 22:56:48,725:INFO:               tbats: 1.1.3
2023-10-15 22:56:48,725:INFO:            pmdarima: 2.0.3
2023-10-15 22:56:48,725:INFO:              psutil: 5.9.1
2023-10-15 22:56:48,725:INFO:          markupsafe: 2.1.1
2023-10-15 22:56:48,725:INFO:             pickle5: Not installed
2023-10-15 22:56:48,725:INFO:         cloudpickle: 2.2.1
2023-10-15 22:56:48,725:INFO:         deprecation: 2.1.0
2023-10-15 22:56:48,725:INFO:              xxhash: 3.4.1
2023-10-15 22:56:48,725:INFO:           wurlitzer: Not installed
2023-10-15 22:56:48,725:INFO:PyCaret optional dependencies:
2023-10-15 22:56:48,725:INFO:                shap: Not installed
2023-10-15 22:56:48,725:INFO:           interpret: Not installed
2023-10-15 22:56:48,725:INFO:                umap: Not installed
2023-10-15 22:56:48,725:INFO:     ydata_profiling: Not installed
2023-10-15 22:56:48,725:INFO:  explainerdashboard: Not installed
2023-10-15 22:56:48,725:INFO:             autoviz: Not installed
2023-10-15 22:56:48,725:INFO:           fairlearn: Not installed
2023-10-15 22:56:48,725:INFO:          deepchecks: Not installed
2023-10-15 22:56:48,725:INFO:             xgboost: 2.0.0
2023-10-15 22:56:48,725:INFO:            catboost: Not installed
2023-10-15 22:56:48,725:INFO:              kmodes: Not installed
2023-10-15 22:56:48,725:INFO:             mlxtend: Not installed
2023-10-15 22:56:48,725:INFO:       statsforecast: Not installed
2023-10-15 22:56:48,725:INFO:        tune_sklearn: Not installed
2023-10-15 22:56:48,726:INFO:                 ray: Not installed
2023-10-15 22:56:48,726:INFO:            hyperopt: Not installed
2023-10-15 22:56:48,726:INFO:              optuna: Not installed
2023-10-15 22:56:48,726:INFO:               skopt: Not installed
2023-10-15 22:56:48,726:INFO:              mlflow: Not installed
2023-10-15 22:56:48,726:INFO:              gradio: Not installed
2023-10-15 22:56:48,726:INFO:             fastapi: Not installed
2023-10-15 22:56:48,726:INFO:             uvicorn: Not installed
2023-10-15 22:56:48,726:INFO:              m2cgen: Not installed
2023-10-15 22:56:48,726:INFO:           evidently: Not installed
2023-10-15 22:56:48,726:INFO:               fugue: Not installed
2023-10-15 22:56:48,726:INFO:           streamlit: Not installed
2023-10-15 22:56:48,726:INFO:             prophet: 1.1.5
2023-10-15 22:56:48,726:INFO:None
2023-10-15 22:56:48,726:INFO:Set up data.
2023-10-15 22:56:48,731:INFO:Set up folding strategy.
2023-10-15 22:56:48,731:INFO:Set up train/test split.
2023-10-15 22:56:48,731:INFO:Set up data.
2023-10-15 22:56:48,736:INFO:Set up index.
2023-10-15 22:56:48,736:INFO:Assigning column types.
2023-10-15 22:56:48,739:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-10-15 22:56:48,739:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-10-15 22:56:48,743:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-15 22:56:48,748:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-15 22:56:48,796:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-15 22:56:48,836:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-15 22:56:48,837:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:56:48,839:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:56:48,840:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-10-15 22:56:48,843:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-15 22:56:48,847:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-15 22:56:48,903:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-15 22:56:48,942:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-15 22:56:48,943:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:56:48,945:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:56:48,945:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-10-15 22:56:48,949:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-15 22:56:48,954:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-15 22:56:49,009:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-15 22:56:49,055:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-15 22:56:49,055:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:56:49,058:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:56:49,062:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-15 22:56:49,066:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-15 22:56:49,119:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-15 22:56:49,155:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-15 22:56:49,156:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:56:49,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:56:49,158:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-10-15 22:56:49,166:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-15 22:56:49,216:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-15 22:56:49,251:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-15 22:56:49,252:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:56:49,254:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:56:49,262:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-15 22:56:49,310:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-15 22:56:49,346:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-15 22:56:49,347:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:56:49,349:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:56:49,349:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-10-15 22:56:49,406:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-15 22:56:49,442:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-15 22:56:49,444:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:56:49,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:56:49,500:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-15 22:56:49,536:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-15 22:56:49,537:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:56:49,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:56:49,539:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-10-15 22:56:49,598:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-15 22:56:49,638:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:56:49,640:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:56:49,697:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-15 22:56:49,736:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:56:49,738:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:56:49,739:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-10-15 22:56:49,833:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:56:49,836:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:56:49,932:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:56:49,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:56:49,937:INFO:Preparing preprocessing pipeline...
2023-10-15 22:56:49,937:INFO:Set up simple imputation.
2023-10-15 22:56:49,939:INFO:Set up encoding of ordinal features.
2023-10-15 22:56:49,940:INFO:Set up encoding of categorical features.
2023-10-15 22:56:50,019:INFO:Finished creating preprocessing pipeline.
2023-10-15 22:56:50,047:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\manue\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'Series', 'day_of_year',
                                             'dolar_oficial', 'temperature_C'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['month', 'day_of_week',
                                             'is_working'],
                                    transformer=SimpleImputer(strategy='...
                 TransformerWrapper(include=['is_working'],
                                    transformer=OrdinalEncoder(cols=['is_working'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'is_working',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['month', 'day_of_week'],
                                    transformer=OneHotEncoder(cols=['month',
                                                                    'day_of_week'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2023-10-15 22:56:50,047:INFO:Creating final display dataframe.
2023-10-15 22:56:50,246:INFO:Setup _display_container:                     Description             Value
0                    Session id              1234
1                        Target        demand_GWh
2                   Target type        Regression
3           Original data shape         (6006, 9)
4        Transformed data shape        (6006, 26)
5   Transformed train set shape        (5506, 26)
6    Transformed test set shape         (500, 26)
7              Ordinal features                 1
8              Numeric features                 5
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   TimeSeriesSplit
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              29d3
2023-10-15 22:56:50,341:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:56:50,343:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:56:50,440:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-15 22:56:50,442:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-15 22:56:50,443:INFO:setup() successfully completed in 1.72s...............
2023-10-15 22:56:57,467:INFO:Initializing compare_models()
2023-10-15 22:56:57,467:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-10-15 22:56:57,467:INFO:Checking exceptions
2023-10-15 22:56:57,471:INFO:Preparing display monitor
2023-10-15 22:56:57,509:INFO:Initializing Linear Regression
2023-10-15 22:56:57,509:INFO:Total runtime is 0.0 minutes
2023-10-15 22:56:57,516:INFO:SubProcess create_model() called ==================================
2023-10-15 22:56:57,517:INFO:Initializing create_model()
2023-10-15 22:56:57,517:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=lr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BED7E620>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:56:57,517:INFO:Checking exceptions
2023-10-15 22:56:57,517:INFO:Importing libraries
2023-10-15 22:56:57,517:INFO:Copying training dataset
2023-10-15 22:56:57,523:INFO:Defining folds
2023-10-15 22:56:57,523:INFO:Declaring metric variables
2023-10-15 22:56:57,527:INFO:Importing untrained model
2023-10-15 22:56:57,530:INFO:Linear Regression Imported successfully
2023-10-15 22:56:57,539:INFO:Starting cross validation
2023-10-15 22:56:57,541:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), n_jobs=-1
2023-10-15 22:57:00,092:INFO:Calculating mean and std
2023-10-15 22:57:00,095:INFO:Creating metrics dataframe
2023-10-15 22:57:00,102:INFO:Uploading results into container
2023-10-15 22:57:00,104:INFO:Uploading model into container now
2023-10-15 22:57:00,105:INFO:_master_model_container: 1
2023-10-15 22:57:00,105:INFO:_display_container: 2
2023-10-15 22:57:00,106:INFO:LinearRegression(n_jobs=-1)
2023-10-15 22:57:00,106:INFO:create_model() successfully completed......................................
2023-10-15 22:57:00,346:INFO:SubProcess create_model() end ==================================
2023-10-15 22:57:00,346:INFO:Creating metrics dataframe
2023-10-15 22:57:00,359:INFO:Initializing Lasso Regression
2023-10-15 22:57:00,359:INFO:Total runtime is 0.04749126831690471 minutes
2023-10-15 22:57:00,366:INFO:SubProcess create_model() called ==================================
2023-10-15 22:57:00,367:INFO:Initializing create_model()
2023-10-15 22:57:00,367:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=lasso, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BED7E620>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:57:00,367:INFO:Checking exceptions
2023-10-15 22:57:00,367:INFO:Importing libraries
2023-10-15 22:57:00,367:INFO:Copying training dataset
2023-10-15 22:57:00,376:INFO:Defining folds
2023-10-15 22:57:00,376:INFO:Declaring metric variables
2023-10-15 22:57:00,382:INFO:Importing untrained model
2023-10-15 22:57:00,388:INFO:Lasso Regression Imported successfully
2023-10-15 22:57:00,398:INFO:Starting cross validation
2023-10-15 22:57:00,402:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), n_jobs=-1
2023-10-15 22:57:00,783:INFO:Calculating mean and std
2023-10-15 22:57:00,785:INFO:Creating metrics dataframe
2023-10-15 22:57:00,788:INFO:Uploading results into container
2023-10-15 22:57:00,789:INFO:Uploading model into container now
2023-10-15 22:57:00,789:INFO:_master_model_container: 2
2023-10-15 22:57:00,789:INFO:_display_container: 2
2023-10-15 22:57:00,789:INFO:Lasso(random_state=1234)
2023-10-15 22:57:00,789:INFO:create_model() successfully completed......................................
2023-10-15 22:57:00,979:INFO:SubProcess create_model() end ==================================
2023-10-15 22:57:00,979:INFO:Creating metrics dataframe
2023-10-15 22:57:00,991:INFO:Initializing Ridge Regression
2023-10-15 22:57:00,991:INFO:Total runtime is 0.05803474187850952 minutes
2023-10-15 22:57:00,994:INFO:SubProcess create_model() called ==================================
2023-10-15 22:57:00,994:INFO:Initializing create_model()
2023-10-15 22:57:00,994:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=ridge, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BED7E620>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:57:00,994:INFO:Checking exceptions
2023-10-15 22:57:00,994:INFO:Importing libraries
2023-10-15 22:57:00,995:INFO:Copying training dataset
2023-10-15 22:57:01,002:INFO:Defining folds
2023-10-15 22:57:01,003:INFO:Declaring metric variables
2023-10-15 22:57:01,007:INFO:Importing untrained model
2023-10-15 22:57:01,009:INFO:Ridge Regression Imported successfully
2023-10-15 22:57:01,019:INFO:Starting cross validation
2023-10-15 22:57:01,021:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), n_jobs=-1
2023-10-15 22:57:01,371:INFO:Calculating mean and std
2023-10-15 22:57:01,373:INFO:Creating metrics dataframe
2023-10-15 22:57:01,376:INFO:Uploading results into container
2023-10-15 22:57:01,377:INFO:Uploading model into container now
2023-10-15 22:57:01,378:INFO:_master_model_container: 3
2023-10-15 22:57:01,378:INFO:_display_container: 2
2023-10-15 22:57:01,378:INFO:Ridge(random_state=1234)
2023-10-15 22:57:01,379:INFO:create_model() successfully completed......................................
2023-10-15 22:57:01,590:INFO:SubProcess create_model() end ==================================
2023-10-15 22:57:01,590:INFO:Creating metrics dataframe
2023-10-15 22:57:01,601:INFO:Initializing Elastic Net
2023-10-15 22:57:01,602:INFO:Total runtime is 0.06821475426355998 minutes
2023-10-15 22:57:01,606:INFO:SubProcess create_model() called ==================================
2023-10-15 22:57:01,606:INFO:Initializing create_model()
2023-10-15 22:57:01,606:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=en, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BED7E620>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:57:01,607:INFO:Checking exceptions
2023-10-15 22:57:01,607:INFO:Importing libraries
2023-10-15 22:57:01,607:INFO:Copying training dataset
2023-10-15 22:57:01,613:INFO:Defining folds
2023-10-15 22:57:01,613:INFO:Declaring metric variables
2023-10-15 22:57:01,618:INFO:Importing untrained model
2023-10-15 22:57:01,624:INFO:Elastic Net Imported successfully
2023-10-15 22:57:01,632:INFO:Starting cross validation
2023-10-15 22:57:01,635:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), n_jobs=-1
2023-10-15 22:57:02,029:INFO:Calculating mean and std
2023-10-15 22:57:02,032:INFO:Creating metrics dataframe
2023-10-15 22:57:02,035:INFO:Uploading results into container
2023-10-15 22:57:02,036:INFO:Uploading model into container now
2023-10-15 22:57:02,036:INFO:_master_model_container: 4
2023-10-15 22:57:02,037:INFO:_display_container: 2
2023-10-15 22:57:02,037:INFO:ElasticNet(random_state=1234)
2023-10-15 22:57:02,038:INFO:create_model() successfully completed......................................
2023-10-15 22:57:02,209:INFO:SubProcess create_model() end ==================================
2023-10-15 22:57:02,210:INFO:Creating metrics dataframe
2023-10-15 22:57:02,220:INFO:Initializing Least Angle Regression
2023-10-15 22:57:02,220:INFO:Total runtime is 0.07851282358169556 minutes
2023-10-15 22:57:02,223:INFO:SubProcess create_model() called ==================================
2023-10-15 22:57:02,223:INFO:Initializing create_model()
2023-10-15 22:57:02,223:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=lar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BED7E620>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:57:02,223:INFO:Checking exceptions
2023-10-15 22:57:02,224:INFO:Importing libraries
2023-10-15 22:57:02,224:INFO:Copying training dataset
2023-10-15 22:57:02,228:INFO:Defining folds
2023-10-15 22:57:02,228:INFO:Declaring metric variables
2023-10-15 22:57:02,233:INFO:Importing untrained model
2023-10-15 22:57:02,240:INFO:Least Angle Regression Imported successfully
2023-10-15 22:57:02,250:INFO:Starting cross validation
2023-10-15 22:57:02,253:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), n_jobs=-1
2023-10-15 22:57:02,377:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-15 22:57:02,378:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-15 22:57:02,385:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 22 iterations, i.e. alpha=1.284e-02, with an active set of 21 regressors, and the smallest cholesky pivot element being 5.960e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-15 22:57:02,385:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 24 iterations, i.e. alpha=3.081e-02, with an active set of 21 regressors, and the smallest cholesky pivot element being 5.674e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-15 22:57:02,386:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 25 iterations, i.e. alpha=1.696e-02, with an active set of 22 regressors, and the smallest cholesky pivot element being 5.960e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-15 22:57:02,386:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 25 iterations, i.e. alpha=4.979e-04, with an active set of 22 regressors, and the smallest cholesky pivot element being 4.829e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-15 22:57:02,386:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 28 iterations, i.e. alpha=1.936e-01, with an active set of 22 regressors, and the smallest cholesky pivot element being 5.674e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-15 22:57:02,387:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 25 iterations, i.e. alpha=2.832e-05, with an active set of 22 regressors, and the smallest cholesky pivot element being 4.829e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-15 22:57:02,387:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 32 iterations, i.e. alpha=1.827e+00, with an active set of 23 regressors, and the smallest cholesky pivot element being 5.674e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-15 22:57:02,388:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 34 iterations, i.e. alpha=4.589e-01, with an active set of 24 regressors, and the smallest cholesky pivot element being 5.674e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-15 22:57:02,426:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-15 22:57:02,435:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 29 iterations, i.e. alpha=2.395e-04, with an active set of 24 regressors, and the smallest cholesky pivot element being 8.495e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-15 22:57:02,478:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-15 22:57:02,488:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 28 iterations, i.e. alpha=6.144e-03, with an active set of 24 regressors, and the smallest cholesky pivot element being 5.373e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-15 22:57:02,493:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-15 22:57:02,501:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 24 iterations, i.e. alpha=3.703e-01, with an active set of 19 regressors, and the smallest cholesky pivot element being 3.942e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-15 22:57:02,502:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 29 iterations, i.e. alpha=7.174e-02, with an active set of 23 regressors, and the smallest cholesky pivot element being 3.942e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-15 22:57:02,503:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 31 iterations, i.e. alpha=6.086e-02, with an active set of 24 regressors, and the smallest cholesky pivot element being 3.942e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-15 22:57:02,511:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-15 22:57:02,522:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-15 22:57:02,566:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-15 22:57:02,627:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-15 22:57:02,633:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 23 iterations, i.e. alpha=1.432e-04, with an active set of 22 regressors, and the smallest cholesky pivot element being 7.671e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-15 22:57:02,633:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 23 iterations, i.e. alpha=1.056e-04, with an active set of 22 regressors, and the smallest cholesky pivot element being 7.671e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-15 22:57:02,634:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 23 iterations, i.e. alpha=5.154e-05, with an active set of 22 regressors, and the smallest cholesky pivot element being 8.941e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-10-15 22:57:02,686:INFO:Calculating mean and std
2023-10-15 22:57:02,688:INFO:Creating metrics dataframe
2023-10-15 22:57:02,693:INFO:Uploading results into container
2023-10-15 22:57:02,694:INFO:Uploading model into container now
2023-10-15 22:57:02,695:INFO:_master_model_container: 5
2023-10-15 22:57:02,695:INFO:_display_container: 2
2023-10-15 22:57:02,696:INFO:Lars(random_state=1234)
2023-10-15 22:57:02,697:INFO:create_model() successfully completed......................................
2023-10-15 22:57:02,899:INFO:SubProcess create_model() end ==================================
2023-10-15 22:57:02,899:INFO:Creating metrics dataframe
2023-10-15 22:57:02,908:INFO:Initializing Lasso Least Angle Regression
2023-10-15 22:57:02,908:INFO:Total runtime is 0.08997826178868612 minutes
2023-10-15 22:57:02,911:INFO:SubProcess create_model() called ==================================
2023-10-15 22:57:02,911:INFO:Initializing create_model()
2023-10-15 22:57:02,911:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=llar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BED7E620>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:57:02,911:INFO:Checking exceptions
2023-10-15 22:57:02,911:INFO:Importing libraries
2023-10-15 22:57:02,911:INFO:Copying training dataset
2023-10-15 22:57:02,918:INFO:Defining folds
2023-10-15 22:57:02,918:INFO:Declaring metric variables
2023-10-15 22:57:02,922:INFO:Importing untrained model
2023-10-15 22:57:02,926:INFO:Lasso Least Angle Regression Imported successfully
2023-10-15 22:57:02,933:INFO:Starting cross validation
2023-10-15 22:57:02,935:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), n_jobs=-1
2023-10-15 22:57:03,048:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-15 22:57:03,058:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-15 22:57:03,071:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-15 22:57:03,076:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-15 22:57:03,093:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-15 22:57:03,111:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-15 22:57:03,121:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-15 22:57:03,144:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-15 22:57:03,212:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-15 22:57:03,218:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-10-15 22:57:03,249:INFO:Calculating mean and std
2023-10-15 22:57:03,250:INFO:Creating metrics dataframe
2023-10-15 22:57:03,253:INFO:Uploading results into container
2023-10-15 22:57:03,253:INFO:Uploading model into container now
2023-10-15 22:57:03,254:INFO:_master_model_container: 6
2023-10-15 22:57:03,254:INFO:_display_container: 2
2023-10-15 22:57:03,254:INFO:LassoLars(random_state=1234)
2023-10-15 22:57:03,254:INFO:create_model() successfully completed......................................
2023-10-15 22:57:03,437:INFO:SubProcess create_model() end ==================================
2023-10-15 22:57:03,437:INFO:Creating metrics dataframe
2023-10-15 22:57:03,444:INFO:Initializing Orthogonal Matching Pursuit
2023-10-15 22:57:03,445:INFO:Total runtime is 0.09893264770507813 minutes
2023-10-15 22:57:03,451:INFO:SubProcess create_model() called ==================================
2023-10-15 22:57:03,452:INFO:Initializing create_model()
2023-10-15 22:57:03,452:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=omp, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BED7E620>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:57:03,452:INFO:Checking exceptions
2023-10-15 22:57:03,452:INFO:Importing libraries
2023-10-15 22:57:03,452:INFO:Copying training dataset
2023-10-15 22:57:03,457:INFO:Defining folds
2023-10-15 22:57:03,457:INFO:Declaring metric variables
2023-10-15 22:57:03,460:INFO:Importing untrained model
2023-10-15 22:57:03,466:INFO:Orthogonal Matching Pursuit Imported successfully
2023-10-15 22:57:03,475:INFO:Starting cross validation
2023-10-15 22:57:03,477:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), n_jobs=-1
2023-10-15 22:57:03,586:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-15 22:57:03,591:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-15 22:57:03,618:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-15 22:57:03,632:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-15 22:57:03,642:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-15 22:57:03,645:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-15 22:57:03,672:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-15 22:57:03,709:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-15 22:57:03,754:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-15 22:57:03,775:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-10-15 22:57:03,817:INFO:Calculating mean and std
2023-10-15 22:57:03,819:INFO:Creating metrics dataframe
2023-10-15 22:57:03,821:INFO:Uploading results into container
2023-10-15 22:57:03,822:INFO:Uploading model into container now
2023-10-15 22:57:03,822:INFO:_master_model_container: 7
2023-10-15 22:57:03,823:INFO:_display_container: 2
2023-10-15 22:57:03,823:INFO:OrthogonalMatchingPursuit()
2023-10-15 22:57:03,823:INFO:create_model() successfully completed......................................
2023-10-15 22:57:03,983:INFO:SubProcess create_model() end ==================================
2023-10-15 22:57:03,983:INFO:Creating metrics dataframe
2023-10-15 22:57:03,991:INFO:Initializing Bayesian Ridge
2023-10-15 22:57:03,991:INFO:Total runtime is 0.10802905162175497 minutes
2023-10-15 22:57:03,994:INFO:SubProcess create_model() called ==================================
2023-10-15 22:57:03,994:INFO:Initializing create_model()
2023-10-15 22:57:03,994:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=br, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BED7E620>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:57:03,995:INFO:Checking exceptions
2023-10-15 22:57:03,995:INFO:Importing libraries
2023-10-15 22:57:03,995:INFO:Copying training dataset
2023-10-15 22:57:04,004:INFO:Defining folds
2023-10-15 22:57:04,004:INFO:Declaring metric variables
2023-10-15 22:57:04,007:INFO:Importing untrained model
2023-10-15 22:57:04,010:INFO:Bayesian Ridge Imported successfully
2023-10-15 22:57:04,021:INFO:Starting cross validation
2023-10-15 22:57:04,023:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), n_jobs=-1
2023-10-15 22:57:04,335:INFO:Calculating mean and std
2023-10-15 22:57:04,336:INFO:Creating metrics dataframe
2023-10-15 22:57:04,338:INFO:Uploading results into container
2023-10-15 22:57:04,339:INFO:Uploading model into container now
2023-10-15 22:57:04,339:INFO:_master_model_container: 8
2023-10-15 22:57:04,339:INFO:_display_container: 2
2023-10-15 22:57:04,340:INFO:BayesianRidge()
2023-10-15 22:57:04,340:INFO:create_model() successfully completed......................................
2023-10-15 22:57:04,593:INFO:SubProcess create_model() end ==================================
2023-10-15 22:57:04,593:INFO:Creating metrics dataframe
2023-10-15 22:57:04,612:INFO:Initializing Passive Aggressive Regressor
2023-10-15 22:57:04,612:INFO:Total runtime is 0.11837161382039388 minutes
2023-10-15 22:57:04,618:INFO:SubProcess create_model() called ==================================
2023-10-15 22:57:04,619:INFO:Initializing create_model()
2023-10-15 22:57:04,619:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=par, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BED7E620>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:57:04,619:INFO:Checking exceptions
2023-10-15 22:57:04,619:INFO:Importing libraries
2023-10-15 22:57:04,619:INFO:Copying training dataset
2023-10-15 22:57:04,626:INFO:Defining folds
2023-10-15 22:57:04,626:INFO:Declaring metric variables
2023-10-15 22:57:04,633:INFO:Importing untrained model
2023-10-15 22:57:04,639:INFO:Passive Aggressive Regressor Imported successfully
2023-10-15 22:57:04,649:INFO:Starting cross validation
2023-10-15 22:57:04,652:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), n_jobs=-1
2023-10-15 22:57:05,059:INFO:Calculating mean and std
2023-10-15 22:57:05,060:INFO:Creating metrics dataframe
2023-10-15 22:57:05,063:INFO:Uploading results into container
2023-10-15 22:57:05,064:INFO:Uploading model into container now
2023-10-15 22:57:05,065:INFO:_master_model_container: 9
2023-10-15 22:57:05,065:INFO:_display_container: 2
2023-10-15 22:57:05,065:INFO:PassiveAggressiveRegressor(random_state=1234)
2023-10-15 22:57:05,065:INFO:create_model() successfully completed......................................
2023-10-15 22:57:05,220:INFO:SubProcess create_model() end ==================================
2023-10-15 22:57:05,220:INFO:Creating metrics dataframe
2023-10-15 22:57:05,229:INFO:Initializing Huber Regressor
2023-10-15 22:57:05,230:INFO:Total runtime is 0.1286853313446045 minutes
2023-10-15 22:57:05,233:INFO:SubProcess create_model() called ==================================
2023-10-15 22:57:05,233:INFO:Initializing create_model()
2023-10-15 22:57:05,233:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=huber, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BED7E620>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:57:05,233:INFO:Checking exceptions
2023-10-15 22:57:05,233:INFO:Importing libraries
2023-10-15 22:57:05,233:INFO:Copying training dataset
2023-10-15 22:57:05,238:INFO:Defining folds
2023-10-15 22:57:05,238:INFO:Declaring metric variables
2023-10-15 22:57:05,241:INFO:Importing untrained model
2023-10-15 22:57:05,245:INFO:Huber Regressor Imported successfully
2023-10-15 22:57:05,254:INFO:Starting cross validation
2023-10-15 22:57:05,256:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), n_jobs=-1
2023-10-15 22:57:05,406:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-10-15 22:57:05,454:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-10-15 22:57:05,468:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-10-15 22:57:05,472:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-10-15 22:57:05,510:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-10-15 22:57:05,558:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-10-15 22:57:05,571:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-10-15 22:57:05,644:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-10-15 22:57:05,692:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-10-15 22:57:05,737:WARNING:c:\Users\manue\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-10-15 22:57:05,756:INFO:Calculating mean and std
2023-10-15 22:57:05,758:INFO:Creating metrics dataframe
2023-10-15 22:57:05,761:INFO:Uploading results into container
2023-10-15 22:57:05,761:INFO:Uploading model into container now
2023-10-15 22:57:05,762:INFO:_master_model_container: 10
2023-10-15 22:57:05,762:INFO:_display_container: 2
2023-10-15 22:57:05,762:INFO:HuberRegressor()
2023-10-15 22:57:05,763:INFO:create_model() successfully completed......................................
2023-10-15 22:57:05,910:INFO:SubProcess create_model() end ==================================
2023-10-15 22:57:05,910:INFO:Creating metrics dataframe
2023-10-15 22:57:05,922:INFO:Initializing K Neighbors Regressor
2023-10-15 22:57:05,922:INFO:Total runtime is 0.14020387331644696 minutes
2023-10-15 22:57:05,924:INFO:SubProcess create_model() called ==================================
2023-10-15 22:57:05,924:INFO:Initializing create_model()
2023-10-15 22:57:05,926:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=knn, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BED7E620>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:57:05,926:INFO:Checking exceptions
2023-10-15 22:57:05,926:INFO:Importing libraries
2023-10-15 22:57:05,926:INFO:Copying training dataset
2023-10-15 22:57:05,932:INFO:Defining folds
2023-10-15 22:57:05,932:INFO:Declaring metric variables
2023-10-15 22:57:05,935:INFO:Importing untrained model
2023-10-15 22:57:05,940:INFO:K Neighbors Regressor Imported successfully
2023-10-15 22:57:05,947:INFO:Starting cross validation
2023-10-15 22:57:05,950:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), n_jobs=-1
2023-10-15 22:57:06,639:INFO:Calculating mean and std
2023-10-15 22:57:06,642:INFO:Creating metrics dataframe
2023-10-15 22:57:06,648:INFO:Uploading results into container
2023-10-15 22:57:06,649:INFO:Uploading model into container now
2023-10-15 22:57:06,650:INFO:_master_model_container: 11
2023-10-15 22:57:06,650:INFO:_display_container: 2
2023-10-15 22:57:06,650:INFO:KNeighborsRegressor(n_jobs=-1)
2023-10-15 22:57:06,650:INFO:create_model() successfully completed......................................
2023-10-15 22:57:06,809:INFO:SubProcess create_model() end ==================================
2023-10-15 22:57:06,809:INFO:Creating metrics dataframe
2023-10-15 22:57:06,820:INFO:Initializing Decision Tree Regressor
2023-10-15 22:57:06,820:INFO:Total runtime is 0.15517279307047527 minutes
2023-10-15 22:57:06,822:INFO:SubProcess create_model() called ==================================
2023-10-15 22:57:06,822:INFO:Initializing create_model()
2023-10-15 22:57:06,822:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=dt, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BED7E620>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:57:06,822:INFO:Checking exceptions
2023-10-15 22:57:06,822:INFO:Importing libraries
2023-10-15 22:57:06,823:INFO:Copying training dataset
2023-10-15 22:57:06,828:INFO:Defining folds
2023-10-15 22:57:06,828:INFO:Declaring metric variables
2023-10-15 22:57:06,834:INFO:Importing untrained model
2023-10-15 22:57:06,839:INFO:Decision Tree Regressor Imported successfully
2023-10-15 22:57:06,845:INFO:Starting cross validation
2023-10-15 22:57:06,847:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), n_jobs=-1
2023-10-15 22:57:07,206:INFO:Calculating mean and std
2023-10-15 22:57:07,208:INFO:Creating metrics dataframe
2023-10-15 22:57:07,211:INFO:Uploading results into container
2023-10-15 22:57:07,212:INFO:Uploading model into container now
2023-10-15 22:57:07,214:INFO:_master_model_container: 12
2023-10-15 22:57:07,214:INFO:_display_container: 2
2023-10-15 22:57:07,214:INFO:DecisionTreeRegressor(random_state=1234)
2023-10-15 22:57:07,214:INFO:create_model() successfully completed......................................
2023-10-15 22:57:07,364:INFO:SubProcess create_model() end ==================================
2023-10-15 22:57:07,364:INFO:Creating metrics dataframe
2023-10-15 22:57:07,374:INFO:Initializing Random Forest Regressor
2023-10-15 22:57:07,374:INFO:Total runtime is 0.1644095818201701 minutes
2023-10-15 22:57:07,376:INFO:SubProcess create_model() called ==================================
2023-10-15 22:57:07,376:INFO:Initializing create_model()
2023-10-15 22:57:07,376:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=rf, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BED7E620>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:57:07,377:INFO:Checking exceptions
2023-10-15 22:57:07,377:INFO:Importing libraries
2023-10-15 22:57:07,377:INFO:Copying training dataset
2023-10-15 22:57:07,384:INFO:Defining folds
2023-10-15 22:57:07,384:INFO:Declaring metric variables
2023-10-15 22:57:07,388:INFO:Importing untrained model
2023-10-15 22:57:07,393:INFO:Random Forest Regressor Imported successfully
2023-10-15 22:57:07,402:INFO:Starting cross validation
2023-10-15 22:57:07,404:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), n_jobs=-1
2023-10-15 22:57:10,173:INFO:Calculating mean and std
2023-10-15 22:57:10,175:INFO:Creating metrics dataframe
2023-10-15 22:57:10,184:INFO:Uploading results into container
2023-10-15 22:57:10,185:INFO:Uploading model into container now
2023-10-15 22:57:10,185:INFO:_master_model_container: 13
2023-10-15 22:57:10,185:INFO:_display_container: 2
2023-10-15 22:57:10,185:INFO:RandomForestRegressor(n_jobs=-1, random_state=1234)
2023-10-15 22:57:10,186:INFO:create_model() successfully completed......................................
2023-10-15 22:57:10,428:INFO:SubProcess create_model() end ==================================
2023-10-15 22:57:10,428:INFO:Creating metrics dataframe
2023-10-15 22:57:10,440:INFO:Initializing Extra Trees Regressor
2023-10-15 22:57:10,440:INFO:Total runtime is 0.21551723877588908 minutes
2023-10-15 22:57:10,443:INFO:SubProcess create_model() called ==================================
2023-10-15 22:57:10,443:INFO:Initializing create_model()
2023-10-15 22:57:10,443:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=et, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BED7E620>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:57:10,443:INFO:Checking exceptions
2023-10-15 22:57:10,443:INFO:Importing libraries
2023-10-15 22:57:10,443:INFO:Copying training dataset
2023-10-15 22:57:10,450:INFO:Defining folds
2023-10-15 22:57:10,451:INFO:Declaring metric variables
2023-10-15 22:57:10,455:INFO:Importing untrained model
2023-10-15 22:57:10,458:INFO:Extra Trees Regressor Imported successfully
2023-10-15 22:57:10,467:INFO:Starting cross validation
2023-10-15 22:57:10,469:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), n_jobs=-1
2023-10-15 22:57:12,804:INFO:Calculating mean and std
2023-10-15 22:57:12,805:INFO:Creating metrics dataframe
2023-10-15 22:57:12,809:INFO:Uploading results into container
2023-10-15 22:57:12,809:INFO:Uploading model into container now
2023-10-15 22:57:12,810:INFO:_master_model_container: 14
2023-10-15 22:57:12,810:INFO:_display_container: 2
2023-10-15 22:57:12,811:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1234)
2023-10-15 22:57:12,811:INFO:create_model() successfully completed......................................
2023-10-15 22:57:12,963:INFO:SubProcess create_model() end ==================================
2023-10-15 22:57:12,963:INFO:Creating metrics dataframe
2023-10-15 22:57:12,974:INFO:Initializing AdaBoost Regressor
2023-10-15 22:57:12,974:INFO:Total runtime is 0.25773853063583374 minutes
2023-10-15 22:57:12,978:INFO:SubProcess create_model() called ==================================
2023-10-15 22:57:12,978:INFO:Initializing create_model()
2023-10-15 22:57:12,978:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=ada, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BED7E620>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:57:12,979:INFO:Checking exceptions
2023-10-15 22:57:12,979:INFO:Importing libraries
2023-10-15 22:57:12,979:INFO:Copying training dataset
2023-10-15 22:57:12,984:INFO:Defining folds
2023-10-15 22:57:12,984:INFO:Declaring metric variables
2023-10-15 22:57:12,988:INFO:Importing untrained model
2023-10-15 22:57:12,992:INFO:AdaBoost Regressor Imported successfully
2023-10-15 22:57:12,998:INFO:Starting cross validation
2023-10-15 22:57:12,999:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), n_jobs=-1
2023-10-15 22:57:13,938:INFO:Calculating mean and std
2023-10-15 22:57:13,939:INFO:Creating metrics dataframe
2023-10-15 22:57:13,943:INFO:Uploading results into container
2023-10-15 22:57:13,943:INFO:Uploading model into container now
2023-10-15 22:57:13,944:INFO:_master_model_container: 15
2023-10-15 22:57:13,944:INFO:_display_container: 2
2023-10-15 22:57:13,945:INFO:AdaBoostRegressor(random_state=1234)
2023-10-15 22:57:13,945:INFO:create_model() successfully completed......................................
2023-10-15 22:57:14,165:INFO:SubProcess create_model() end ==================================
2023-10-15 22:57:14,165:INFO:Creating metrics dataframe
2023-10-15 22:57:14,179:INFO:Initializing Gradient Boosting Regressor
2023-10-15 22:57:14,179:INFO:Total runtime is 0.2778219938278198 minutes
2023-10-15 22:57:14,184:INFO:SubProcess create_model() called ==================================
2023-10-15 22:57:14,184:INFO:Initializing create_model()
2023-10-15 22:57:14,184:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=gbr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BED7E620>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:57:14,184:INFO:Checking exceptions
2023-10-15 22:57:14,184:INFO:Importing libraries
2023-10-15 22:57:14,185:INFO:Copying training dataset
2023-10-15 22:57:14,189:INFO:Defining folds
2023-10-15 22:57:14,189:INFO:Declaring metric variables
2023-10-15 22:57:14,193:INFO:Importing untrained model
2023-10-15 22:57:14,199:INFO:Gradient Boosting Regressor Imported successfully
2023-10-15 22:57:14,205:INFO:Starting cross validation
2023-10-15 22:57:14,206:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), n_jobs=-1
2023-10-15 22:57:15,482:INFO:Calculating mean and std
2023-10-15 22:57:15,483:INFO:Creating metrics dataframe
2023-10-15 22:57:15,485:INFO:Uploading results into container
2023-10-15 22:57:15,485:INFO:Uploading model into container now
2023-10-15 22:57:15,486:INFO:_master_model_container: 16
2023-10-15 22:57:15,486:INFO:_display_container: 2
2023-10-15 22:57:15,487:INFO:GradientBoostingRegressor(random_state=1234)
2023-10-15 22:57:15,487:INFO:create_model() successfully completed......................................
2023-10-15 22:57:15,631:INFO:SubProcess create_model() end ==================================
2023-10-15 22:57:15,632:INFO:Creating metrics dataframe
2023-10-15 22:57:15,643:INFO:Initializing Extreme Gradient Boosting
2023-10-15 22:57:15,644:INFO:Total runtime is 0.3022471944491068 minutes
2023-10-15 22:57:15,648:INFO:SubProcess create_model() called ==================================
2023-10-15 22:57:15,648:INFO:Initializing create_model()
2023-10-15 22:57:15,648:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=xgboost, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BED7E620>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:57:15,648:INFO:Checking exceptions
2023-10-15 22:57:15,649:INFO:Importing libraries
2023-10-15 22:57:15,649:INFO:Copying training dataset
2023-10-15 22:57:15,654:INFO:Defining folds
2023-10-15 22:57:15,654:INFO:Declaring metric variables
2023-10-15 22:57:15,658:INFO:Importing untrained model
2023-10-15 22:57:15,664:INFO:Extreme Gradient Boosting Imported successfully
2023-10-15 22:57:15,672:INFO:Starting cross validation
2023-10-15 22:57:15,673:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), n_jobs=-1
2023-10-15 22:57:16,669:INFO:Calculating mean and std
2023-10-15 22:57:16,672:INFO:Creating metrics dataframe
2023-10-15 22:57:16,678:INFO:Uploading results into container
2023-10-15 22:57:16,679:INFO:Uploading model into container now
2023-10-15 22:57:16,680:INFO:_master_model_container: 17
2023-10-15 22:57:16,680:INFO:_display_container: 2
2023-10-15 22:57:16,681:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=1234, ...)
2023-10-15 22:57:16,681:INFO:create_model() successfully completed......................................
2023-10-15 22:57:16,884:INFO:SubProcess create_model() end ==================================
2023-10-15 22:57:16,884:INFO:Creating metrics dataframe
2023-10-15 22:57:16,894:INFO:Initializing Light Gradient Boosting Machine
2023-10-15 22:57:16,895:INFO:Total runtime is 0.32309323549270624 minutes
2023-10-15 22:57:16,898:INFO:SubProcess create_model() called ==================================
2023-10-15 22:57:16,898:INFO:Initializing create_model()
2023-10-15 22:57:16,898:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=lightgbm, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BED7E620>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:57:16,898:INFO:Checking exceptions
2023-10-15 22:57:16,898:INFO:Importing libraries
2023-10-15 22:57:16,898:INFO:Copying training dataset
2023-10-15 22:57:16,903:INFO:Defining folds
2023-10-15 22:57:16,903:INFO:Declaring metric variables
2023-10-15 22:57:16,906:INFO:Importing untrained model
2023-10-15 22:57:16,913:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-15 22:57:16,919:INFO:Starting cross validation
2023-10-15 22:57:16,921:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), n_jobs=-1
2023-10-15 22:57:18,038:INFO:Calculating mean and std
2023-10-15 22:57:18,040:INFO:Creating metrics dataframe
2023-10-15 22:57:18,046:INFO:Uploading results into container
2023-10-15 22:57:18,047:INFO:Uploading model into container now
2023-10-15 22:57:18,048:INFO:_master_model_container: 18
2023-10-15 22:57:18,048:INFO:_display_container: 2
2023-10-15 22:57:18,048:INFO:LGBMRegressor(n_jobs=-1, random_state=1234)
2023-10-15 22:57:18,048:INFO:create_model() successfully completed......................................
2023-10-15 22:57:18,206:INFO:SubProcess create_model() end ==================================
2023-10-15 22:57:18,206:INFO:Creating metrics dataframe
2023-10-15 22:57:18,218:INFO:Initializing Dummy Regressor
2023-10-15 22:57:18,218:INFO:Total runtime is 0.3451433897018432 minutes
2023-10-15 22:57:18,221:INFO:SubProcess create_model() called ==================================
2023-10-15 22:57:18,221:INFO:Initializing create_model()
2023-10-15 22:57:18,222:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=dummy, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291BED7E620>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:57:18,222:INFO:Checking exceptions
2023-10-15 22:57:18,222:INFO:Importing libraries
2023-10-15 22:57:18,222:INFO:Copying training dataset
2023-10-15 22:57:18,227:INFO:Defining folds
2023-10-15 22:57:18,227:INFO:Declaring metric variables
2023-10-15 22:57:18,231:INFO:Importing untrained model
2023-10-15 22:57:18,235:INFO:Dummy Regressor Imported successfully
2023-10-15 22:57:18,241:INFO:Starting cross validation
2023-10-15 22:57:18,244:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), n_jobs=-1
2023-10-15 22:57:18,524:INFO:Calculating mean and std
2023-10-15 22:57:18,525:INFO:Creating metrics dataframe
2023-10-15 22:57:18,530:INFO:Uploading results into container
2023-10-15 22:57:18,531:INFO:Uploading model into container now
2023-10-15 22:57:18,531:INFO:_master_model_container: 19
2023-10-15 22:57:18,531:INFO:_display_container: 2
2023-10-15 22:57:18,531:INFO:DummyRegressor()
2023-10-15 22:57:18,531:INFO:create_model() successfully completed......................................
2023-10-15 22:57:18,684:INFO:SubProcess create_model() end ==================================
2023-10-15 22:57:18,684:INFO:Creating metrics dataframe
2023-10-15 22:57:18,709:INFO:Initializing create_model()
2023-10-15 22:57:18,709:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=LGBMRegressor(n_jobs=-1, random_state=1234), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:57:18,710:INFO:Checking exceptions
2023-10-15 22:57:18,713:INFO:Importing libraries
2023-10-15 22:57:18,713:INFO:Copying training dataset
2023-10-15 22:57:18,717:INFO:Defining folds
2023-10-15 22:57:18,717:INFO:Declaring metric variables
2023-10-15 22:57:18,717:INFO:Importing untrained model
2023-10-15 22:57:18,717:INFO:Declaring custom model
2023-10-15 22:57:18,717:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-15 22:57:18,718:INFO:Cross validation set to False
2023-10-15 22:57:18,718:INFO:Fitting Model
2023-10-15 22:57:18,805:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000244 seconds.
2023-10-15 22:57:18,805:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:57:18,805:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:57:18,805:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:57:18,805:INFO:[LightGBM] [Info] Start training from score 361.942261
2023-10-15 22:57:18,878:INFO:LGBMRegressor(n_jobs=-1, random_state=1234)
2023-10-15 22:57:18,878:INFO:create_model() successfully completed......................................
2023-10-15 22:57:19,082:INFO:_master_model_container: 19
2023-10-15 22:57:19,082:INFO:_display_container: 2
2023-10-15 22:57:19,083:INFO:LGBMRegressor(n_jobs=-1, random_state=1234)
2023-10-15 22:57:19,083:INFO:compare_models() successfully completed......................................
2023-10-15 22:57:46,143:INFO:Initializing tune_model()
2023-10-15 22:57:46,143:INFO:tune_model(estimator=LGBMRegressor(n_jobs=-1, random_state=1234), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>)
2023-10-15 22:57:46,143:INFO:Checking exceptions
2023-10-15 22:57:46,183:INFO:Copying training dataset
2023-10-15 22:57:46,189:INFO:Checking base model
2023-10-15 22:57:46,189:INFO:Base model : Light Gradient Boosting Machine
2023-10-15 22:57:46,193:INFO:Declaring metric variables
2023-10-15 22:57:46,196:INFO:Defining Hyperparameters
2023-10-15 22:57:46,455:INFO:Tuning with n_jobs=-1
2023-10-15 22:57:46,455:INFO:Initializing RandomizedSearchCV
2023-10-15 22:58:00,491:INFO:best_params: {'actual_estimator__reg_lambda': 0.3, 'actual_estimator__reg_alpha': 3, 'actual_estimator__num_leaves': 30, 'actual_estimator__n_estimators': 230, 'actual_estimator__min_split_gain': 0.3, 'actual_estimator__min_child_samples': 91, 'actual_estimator__learning_rate': 0.1, 'actual_estimator__feature_fraction': 0.5, 'actual_estimator__bagging_freq': 0, 'actual_estimator__bagging_fraction': 0.7}
2023-10-15 22:58:00,493:INFO:Hyperparameter search completed
2023-10-15 22:58:00,493:INFO:SubProcess create_model() called ==================================
2023-10-15 22:58:00,494:INFO:Initializing create_model()
2023-10-15 22:58:00,494:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=LGBMRegressor(n_jobs=-1, random_state=1234), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291B7F7A410>, model_only=True, return_train_score=False, kwargs={'reg_lambda': 0.3, 'reg_alpha': 3, 'num_leaves': 30, 'n_estimators': 230, 'min_split_gain': 0.3, 'min_child_samples': 91, 'learning_rate': 0.1, 'feature_fraction': 0.5, 'bagging_freq': 0, 'bagging_fraction': 0.7})
2023-10-15 22:58:00,495:INFO:Checking exceptions
2023-10-15 22:58:00,495:INFO:Importing libraries
2023-10-15 22:58:00,495:INFO:Copying training dataset
2023-10-15 22:58:00,503:INFO:Defining folds
2023-10-15 22:58:00,503:INFO:Declaring metric variables
2023-10-15 22:58:00,506:INFO:Importing untrained model
2023-10-15 22:58:00,506:INFO:Declaring custom model
2023-10-15 22:58:00,512:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-15 22:58:00,521:INFO:Starting cross validation
2023-10-15 22:58:00,523:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), n_jobs=-1
2023-10-15 22:58:02,516:INFO:Calculating mean and std
2023-10-15 22:58:02,518:INFO:Creating metrics dataframe
2023-10-15 22:58:02,524:INFO:Finalizing model
2023-10-15 22:58:02,625:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:58:02,626:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:58:02,626:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:58:02,631:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2023-10-15 22:58:02,631:INFO:[LightGBM] [Warning] bagging_fraction is set=0.7, subsample=1.0 will be ignored. Current value: bagging_fraction=0.7
2023-10-15 22:58:02,631:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2023-10-15 22:58:02,631:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000057 seconds.
2023-10-15 22:58:02,632:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-10-15 22:58:02,632:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-10-15 22:58:02,632:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:58:02,632:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:58:02,632:INFO:[LightGBM] [Info] Start training from score 361.942261
2023-10-15 22:58:02,650:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:58:02,793:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-10-15 22:58:02,829:INFO:Uploading results into container
2023-10-15 22:58:02,830:INFO:Uploading model into container now
2023-10-15 22:58:02,831:INFO:_master_model_container: 20
2023-10-15 22:58:02,831:INFO:_display_container: 3
2023-10-15 22:58:02,832:INFO:LGBMRegressor(bagging_fraction=0.7, bagging_freq=0, feature_fraction=0.5,
              min_child_samples=91, min_split_gain=0.3, n_estimators=230,
              n_jobs=-1, num_leaves=30, random_state=1234, reg_alpha=3,
              reg_lambda=0.3)
2023-10-15 22:58:02,832:INFO:create_model() successfully completed......................................
2023-10-15 22:58:03,002:INFO:SubProcess create_model() end ==================================
2023-10-15 22:58:03,002:INFO:choose_better activated
2023-10-15 22:58:03,005:INFO:SubProcess create_model() called ==================================
2023-10-15 22:58:03,005:INFO:Initializing create_model()
2023-10-15 22:58:03,005:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=LGBMRegressor(n_jobs=-1, random_state=1234), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:58:03,005:INFO:Checking exceptions
2023-10-15 22:58:03,007:INFO:Importing libraries
2023-10-15 22:58:03,007:INFO:Copying training dataset
2023-10-15 22:58:03,013:INFO:Defining folds
2023-10-15 22:58:03,013:INFO:Declaring metric variables
2023-10-15 22:58:03,013:INFO:Importing untrained model
2023-10-15 22:58:03,013:INFO:Declaring custom model
2023-10-15 22:58:03,014:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-15 22:58:03,014:INFO:Starting cross validation
2023-10-15 22:58:03,015:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), n_jobs=-1
2023-10-15 22:58:04,280:INFO:Calculating mean and std
2023-10-15 22:58:04,281:INFO:Creating metrics dataframe
2023-10-15 22:58:04,283:INFO:Finalizing model
2023-10-15 22:58:04,382:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000207 seconds.
2023-10-15 22:58:04,382:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:58:04,382:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:58:04,383:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:58:04,383:INFO:[LightGBM] [Info] Start training from score 361.942261
2023-10-15 22:58:04,474:INFO:Uploading results into container
2023-10-15 22:58:04,474:INFO:Uploading model into container now
2023-10-15 22:58:04,475:INFO:_master_model_container: 21
2023-10-15 22:58:04,475:INFO:_display_container: 4
2023-10-15 22:58:04,475:INFO:LGBMRegressor(n_jobs=-1, random_state=1234)
2023-10-15 22:58:04,475:INFO:create_model() successfully completed......................................
2023-10-15 22:58:04,641:INFO:SubProcess create_model() end ==================================
2023-10-15 22:58:04,641:INFO:LGBMRegressor(n_jobs=-1, random_state=1234) result for R2 is 0.7286
2023-10-15 22:58:04,642:INFO:LGBMRegressor(bagging_fraction=0.7, bagging_freq=0, feature_fraction=0.5,
              min_child_samples=91, min_split_gain=0.3, n_estimators=230,
              n_jobs=-1, num_leaves=30, random_state=1234, reg_alpha=3,
              reg_lambda=0.3) result for R2 is 0.7164
2023-10-15 22:58:04,643:INFO:LGBMRegressor(n_jobs=-1, random_state=1234) is best model
2023-10-15 22:58:04,643:INFO:choose_better completed
2023-10-15 22:58:04,643:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-10-15 22:58:04,651:INFO:_master_model_container: 21
2023-10-15 22:58:04,651:INFO:_display_container: 3
2023-10-15 22:58:04,652:INFO:LGBMRegressor(n_jobs=-1, random_state=1234)
2023-10-15 22:58:04,652:INFO:tune_model() successfully completed......................................
2023-10-15 22:58:19,234:INFO:Initializing ensemble_model()
2023-10-15 22:58:19,234:INFO:ensemble_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=LGBMRegressor(n_jobs=-1, random_state=1234), method=Bagging, fold=None, n_estimators=10, round=4, choose_better=True, optimize=R2, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2023-10-15 22:58:19,234:INFO:Checking exceptions
2023-10-15 22:58:19,265:INFO:Importing libraries
2023-10-15 22:58:19,267:INFO:Copying training dataset
2023-10-15 22:58:19,267:INFO:Checking base model
2023-10-15 22:58:19,267:INFO:Base model : Light Gradient Boosting Machine
2023-10-15 22:58:19,275:INFO:Importing untrained ensembler
2023-10-15 22:58:19,275:INFO:Ensemble method set to Bagging
2023-10-15 22:58:19,275:INFO:SubProcess create_model() called ==================================
2023-10-15 22:58:19,276:INFO:Initializing create_model()
2023-10-15 22:58:19,277:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=BaggingRegressor(base_estimator=LGBMRegressor(n_jobs=-1, random_state=1234),
                 random_state=1234), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000291D1C3BB80>, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:58:19,277:INFO:Checking exceptions
2023-10-15 22:58:19,277:INFO:Importing libraries
2023-10-15 22:58:19,277:INFO:Copying training dataset
2023-10-15 22:58:19,282:INFO:Defining folds
2023-10-15 22:58:19,282:INFO:Declaring metric variables
2023-10-15 22:58:19,285:INFO:Importing untrained model
2023-10-15 22:58:19,287:INFO:Declaring custom model
2023-10-15 22:58:19,294:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-15 22:58:19,301:INFO:Starting cross validation
2023-10-15 22:58:19,303:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), n_jobs=-1
2023-10-15 22:58:29,630:INFO:Calculating mean and std
2023-10-15 22:58:29,632:INFO:Creating metrics dataframe
2023-10-15 22:58:29,642:INFO:Finalizing model
2023-10-15 22:58:29,743:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000195 seconds.
2023-10-15 22:58:29,743:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:58:29,744:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:58:29,744:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:58:29,744:INFO:[LightGBM] [Info] Start training from score 361.461216
2023-10-15 22:58:29,971:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000231 seconds.
2023-10-15 22:58:29,972:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:58:29,972:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:58:29,972:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:58:29,972:INFO:[LightGBM] [Info] Start training from score 362.048122
2023-10-15 22:58:30,057:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000285 seconds.
2023-10-15 22:58:30,057:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:58:30,057:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:58:30,058:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:58:30,058:INFO:[LightGBM] [Info] Start training from score 362.152229
2023-10-15 22:58:30,140:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000242 seconds.
2023-10-15 22:58:30,141:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:58:30,141:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:58:30,141:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:58:30,141:INFO:[LightGBM] [Info] Start training from score 361.120814
2023-10-15 22:58:30,223:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000200 seconds.
2023-10-15 22:58:30,223:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:58:30,223:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:58:30,223:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:58:30,224:INFO:[LightGBM] [Info] Start training from score 362.010807
2023-10-15 22:58:30,303:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000201 seconds.
2023-10-15 22:58:30,303:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:58:30,303:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:58:30,303:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:58:30,303:INFO:[LightGBM] [Info] Start training from score 361.960496
2023-10-15 22:58:30,390:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000202 seconds.
2023-10-15 22:58:30,391:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:58:30,391:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:58:30,391:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:58:30,391:INFO:[LightGBM] [Info] Start training from score 361.852436
2023-10-15 22:58:30,474:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000198 seconds.
2023-10-15 22:58:30,474:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:58:30,474:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:58:30,474:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:58:30,474:INFO:[LightGBM] [Info] Start training from score 361.515665
2023-10-15 22:58:30,558:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000213 seconds.
2023-10-15 22:58:30,559:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:58:30,559:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:58:30,559:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:58:30,559:INFO:[LightGBM] [Info] Start training from score 361.132447
2023-10-15 22:58:30,656:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000238 seconds.
2023-10-15 22:58:30,656:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:58:30,657:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:58:30,657:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:58:30,657:INFO:[LightGBM] [Info] Start training from score 360.648827
2023-10-15 22:58:30,741:INFO:Uploading results into container
2023-10-15 22:58:30,742:INFO:Uploading model into container now
2023-10-15 22:58:30,743:INFO:_master_model_container: 22
2023-10-15 22:58:30,743:INFO:_display_container: 4
2023-10-15 22:58:30,744:INFO:BaggingRegressor(base_estimator=LGBMRegressor(n_jobs=-1, random_state=1234),
                 random_state=1234)
2023-10-15 22:58:30,744:INFO:create_model() successfully completed......................................
2023-10-15 22:58:30,951:INFO:SubProcess create_model() end ==================================
2023-10-15 22:58:30,951:INFO:choose_better activated
2023-10-15 22:58:30,956:INFO:SubProcess create_model() called ==================================
2023-10-15 22:58:30,957:INFO:Initializing create_model()
2023-10-15 22:58:30,957:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=LGBMRegressor(n_jobs=-1, random_state=1234), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-15 22:58:30,958:INFO:Checking exceptions
2023-10-15 22:58:30,960:INFO:Importing libraries
2023-10-15 22:58:30,960:INFO:Copying training dataset
2023-10-15 22:58:30,963:INFO:Defining folds
2023-10-15 22:58:30,964:INFO:Declaring metric variables
2023-10-15 22:58:30,964:INFO:Importing untrained model
2023-10-15 22:58:30,964:INFO:Declaring custom model
2023-10-15 22:58:30,964:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-15 22:58:30,965:INFO:Starting cross validation
2023-10-15 22:58:30,965:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=10, test_size=None), n_jobs=-1
2023-10-15 22:58:32,365:INFO:Calculating mean and std
2023-10-15 22:58:32,365:INFO:Creating metrics dataframe
2023-10-15 22:58:32,368:INFO:Finalizing model
2023-10-15 22:58:32,466:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000461 seconds.
2023-10-15 22:58:32,466:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:58:32,466:INFO:[LightGBM] [Info] Total Bins 1069
2023-10-15 22:58:32,466:INFO:[LightGBM] [Info] Number of data points in the train set: 5506, number of used features: 25
2023-10-15 22:58:32,467:INFO:[LightGBM] [Info] Start training from score 361.942261
2023-10-15 22:58:32,545:INFO:Uploading results into container
2023-10-15 22:58:32,545:INFO:Uploading model into container now
2023-10-15 22:58:32,546:INFO:_master_model_container: 23
2023-10-15 22:58:32,546:INFO:_display_container: 5
2023-10-15 22:58:32,547:INFO:LGBMRegressor(n_jobs=-1, random_state=1234)
2023-10-15 22:58:32,547:INFO:create_model() successfully completed......................................
2023-10-15 22:58:32,721:INFO:SubProcess create_model() end ==================================
2023-10-15 22:58:32,721:INFO:LGBMRegressor(n_jobs=-1, random_state=1234) result for R2 is 0.7286
2023-10-15 22:58:32,722:INFO:BaggingRegressor(base_estimator=LGBMRegressor(n_jobs=-1, random_state=1234),
                 random_state=1234) result for R2 is 0.7301
2023-10-15 22:58:32,723:INFO:BaggingRegressor(base_estimator=LGBMRegressor(n_jobs=-1, random_state=1234),
                 random_state=1234) is best model
2023-10-15 22:58:32,723:INFO:choose_better completed
2023-10-15 22:58:32,732:INFO:_master_model_container: 23
2023-10-15 22:58:32,732:INFO:_display_container: 4
2023-10-15 22:58:32,735:INFO:BaggingRegressor(base_estimator=LGBMRegressor(n_jobs=-1, random_state=1234),
                 random_state=1234)
2023-10-15 22:58:32,735:INFO:ensemble_model() successfully completed......................................
2023-10-15 22:59:11,684:INFO:Initializing predict_model()
2023-10-15 22:59:11,684:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=LGBMRegressor(n_jobs=-1, random_state=1234), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000291BDD94940>)
2023-10-15 22:59:11,684:INFO:Checking exceptions
2023-10-15 22:59:11,684:INFO:Preloading libraries
2023-10-15 22:59:16,478:INFO:Initializing predict_model()
2023-10-15 22:59:16,479:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=LGBMRegressor(n_jobs=-1, random_state=1234), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000291BDD948B0>)
2023-10-15 22:59:16,479:INFO:Checking exceptions
2023-10-15 22:59:16,479:INFO:Preloading libraries
2023-10-15 22:59:21,464:INFO:Initializing predict_model()
2023-10-15 22:59:21,464:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=LGBMRegressor(n_jobs=-1, random_state=1234), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000291D143DAB0>)
2023-10-15 22:59:21,464:INFO:Checking exceptions
2023-10-15 22:59:21,464:INFO:Preloading libraries
2023-10-15 22:59:21,467:INFO:Set up data.
2023-10-15 22:59:21,475:INFO:Set up index.
2023-10-15 22:59:45,848:INFO:Initializing finalize_model()
2023-10-15 22:59:45,849:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=LGBMRegressor(n_jobs=-1, random_state=1234), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-10-15 22:59:45,849:INFO:Finalizing LGBMRegressor(n_jobs=-1, random_state=1234)
2023-10-15 22:59:45,854:INFO:Initializing create_model()
2023-10-15 22:59:45,855:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=LGBMRegressor(n_jobs=-1, random_state=1234), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-10-15 22:59:45,855:INFO:Checking exceptions
2023-10-15 22:59:45,858:INFO:Importing libraries
2023-10-15 22:59:45,858:INFO:Copying training dataset
2023-10-15 22:59:45,859:INFO:Defining folds
2023-10-15 22:59:45,859:INFO:Declaring metric variables
2023-10-15 22:59:45,860:INFO:Importing untrained model
2023-10-15 22:59:45,860:INFO:Declaring custom model
2023-10-15 22:59:45,861:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-15 22:59:45,863:INFO:Cross validation set to False
2023-10-15 22:59:45,863:INFO:Fitting Model
2023-10-15 22:59:45,968:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000359 seconds.
2023-10-15 22:59:45,968:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-10-15 22:59:45,968:INFO:[LightGBM] [Info] Total Bins 1070
2023-10-15 22:59:45,968:INFO:[LightGBM] [Info] Number of data points in the train set: 6006, number of used features: 25
2023-10-15 22:59:45,969:INFO:[LightGBM] [Info] Start training from score 365.914729
2023-10-15 22:59:46,095:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'Series', 'day_of_year',
                                             'dolar_oficial', 'temperature_C'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['month', 'day_of_week',
                                             'is_working'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Tr...
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'is_working',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['month', 'day_of_week'],
                                    transformer=OneHotEncoder(cols=['month',
                                                                    'day_of_week'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=1234))])
2023-10-15 22:59:46,095:INFO:create_model() successfully completed......................................
2023-10-15 22:59:46,265:INFO:_master_model_container: 23
2023-10-15 22:59:46,266:INFO:_display_container: 7
2023-10-15 22:59:46,291:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'Series', 'day_of_year',
                                             'dolar_oficial', 'temperature_C'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['month', 'day_of_week',
                                             'is_working'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Tr...
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'is_working',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['month', 'day_of_week'],
                                    transformer=OneHotEncoder(cols=['month',
                                                                    'day_of_week'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=1234))])
2023-10-15 22:59:46,292:INFO:finalize_model() successfully completed......................................
2023-10-15 23:22:21,817:INFO:Initializing predict_model()
2023-10-15 23:22:21,818:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000291D1576AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'Series', 'day_of_year',
                                             'dolar_oficial', 'temperature_C'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['month', 'day_of_week',
                                             'is_working'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Tr...
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'is_working',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['month', 'day_of_week'],
                                    transformer=OneHotEncoder(cols=['month',
                                                                    'day_of_week'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=1234))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000291BDF8BC70>)
2023-10-15 23:22:21,818:INFO:Checking exceptions
2023-10-15 23:22:21,818:INFO:Preloading libraries
2023-10-15 23:22:21,823:INFO:Set up data.
2023-10-15 23:22:21,828:INFO:Set up index.
